# -*- mode: org -*-
#+DATE: 2016-01-11
#+TITLE: Survey of Student Background
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_UP: ../
#+HTML_LINK_HOME: ../../
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2016 %e &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:nil

* Prerequisites and Course Content

1. [[../../Top/7140-syllabus.html]]

1. Quick survey: {Linux/Windows, C++/Java/other-PL, Eclipse/ IntelliJ Idea/
     Netbeans/ other-ide, make/ ant/ cli-tools familiarity; details of
     the largest program you-personally and also your-team wrote}.
   [Submit the written survey later.]
1. Define/Describe {Requirements, Specifications, Design,
     Implementation}
1. Typical deficiency: grammars, BNF, math logic.
1. Team Formation Due date: eof this week; email me your team details.
1. [[../../Top/index.html][Weekly Schedule and Due Dates]]
1. [[http://piazza.com/wright/spring2016/cs7140]]

1. CECS Accounts =thor.cs.wright.edu=
   1. For turnin use only/mostly
   1. Please turn in the prerequisites survey (see below).
   2. =~pmateti/cs7140/turnin Survey cs7140-prereq-survey.pdf=

* Our Programming Languages

1. C++ [[http://www.drdobbs.com/cpp/the-c14-standard-what-you-need-to-know/240169034][14]]; Fix this: [[../Examples/worms-2013-08-00][worms example code]];
   [[https://www.quora.com/Why-do-people-say-that-C++-has-a-lot-of-obscure-features]]

1. [[../Lectures/Java8][Java8]] and JavaFX
1. http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html
1. http://spectrum.ieee.org/computing/software/the-2015-top-ten-programming-languages
1. http://stackoverflow.com/research/developer-survey-2015



* Our Team Project

1. Overview of [[../Maintenance][software maintenance]]

1. Enahancing/ Correcting existing code is the daily grind for a
   software engineer. One should learn to engineer software so that it
   is easy to carry this out.  A complementary skill is to know when
   to treat a portion of code as black box, and when to treat it as a
   transparent box.

1. Every student, especially, graduate students, of software
   engineering should "study" the spec/design/impl of 100+ KLOC
   programs.  How deeply? Depends on individual ability and available
   time.  Unfortunately, for no open source project that I know of has
   spec/design documents.

1. Careless thinking causes bugs. Can you see this carelessness in the
   code of our chosen project?  What portion can we attribute to
   design? to spec? to requirements?

1. Our team project will be to take an open source project, that
   is/was quite popular, and improve it.

1. Official contributions to the project are certainly welcome, but
   this is not a "graded" goal.

1.  [[../../Top/7140-project.html]]

1. Teams? Scrap this idea??

* Home Work and Exams

1. [[../Metrics/index.html][Prog in the Small, Large, Giga; Metrics]]
1. [[../FormalMethods/assertions-in-the-small.html][Assertions in the Small]]
1. [[http://www.gnu.org/philosophy/shouldbefree.html][www.gnu.org/ philosophy/ shouldbefree.html]]
1. [[../Examples/worms-2013-08-00][worms example code]]

* Survey

I will try to fill you in on most of the prerequisites. The survey
below is for that purpose.

1. You are expected to have taken an undergrad level Software
   Engineering course.  

   1. Describe if any of the things we discussed today were covered in
      that course.
   2. Where did you take it?  What the course number and exact title?
   3. What was the text book used?
   4. Was there a project? Project description?

2. What is the largest Java program that you have written personally?
   Give the (approximated) number in lines of code.  Write a
   descriptive paragraph.

3. What is the largest C++ program that you have written personally?
   Give the (approximated) number in lines of code.  Write a
   descriptive paragraph.

4. How familiar are you with: 
   1. Other programming languages, e.g., Python, Scala
   2. Concurrency, threads, synchronization, ...
   3. Eclipse, Intellij Idea, other IDEs

5. What is your program development experience using Linux, and using Windows?

6. Are you planning to use for this course work:
   1. Your own desktop/laptop or WSU labs?
   2. Linux or Windows?

Turn in a pdf with the above answered in some detail.  By the end of
this week. =~pmateti/cs7140/turnin Survey cs7140-prereq-survey.pdf=

