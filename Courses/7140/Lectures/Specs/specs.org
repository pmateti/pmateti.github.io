

* Spec Design Discussion

+ Specs
  + Prescriptive/ Operational?
  + Declarative  Preferred
  + Should the Structure of Spec influence Design?
  + Another Program as a spec of this one?
  + English v Math + Logic + ...
  + JML (discussed later)

What is the notion of "correct" that you are using?  It can never be
independent of its entry- and exit assertions.  If we give impossible
to hold entry assertion, or if we give trivial to hold exit assertion,
then any program will be correct with respect to those assertions.
There is an implicit for all in the assertions.  E.g., when we write n
>= 0 in the entry assertions, it includes for all n that you may give
so that n >=0.  The n that is bound here is taken in all subsequent
assertions -- in loop invariants and in the exit assertion.  Neither
of the examples of yours satisfy our assertions for sorting: {n >= 0}
sorting-alg {sorted(a[0..n-1]) and perm(a, a')} We will soon be
discussing this under Specifications.
