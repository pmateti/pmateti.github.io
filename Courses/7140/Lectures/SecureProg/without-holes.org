# -*- mode: org -*-
#+DATE: 2016-03-16
#+TITLE: Software Without Security Holes
#+AUTHOR: Prabhaker Mateti

#+DESCRIPTION: Software Engineering
#+HTML_LINK_UP: ./index.html
#+HTML_LINK_HOME: ../../
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2016 %e &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))

#+OPTIONS: toc:t
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Bugs v Vulnerabilities v Exploit

1. A bug is a behavioral deviation from the functional spec. Read more
   on this topic: [[../Debugging]]

2. A vulnerability is a bug that has "security implications".
   1. Can you deduce this??
   2. Know it after the fact.

3. An exploit takes a vulnerabilty and builds software with an
   unexpected behavior.

4. 2016 Fact about the State of the Art: No contests to the following
   claim: No single example exists that is 1000+ SLOC and is bug-free.

* Past Exploits and Their Causes

1. Unauthorized Access
1. Denial of Service
1. Confidential Information leakage 
1. Hijacking the Flow of Control 
1. Smashing the stack / Arbitrary Code injection 
1. [[http://en.wikipedia.org/wiki/Cross-site_scripting][Cross-site scripting]] on wikipedia.  Recommended   Reading.
1. [[http://en.wikipedia.org/wiki/SQL_injection][SQL Injection]] on wikipedia.   Recommended   Reading.

* References

1. Prabhaker Mateti, [[http://www.cs.wright.edu/~pmateti/InternetSecurity/Lectures/SecSoftware/]["Software without Security Holes"]], 2012. Required
   Reading.

1. [[http://cwe.mitre.org/top25/][2011 CWE/SANS Top 25 Most Dangerous Software Errors]] Recommended
   Reading.

1. Dawson Engeler, et al., A Few Billion Lines of Code Later: Using
   Static Analysis to Find Bugs in the Real World, CACM, 10pp, 2010.
   http://courses.cs.washington.edu/courses/cse484/14au/reading/coverity.pdf.   Required Reading.
