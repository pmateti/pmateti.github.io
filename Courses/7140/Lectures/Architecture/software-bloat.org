# -*- mode: org -*-
#+DATE: 2016-02-25
#+TITLE: Software Architecture:  Software bloat
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: Software Engineering
#+HTML_LINK_UP: ../
#+HTML_LINK_HOME: ../../
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2016 %e &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:nil


* Software Bloat

1. Successive versions of software become slower, use,
   more resources, while improving only a little.
1. Moore's Law: "Over the history of computing hardware, the number of,
   transistors on integrated circuits doubles approximately every 18,
   months".   
1. Re-phrased as "Speed of hardware doubles every two years.",
1. Wirth's Law: "Software is getting slower more rapidly than hardware,
   becomes faster."  Niklaus Wirth, Turing Award Winner 199x.   
1. Niklaus Wirth, "A Plea for Lean Software," IEEE Computer, February 1995.   
1. Also known as The Great Moore's Law Compensator (TGMLC).   
1. Re-phrased as "Software gets slower faster than hardware gets faster".
1. Gates' Law: "The speed of software halves every 18 months." [seen,
   in [[http://www.catb.org/jargon/html/][The Jargon File]] ],
1. Steve McConnell, [[http://www.stevemcconnell.com/ieeesoftware/bp12.htm][Achieving Leaner Software]], Best Practices,
   (column), IEEE Software, Vol. 14, No. 6, November/December 1997.* Software Architecture "Issues",
1. Can we "define" Software Architecture?  Is it similar to,
   architecture of buildings, ... and cities, in Civil Engineering?,
1. OOP v Functional? [[./meyer-architecture.org]] Bertrand Meyer on OOP v,
   Functional Prog,
1. Trend: All large software being re-done "distributed" (including,
   cloud based) and multi-threaded.

* Software Bloat

1. Moore's Law: "Over the history of computing hardware, the number of
   transistors on integrated circuits doubles approximately every 18
   months".

   1. Re-phrased as "Speed of hardware doubles every two years."

1. Wirth's Law: "Software is getting slower more rapidly than hardware
   becomes faster."  Niklaus Wirth, Turing Award Winner 199x.

   1. Also known as The Great Moore's Law Compensator (TGMLC).

   1. Re-phrased as "Software gets slower faster than hardware gets faster".

1. Gates' Law: “The speed of software halves every 18 months.”

1. Software bloat: Successive versions of software become slower, use
   more resources, while improving only a little.

1. Niklaus Wirth, "A Plea for Lean Software," IEEE Computer, February 1995.

1. Steve McConnell, [[http://www.stevemcconnell.com/ieeesoftware/bp12.htm][Achieving Leaner Software]], Best Practices
   (column), IEEE Software, Vol. 14, No. 6, November/December 1997.

* References

1. All the articles cited above.  Highly recommended reading.

# Local variables:
# after-save-hook: org-html-export-to-html
# end:
