# -*- mode: org -*-
#+DATE: 2018-10-22
#+TITLE: Mutation Testing
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: CS7140 Adv Software Engineering
#+HTML_LINK_UP: ../
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:nil


* Mutation Testing Idea

1. How "good" are the tests?  Suppose we alter the source code, and
   apply the same tests.  Do the results change?
2. Simple Source Code Mutations
   1. Ex: Replace && in boolexp with ||
   2. Ex: Replace if B then S fi with while B do S od
   3. Exchange parameters/args (of the same type)
3. Does a test distinguish actual software S from a mutated S'.

* Plugins

5. IntelliJ IDEA + Eclipse plugin http://pitest.org/quickstart/mutators/
6. Eclipse Plugin http://muclipse.sourceforge.net/. Inactive 2011.

1. http://cs.gmu.edu/~offutt/mujava/ is "a mutation system for Java
   programs. It automatically generates mutants for both traditional
   mutation testing and class-level mutation testing. muJava can test
   individual classes and packages ... encapsulated in methods in
   JUnit classes."

* References

2. http://en.wikipedia.org/wiki/Mutation_testing  Required Reading.
1. https://www.cs.drexel.edu/~spiros/teaching/CS576/slides/8.mutation.ppt Slides

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
