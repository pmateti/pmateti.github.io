
# -*- mode: org -*-
#+DATE: 2018-06-14
#+TITLE: CS 7140 Reading List for MidTerm
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: CS7140 Adv Software Engineering
#+HTML_LINK_UP: ../
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 %e &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:nil

The reading list for this course is a transitive closure starting
from the ones linked on the course home page, plus the ones shown
below.  Items marked as Require Reading are sources for exam
questions.  Other items do enhance your understanding, but, if you
are not aiming for an A, you may skip.
  
* Reading List

** Assertions

1. Prabhaker Mateti, [[../Assertions/assertions-101.org]].  Required
   Reading.

1. Oracle.com, [[https://docs.oracle.com/javase/8/docs/technotes/guides/language/assert.html][Programming With Assertions]], Java specific. Required
   Reading.
    
1. Sorting {bubble sort, insertion sort, merge sort, quick sort, and
   heap sort}, searching {linear search, binary search}.  Your choice
   of a text book.  Our focus will be on assertions.  Required Reading.

1. Be fluent in Homework 1 content.  Our focus will be on
   assertions. Required.

** Spec + Design Examples

1. Meyer, Bertrand, "On Formalism In Specifications", IEEE Software,
   1985, vol. 2, no. 1. pp. 6-26.
   http://se.ethz.ch/~meyer/publications/ieee/formalism.pdf Required
   Reading.

1. Prabhaker Mateti, "Condense the List of Numbers",
   [[../Examples/Condense-Num-Ranges]] A good example of what pseudo code
   ought to be.  Unpublished.  2013.  Required Reading.
  
1. Mateti, Prabhaker, "Specification of the Tabulated Equations
   Problem," [[../Lectures/TabulateEqns/tabulate-eqns.html]]
   Unpublished.  2013.  Required Reading.

1.  Bertrand Meyer.
    http://se.ethz.ch/~meyer/publications/computer/contract.pdf
    "Design By Contract". IEEE Computer, Vol 25, No. 10, pp 40 -51,
    October 1992.  Also in his book "Object-Oriented Software
    Construction", 2e.  Required Reading.

** Design Documentation

1. http://www.literateprogramming.com/ "Design Documentation"
   Recommended Reading.

1. Donald E. Knuth, http://www.literateprogramming.com/knuthweb.pdf
   "Literate Programming", The Computer Journal, 1984, 27(2):
   97-111. Knuth is 1974 Turning Award Winner. Required Reading
    
1. Donald E. Knuth and M. D. McIlroy, "Programming Pearls: The Common
   Words Problem and its Solutions," Communications of the ACM,
   Vol. 29, No. 6, 471-483.  1986. [[../Examples/Knuth-CWP/cwp-knuth-cacm-1986.pdf]]
   Recommended Reading.
  
1. Prabhaker Mateti, [[../Examples/Knuth-CWP/cwp-pm-selected-pages.pdf]["Rigorous Re-Design of Knuth's Solution to the
   Common Words Problem]].  These are selected pages from a paper that
   is a work in progress.  Unpublished.  2018.  Required Reading.

** Published Examples

1. Mateti, Prabhaker, "A Specification Schema for Indenting Programs,"
   Software - Practice and Experience, Vol.13, 163-179, 1983.
   (Reprinted in Software Specification Techniques, McGettrick
   and Gehani (Eds.), Addison-Wesley 1986, 269-288, ISBN:
   0-201-14230-9.)
   http://onlinelibrary.wiley.com/doi/10.1002/spe.4380130206/pdf
   Required Reading.
  

** Homework1 and Project DITAA

1. Content of Homework1 and Project DITAA Specs

* Quotes

"There are two ways of constructing a software design: One way is
  to make it so simple that there are obviously no deficiencies, and
  the other way is to make it so complicated that there are no obvious
  deficiencies. The first method is far more difficult."
  -- Sir Charles Antony Richard Hoare, 1980 Turning Award Winner

"Program testing can be used to show the presence of bugs, but never
  to show their absence!"  -- Edsger W. Dijkstra, 1972 Turning Award
  Winner
  


* End

# Local variables:
# after-save-hook: org-html-export-to-html
# end:

