# -*- mode: org -*-
#+DATE: 2016-01-11
#+TITLE: Adv Software Engineering Course Prologue
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: CEG7380 Cloud Computing
#+HTML_LINK_UP: ../
#+HTML_LINK_HOME: ../../
#+HTML_HEAD: <style> P {text-align: justify} code, pre {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2016 %e &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a>  %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:nil

* Course Overview

** Prerequisites

1. Quick survey: {Linux/Windows, C++/Java/other-PL, Eclipse/ IntelliJ Idea/
     Netbeans/ other-ide, make/ ant/ cli-tools familiarity; details of
     the largest program you-personally and also your-team wrote}.
   [Submit the written survey later.]

1. CEG 4110 intro to Software Engineering and CS 3100 Data Structures
   and Algorithms.  Ignore the CS/CEG prefixes. Without the above two
   courses (or their equivalent) you will find this course near
   impossible.  More details at [[../../Top/7140-syllabus.html]]

1. It is also expected that you are (i) fluent in Java and/or C++, and
   (ii) comfortable developing programs using Eclipse, Netbeans, or
   Intellij Idea.

1. Define/Describe {Requirements, Specifications, Design,
   Implementation}.

1. Typical deficiency: grammars, BNF, math logic.  We will fill you in
   on these.

** Course Content

1. Course Home Page: [[http://www.cs.wright.edu/~pmateti/Courses/7140/Top/][CS 7140: Advanced Software Engineering]] Visit often.

3. [[http://piazza.com/wright/spring2016/cs7140]]  Please enroll.
4. Team Formation Due date: eof this week.  Post on Piazza your team
   details.

** Accounts

1. CECS Account =thor.cs.wright.edu=
   1. This is a large Linux server. Intel Xeon 24 core CPU
      X5680, 132 GB RAM, etc.
   2. Unless you have a "named" account (not cs7140xy), your files
      will be wiped out soon after the finals.
   3. Please turn in or upload to Piazza the prerequisites survey (see below).
   4. =cs714000/turnin Survey cs7140-prereq-survey.pdf=

2. WSU Account =unixapps1.wright.edu=
   1. As a student of WSU, you have an account (named as in w123abc)
      on this Linux server.
   2. You can set up your own web site on this machine in the
      directory =~/www/=
   1. Read https://www.wright.edu/information-technology/

3. These two machines do not share userids or passwords.

* Our Programming Languages

1. [[../Languages]] C++14
1. [[../Languages]] Java8 + JavaFX
1. Language Popularity Surveys

   1. http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html
   1. http://spectrum.ieee.org/computing/software/the-2015-top-ten-programming-languages
   1. http://stackoverflow.com/research/developer-survey-2015

* Expected Work

1. Two Homeworks, Two Exams, One Team Project

1. Exams are on online/ take-home -- tool use permitted.  -- but not
   for surfing for answers.  High expectations of honor code.

1. Links to previous HW, Exams, Project are on the course home page.

* Survey

1. Please take the [[./survey.org][survey]].

* State of Software Engineering

1. [[./state-of-SE.org]]
1. A Few Opinions of [[./hehner.org][Professor Hehner]]

* Course Goals

To enable you to

1. Develop a 1000+ lines program with great confidence.  No bugs. Well
   written Requirements, Specs, Design, Implementation, and Testing
   documents.
2. Practice with the best open source tools.
3. Be fluent in Java and C++.  Become aware of newer programming
   languages.
3. Comprehend research literature.

* References

Reading list for this course is a transitive closure starting from the
ones linked on the course home page. Items marked as Require Reading
are sources for exam questions. Other items do enhance your
understanding, but, if you are not aiming for an A, you may skip.

1. Gerard J. Holzmann, The Power of Ten -- Rules for Developing Safety
   Critical Code,'' IEEE Computer, June 2006, pp. 93-95.
   http://spinroot.com/gerard/pdf/P10.pdf Required Reading.

1. Kent Beck and Martin Fowler,
   http://sourcemaking.com/refactoring/bad-smells-in-code 201x,
   Required Visit.

1. http://www.dcs.gla.ac.uk/~hcp/psd/lectures/badsmells.pdf
    http://www. dcs.gla.ac.uk/ ~hcp/ psd/ lectures/ badsmells.pdf
    Required Reading.

1. Mantyla, M. V. and Lassenius, C, "Subjective Evaluation of Software
   Evolvability Using Code Smells: An Empirical Study", Journal of
   Empirical Software Engineering, vol. 11, no. 3, 2006, pp. 395-431.
   http://www.soberit.hut.fi/~mmantyla/ESE_2006.pdf Skim Reading.

1. Prabhaker Mateti, [[../][All My Lecture Notes]], 2016.
   Required Reading.


