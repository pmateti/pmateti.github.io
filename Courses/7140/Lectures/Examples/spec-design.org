# -*- mode: org -*-
# -*- org-export-html-postamble:t; -*-
#+STARTUP:showeverything
#+TITLE: Famous Examples of Spec/Design
#+AUTHOR: Prabhaker Mateti
#+OPTIONS: toc:nil
#+LINK_HOME: ../../
#+LINK_UP: ../../Lectures
#+DESCRIPTION: CS7140 Software Engineering Lecture
#+STYLE: <style> @media screen {BODY {margin: 10%} }</style>
#+BIND: org-export-html-preamble-format (("en" "<a href=\"http://cecs.wright.edu/~pmateti/Courses/7140/\">CS 7140 Advanced Software Engineering</a>"))
#+BIND: org-export-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2013 %e &bull; <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a>"))

* Examples of Spec/Design
1. Others and Bertrand Meyer, "How Specifications Change and Why You
   Should Care" [[http://arxiv.org/pdf/1211.4775v2.pdf][PDF]] Jan 2013. Required Reading.
1. In our lectures so far
  1. Telegram
  1. Tabulate Equations
  1. Condense the List of Numbers
  1. pretty printing
  1. Worms
1. Knuth's Common Words Problem

* JavaCard
1. JavaCard is a subset of Java chosen for small memory, weak-CPU, embedded
   devices.  Widely used in SIM cards and ATM cards.
1. http://code.google.com/p/jcml/  Java Card Specification Language based on JML
1. http://www.javacardforum.org/
1. Erik Poll, Joachim van den Berg, Bart Jacobs, 
   "Specification of the JavaCard API in JML"
   http://cs.ru.nl/E.Poll/papers/cardis00.pdf  Recommended Reading.
1. Nestor Catano, Tim Wahls, "Executing JML Specifications of Java
   Card Applications: A Case Study", search for PDF Link, 2009.
   Recommended Reading

* Knuth's Common Words Problem
1. "Given a file of text, and a number k, print the k most common words."
1. Used as an example of Literate Programming
1. Criticized as an example of software development
1. Our interest here:  How to describe its spec + design?
1. Defs of text, words, ...
1. Def of "common" word
1. nary Tries, ...
1. Destructive Traversals
1. Donald E. Knuth, "A Solution to the Common Words Problem",
   Communications of the ACM, 1986, search for PDF link.  Knuth is a
   Turing Award winner. Required Reading.
1. [[../CWP/cwp.html]]

* Knuth, Donald E. "TEX: The Program"

1. Knuth, Donald E. "TEX: The Program", Volume B of Computers and
   typesetting. (1986). 624 pages, Addison-Wesley Professional;
   ISBN-10: 0201134373 One and onle one review on Amazon.com: This
   book is extremely valuable to those hoping to understand and reuse
   Knuth's classic typesetting algorithms. It contains the every
   detail needed for the implementation. Each section has a number
   associated with the source code. Besides, it can also serve as an
   excellent example of a large project for computer science
   students. One can understand better "the art of computer
   programming" after reading this book. … Recommended Reading ;-)

* A Specification Schema For Indenting Programs

1. Prabhaker Mateti†, Article first published online: 27 OCT 2006
   http://onlinelibrary.wiley.com/doi/10.1002/spe.4380130206/abstract
   Abstract A two level specification of the functional behaviour of a
   class of indenting programs for Pascal is presented. The
   transformation that these programs perform on the input text is a
   composition of splitting input lines, altering the blank space
   between lexical tokens and computing the margin required in front
   of each of the split lines. The high level specification is given
   as a stylized Pascal grammar in Extended BNF. In contrast, the low
   level specifications, which are operationally closer to a program,
   and which define how syntactically invalid text is dealt with,
   require several mathematical functions that capture the essence of
   these basic transformations. The specifications of an indenting
   program for Pascal are then obtained as a further elaboration of
   these functions. Most indentation styles appearing in the
   literature can be specified with precision using methods developed
   in this paper. Our experience in this case study indicates that
   although specifications for real-life programs can be given using
   simple mathematics, the effort required is still considerable.

* References

1. Others and Bertrand Meyer, "How Specifications Change and Why You
   Should Care" [[http://arxiv.org/pdf/1211.4775v2.pdf][PDF]] Jan 2013. Required Reading.

1. Donald E. Knuth, "A Solution to the Common Words Problem",
   Communications of the ACM, 1986, search for PDF link.  Knuth is a
   Turing Award winner. Required Reading.
