# -*- mode: org -*-
# -*- org-export-html-postamble:t; -*-
#+STARTUP:showeverything

#+Date: 2015-06-15
#+TITLE:  Programming Examples with a Software Engineering Perspective
#+AUTHOR: Prabhaker Mateti
#+OPTIONS: toc:t
#+DESCRIPTION: WSU CS 7140 Advanced Software Engineering
#+HTML_LINK_HOME: ./index.html
#+HTML_LINK_UP: ./
#+HTML_HEAD: <style> P {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+STARTUP:showeverything
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> %d"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2015 &bull; <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))

* Tiny.Tiny Examples of Spec/Design

1. [[./Dutch-National-Flag]] Correct by Design example by Dijkstra.
1. [[./Quick-Sort]] Why is it hard to understand and then remember?
1. [[./Small-Set]] A simple implementation of a set of integers.  Shows
   pre/post and class invariants.
1. [[./Condense-Num-Ranges]] E.g., given 2 - 9 and 3 -12, condense to
   2 - 12.  Spec and design.
1. [[./Magic-Squares]] TBD incomplete
1. [[./Tabulate-Eqns]] such as a collection from algebra.  Spec and design.
1. [[./Telegram-Problem]] The problem of Peter Naur.  Famous people wrote
   buggy solutions!
1. [[./Worms]] wiggly worms, some vegetarian, others cannibals.  Presented
   as (i) a software "maintenance" problem, and (ii) as an example of
   writing assertions.
1. [[./TicTacToe-JavaFX-UnRedo]] Presented as a software "maintenance"
   problem.  Is it bug free?
1. [[./Game-Of-Life]] Conway's GoL. Presented as a software "maintenance"
   problem.  TBD Incomplete.
1. [[./Columnize-Words]] Part of /bin/ls spec.


* JavaCard

1. JavaCard is a subset of Java chosen for small memory, weak-CPU, embedded
   devices.  Widely used in SIM cards and ATM cards.
2. http://code.google.com/p/jcml/ Java Card Specification Language
   based on JML
3. http://www.javacardforum.org/
4. Erik Poll, Joachim van den Berg, Bart Jacobs, 
   "Specification of the JavaCard API in JML"
   http://cs.ru.nl/E.Poll/papers/cardis00.pdf  Recommended Reading.
5. Nestor Catano, Tim Wahls, "Executing JML Specifications of Java
   Card Applications: A Case Study", search for PDF Link, 2009.
   Recommended Reading

* Knuth's Common Words Problem

1. "Given a file of text, and a number k, print the k most common words."
1. Knuth's example of Literate Programming 
3. Criticized as an example of software development.  A "Faberge" egg?!
4. Our interest here:  How to describe its spec + design?
5. Defs of text, words, ...
6. Def of "common" word
7. nary Tries, ...
8. Destructive Traversals
9. Donald E. Knuth, "A Solution to the Common Words Problem",
   Communications of the ACM, 1986, search for PDF link.  Knuth is a
   Turing Award winner. Required Reading.
10. [[./Knuth-CWP]]

* Knuth, Donald E. "TEX: The Program"

1. Knuth, Donald E. "TEX: The Program", Volume B of Computers and
   typesetting. (1986). 624 pages, Addison-Wesley Professional;
   ISBN-10: 0201134373 

1. An example of Literate Programming.

1. One and only one review (last I looked) on Amazon.com:  "This book is
   extremely valuable to those hoping to understand and reuse Knuth's
   classic typesetting algorithms. It contains every detail needed for
   the implementation. Each section has a number associated with the
   source code. Besides, it can also serve as an excellent example of
   a large project for computer science students. One can understand
   better "the art of computer programming" after reading this book."
   Recommended Reading =;-)=

* A Specification Schema For Indenting Programs

1. Mateti, P., ``A Specification Schema for Indenting Programs,'' {\sl
   Software -- Practice and Experience,} Vol.13, 163--179, 1983.
   (Reprinted in {\it Software Specification Techniques}, McGettrick
   and Gehani (Eds.), Addison-Wesley 1986, 269--288, ISBN:
   0-201-14230-9.)  Recommended Reading =;-)=

1. Article first published online: 27 OCT 2006
   http://onlinelibrary.wiley.com/doi/10.1002/spe.4380130206/abstract
   Abstract: "A two level specification of the functional behaviour of a
   class of indenting programs for Pascal is presented. The
   transformation that these programs perform on the input text is a
   composition of splitting input lines, altering the blank space
   between lexical tokens and computing the margin required in front
   of each of the split lines. The high level specification is given
   as a stylized Pascal grammar in Extended BNF. In contrast, the low
   level specifications, which are operationally closer to a program,
   and which define how syntactically invalid text is dealt with,
   require several mathematical functions that capture the essence of
   these basic transformations. The specifications of an indenting
   program for Pascal are then obtained as a further elaboration of
   these functions. Most indentation styles appearing in the
   literature can be specified with precision using methods developed
   in this paper. Our experience in this case study indicates that
   although specifications for real-life programs can be given using
   simple mathematics, the effort required is still considerable."


* A Programmers' Editor

1. [[./Editor]]



* References

1. Others and Bertrand Meyer, "How Specifications Change and Why You
   Should Care" [[http://arxiv.org/pdf/1211.4775v2.pdf][PDF]] Jan 2013. Required Reading.

1. Donald E. Knuth, "A Solution to the Common Words Problem",
   Communications of the ACM, 1986, search for PDF link.  Knuth is a
   Turing Award winner. Required Reading.

