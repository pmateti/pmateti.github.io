
# -*- mode: org -*-
#+date: 2018-08-31
#+TITLE: Questions on IPFS Usage \bull{} 2018-09-01
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: https://cecs.wright.edu/~pmateti/Research/IPFS/Lectures/
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./index-slides.html>Slides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1><a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Abstract

This is a rewrite of "Queries.pdf" I received from Sethu on
Aug 31, 2018.  For my own clarity.

* Problem Context: Share a Secret among a Group

1. Consider a group of 5 people X1, X2, X3, X4, and X5.  X1 wants to
   share a file F1 with the others.  [pm: Is the number of X_i the
   same as number of "shares"?]

** Visual Cryptography (VC)


1. X1 will apply VC secret sharing scheme (1, 3, 5).  The 5 indicates
   that F1 will be "split" into pieces (called shares in VC) S1, S2,
   S3, S4, and S5.

2. The 1 in (1, 3, 5) indicates that one piece among the 5 pieces, say
   S_1, is essential, in the following sense.  The 3 indicates that
   the essential piece and any two other shares are necessary and
   sufficient to regenerate the file F1.

** IPFS Deployment

1. All the 5 pieces Si are stored in the IPFS.  [pm: Do we store F1?]
   [pm: Did we apply asymmetric crypto?]

1. The hash [pm: Five hashes?] generated by IPFS is [are] given to
   everyone in the group.  Each individual of the group will maintain
   a chain [pm: ??]  that stores hash of the share along with the file
   ID [pm: F1?].
1. Retrieve on demand basis: When some nodes want to recreate the file
   the shares need to recombine with the essential share.

** IPFS Deployment #2

1. Requirement: Others (!= Xi) should not be able to access F1 or the S1.
1. Requirement: Other pieces (S2, ..., S5) can be viewed by
   anyone. [pm: Decrypted?]

** IPFS Deployment #3

1. PM: How are the hashes of S1, ..., S5 given to X_i?
1. PM: Above actions are carried out by X1.
1. PM: How is S1 identified?

* Work Done

[PM: Did not have the patience to include JPGs of
pure-text screenshots.]
[PM: Outline of these steps is not useful.  I am assuming that you are
following https://ipfs.io/docs/getting-started/.]

** Step 1: Installed go-ipfs

Installed IPFS in two systems (consider as node A and Node B) that were in
same subnet (Intranet).

** Step 2: Initiated Daemon

1. Peer ID
1. Public Key
1. Private Key
1. Exported the IPFS to different path and viewed
1. Modification Observed in above all 3 parameters
1. When a new terminal is opened and IPFS id is given it will display the initial ID

** Step 3: Add Files to IPFS

1. Once a file is added, hash is generated and displayed
1. Hash is used for retrieving
1. Pin (recursive and indirect) and Unpin the file

* Questions

** Q1: DHT

1. Q1: Is the path traceable using DHT? (as DHT stores the pointer to
   the node that stores digital object).  AmritaU Claim: If it is
   traceable, Content Reveal Attack [pm: cite?] is possible.  [pm:
   What path?]
   1. If the value is "short", it can be stored as the paired value
      DHT[key] in the DHT itself.

1. A1: [PM] I have to check this out.  On my PC, IPFS is not
   functioning well.  I would like to experiment more with DHT.

** Q2:  Availability of Content after Unpin

1. Q2: When the node has pinned the digital objects, and then unpinned the
   same, will the content be still available? (Because in IPFS
   the data lives forever.)

1. A2: [PM] See my answer to Q5.
1. [PM] Read https://github.com/ipfs/go-ipfs/issues/590 "Pinning semantics
   slightly confusing". Jan 2015. Protocol Labs person "whyrusleeping"
   closed the topic though. jbenet is Juan Benet.

1. [PM] I am yet to find clear defs of "direct" and "recursive" pinning.

** Q2: Pin Semantics [contd]

1. direct = pin that specific object.
1. recursive = pin that specific object, and indirectly pin all its decendants
1. indirect = pinned indirectly by an ancestor (like a refcount)
1. From jbenet Mar 7, 2015


** Q3: Peer IDs

1. Q3: Is the peer ID unique?
1. A3: [By AmritaU] Yes, Peer ID is unique for the system/
   node. Though multiple export action performed finally when we tried
   to retrieve IPFS ID, the initial value is displayed ( peer id
   generated at the time of initial installation).
1. Peer IDs are unique.  Across the world.  This is similar to
   https://en.wikipedia.org/wiki/Universally_unique_identifier.

** Q4: Config File

1. Q4: Replace the config file and verify the peer ID is over written
   or not.
1. A4: Config file is by default at =~/.ipfs/config=.  Replacing this
   file ought to be followed buy =ipfs init=.  Then peer id and other
   details change.


** Q5: Availability of Content

1. Q5: When a node is down/ disconnected from network, will be able to
   get the content pinned by that node?
1. A5: [AmritaU] Yes, it is possible to retrieve the content.
1. A5: [PM] Not guaranteed, unless incentivization (filecoin) is in
   place, etc.

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
