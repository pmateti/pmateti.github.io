# -*- mode: org -*-
#+TITLE: Dining Philosophers on Scala Akka
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: Distributed Computing
#+date: 2020-01-31
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2020 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0


* Dining Philosophers on Akka

1. The source code examples below are "implementing" the famous Dining
   Philosophers Problem.  Not the solution.

1. [[./scalaExamples/DiningHakkersOnBecome.scala][DiningHakkersOnBecome.scala]] minor mods by Mateti

1. [[./scalaExamples/DiningHakkersOnFsm.scala][DiningHakkersOnFsm.scala]] minor mods by Mateti

1. My versions can be compiled and run without using Activator: =%
   scalac DiningHakkersOnBecome.scala; % scala DiningHakkersOnBecome=

1. [[./dining-philosophers-akka-fsm.html][dining-philosophers-akka-fsm]] fairly detailed explanation of the
   Akka FSM based code.

1. https://www.typesafe.com/activator/template/akka-sample-fsm-scala


* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
