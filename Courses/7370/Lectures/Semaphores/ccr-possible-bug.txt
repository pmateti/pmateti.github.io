
(This was from a past student.)

Please consider following as an implementation of CCR :

nd,ng = 0; g = 0;

P(m)
while not B do
  nd++
  if ng>0 then V(g) else V(m) fi
  P(d)
  P(g)
  ng--
od
S
while nd > 0  do V(d); nd-- ; ng++  od
if ng > 0 then V(g) else V(m) fi

The algorithm is considered incorrect because d is not a binary semaphore
and since we are doing V(d) in a while stmt., it may be the case that a 
process does P(d) twice thus violating fairness.

I think that one process can not do P(d) twice because
after doing P(d) it will be stuck at P(g) and since V(g) is done after
doing all V(d)'s, all processes which were stuck at P(d) will get
advanced to P(g).  So which ever process passes P(g) and comes back in
loop will be stuck at P(d) again thus not succeeding in doing V(d)
again in place of some other process.  Am I correct ? If so, is this
algorithm correct ?
