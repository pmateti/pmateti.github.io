
# -*- mode: org -*-
#+date: 2017-09-11
#+TITLE: Access Control Models
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2017 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Access Control Principles

1. Who (subject) can do What (operations) on Whom (objects) ?

1. Privilege of Least Authority: Who can/ should do an operation P on
   object B?  Among the "who", the group that has the least authority
   should.

1. Develop Fine-Grained Access Control Permissions
1. Ex: Read/write permissions are too coarse.  A "back-up operator"
   can be given rw permissions -- but this is too much.  We can
   design/implement a new permission that can "just copy" files.  This
   copy operation is fine grained.
1. Role Based Access Control (RBAC)

* Access Control Models and Mechanisms

1. [[./DAC.org]] Discretionary Access Control; Linux default permissions
1. [[./MAC.org]] Mandatory Access Control; Users cannot change these policies
1. [[./LKM.org]] Linux Kernel Modules
1. [[./LSM.org]] Linux Security Modules
1. [[./selinux.org]] "Security Enhanced" Linux LSM; contributed by NSA (2000s?)
1. [[./seandroid.org]] SELinux adapted to Android


* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
