# -*- mode: org -*-
#+date: 2017-09-15
#+TITLE: Refresher on Networking
#+AUTHOR: Prabhaker Mateti
#+DESCRIPTION: Mateti: Android Internals and Security
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2017 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:2

* Networking Layers

** Layered Models
#+CAPTION: OSI 7 Layers v DoD 4 Layers (numbered upwards) [Source: Web]
#+NAME:   fig:DoD-OSI-model
#+ATTR_HTML: :align center :width 80%
[[./DoD-v-OSI-model2.gif]]

** Layered Models #2
 
1. TCP/IP Suite is a collection of protocols.

1. Ethernet, etc: Layer 1 (lowest) of the 4 layer DoD Network Protocol
   Stack Model.

3. IP is in Layer 2.  That is, it is not concerned with hardware details.

4. TCP and UDP are in Layer 3.

5. Application protocols (Layer 4): http; ssh, ...
6. DoD = US Department of Defense

* Networking Hardware Technology

** Ethernet

1. Responsible for delivering data over the hardware media.

1. Every Ethernet *frame* has two addresses: Sender's MAC address,
   Receiver's MAC address; 6 bytes + 6 bytes.

1. Manufaturer sets the MAC address.  Given a MAC address, we can
   discover the manufacturer.

** WiFi

#+CAPTION: Ethernet Frame v Wifi Frame  [Source: Web]
#+ATTR_HTML: :align center :width 100%
#+NAME:   fig:ethernet-wifi
[[./ethernet-wifi.jpg]]

** WiFi #2

1. WEP Wired Equivalent Privacy (WEP)
1. WPA2 https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access Required Reading


** Bluetooth

1. [[http://cs.stanford.edu/people/eroberts/courses/soco/projects/2003-04/wireless-computing/sec_bluetooth.shtml][Bluetooth Security]] Highly Recommended Reading

** NFC (Near Field Communication)

1. https://developer.android.com/guide/topics/connectivity/nfc/index.html
   Highly Recommended Reading

* Networking Protocols

** IP

1. Every IP *datagram* (packet) has Sender's IP address, Receiver's IP
   address

1. Data payload is one of: TCP packet, UDP packet, ...

2. The Receiver's IP address makes it possible to route the datagram.

** IP Addresses

   1. IPv4: 4 bytes + 4   bytes.
      1. Each byte value is written in decimal. Separated by a dot.
      2. Ex: 192.168.17.243; 127.0.0.1

   2. IPv6: 16 bytes + 16 bytes.  
      1. Each 2-byte value written as 4 hex digits. Separated by a colon.
      2. Ex: 2001:0db8:85a3:08d3:1319:8a2e:0370:7348
      3. The world was supposed to have switched to IP6 in 2008.  Real
         Soon Now.

3. IP addresses are set at boot time by the OS.

   4. IP addresses are assigned by https://www.iana.org/.

   5. There are private ranges of IP addresses that we can choose
      without permission.

   6. Given a public IP address, we can discover its rough location.

** IP Routers

3. Route = a path from sender to receiver, via 0 or more (intermediaries
   known as) routers/ gateways

4. Router == computer system specializing in routing
   1. Multiple network cards
   2. Routing Table

3. ARP Address Resolution Protocol: Needs to know the IP address to
   Ethernet address mapping of the LANs.  [[./networking-ARP.org]]

** Port Numbers

1. OS produced 16-bit (abstract) numbers; now "standardized" in  =/etc/services=
1. TCP port# separate from UDP port#
1. The port#s are part of the TCP packet
1. Privileged: 0 .. 1024; Ordinary users should use: > 1024
1. http://www.iana.org/assignments/port-numbers
1. Sockets v Ports

** TCP Transmission Control Protocol

1. Segments = TCP packets, contain
   1. sender's and receiver's port numbers
   2. data payload

2. TCP is connection-oriented
   1. 3-way hand shake to establish a connection
   2. 4-way hand shake to terminate a connection

3. TCP is reliable but slower :: UDP unreliable but faster
4. TCP has many features: congestion adjustment, duplex, ...
5. Several variations in TCP implementations
   E.g., read  [[http://inst.eecs.berkeley.edu/~ee122/fa05/projects/Project2/SACKRENEVEGAS.pdf][Tahoe, Reno, New-Reno, SACK and Vegas]] 2005.  Reference.

5. [[./TCPIP-CEG4420.ppt]] TCP/IP Refresher, 2014.  Required Reading.

** ARP Address Resolution

1. Given the IP address, find the MAC address.  Why do we need this?
   Because of IP routing.

1. [[./networking-ARP.org]]

** DNS, Domain Name Service

1. Translate a mnemonic name, e.g., www.google.com, to its IP address
   173.194.46.81

1. Fully Qualified Host Name

1. Domain Name servers

1. [[./networking-DNS.org]]

** ssh, Secure Shell Client+Server

1. [[http://cecs.wright.edu/~pmateti/Courses/2350/Labs/Network/NetworkLab.html][Networking Intro]] from [[http://cecs.wright.edu/~pmateti/Courses/2350][CEG2350]] by [[http://cecs.wright.edu/~pmateti/][pmateti]]


** VPN, Virtual Private Network

1. [[http://cecs.wright.edu/~pmateti/Courses/2350/Labs/Network/NetworkLab.html][Networking Intro]] from [[http://cecs.wright.edu/~pmateti/Courses/2350][CEG2350]] by [[http://cecs.wright.edu/~pmateti/][pmateti]]

* Network Setup and Utilities

1. http://cecs.wright.edu/~pmateti/Courses/4420/NetUtils/index.html
   Required Reading


** Network Config Files (on Linux)

1. =/etc/resolv.conf= DNS details
   1. nameserver 130.108.2.10
   1. nameserver 8.8.8.8

1. =/etc/hosts= Table of IP addresses and their FQHNM (mnemonic host names)
1. =/etc/network/interfaces= (Unless using wicd or network-manager)

* Proxies

1. A proxy is a client-server combination.

1. An HTTP Proxy serves two intermediary roles as an HTTP Client and
   an HTTP Server for security, management, and caching
   functionality. The HTTP Proxy routes HTTP Client requests from a
   Web browser to the Internet, while supporting the caching of
   Internet data.

1. https://en.wikipedia.org/wiki/Proxy_server

* Network Security

** Security Requirements

1. We use the term *message* as an abstraction of a series of related
   packets that can be defined rigorously in the context of a network
   protocol.

** Security Requirements

1. Message *integrity* is the guarantee that the (i) body content, (ii)
   the identity of recipient, and (iii) the identity of the sender
   have not been altered (in transit).

1. *Delivery*: We expect a message to be received by the intended in a
   finite (say a few seconds) amount of time after being sent.

** Security Requirements

1. *Non-repudiation* is often considered a legal concept.  But, here
   we are concerned with (i) a receiver after having received a
   message denies receiving, (ii) a sender after having sent a message
   denies sending.  We wish to have proof of delivery of a message.

** Security Requirements

1. A message may be intercepted, without violating the integrity.
   This is loss of *confidentiality*.  It is often unstated but the
   message is intended for the eyes of the named recipient.

1. *Authenticity* establishes to the recipient that the message was
   indeed composed by the sender.


** Passive Exploits

1. Passive: Do not alter the network stream

1. Sniffing

1. Traffic Analysis

** Active Exploits

1. Many of these discussed in detail later.
1. Active: Alter the network stream
1. IP address spoofing
1. MitM (Man-in-the-Middle) Attacks
1. DoS (Denial of service) attacks
1. DDoS (Distributed Denial of service) attacks

** Active Exploits #2

1. Insertion Attacks
1. ARP Poisoning in the LAN
1. DNS Poisoning
1. Sniper: Terminate a connection
1. Hijacking a connection

* Network Firewalls

1. [[./firewalls.org][Firewalls]] intro


* References

1. [[http://cecs.wright.edu/~pmateti/][Prabhaker Mateti]], Overview of TCP/IP Suite of Protocols,
   [[./TCPIP-CEG4420.ppt]], 2014.  Required Reading.

1. Prabhaker Mateti, [[http://cecs.wright.edu/~pmateti/Courses/4420/NetUtils/index.html][Network Setup and Utilities]]. 2013. Required Reading.

1. Eric Roberts, http://cs.stanford.edu/people/eroberts/courses/ The
   Intellectual Excitement of Computer Science; Internet 2; Wireless
   Computing.  201x. Highly Recommended Reading

1. UC Berkeley Student Project, "A Comparative Analysis of TCP Tahoe,
   Reno, New-Reno, SACK and Vegas", [[http://inst.eecs.berkeley.edu/~ee122/fa05/projects/Project2/SACKRENEVEGAS.pdf][PDF]], 2005.  Reference

1. Prabhaker Mateti, "Hacking Techniques in Wireless Networks", in The
   Handbook of Information Security, pp 991 - 1001, ISBN:
   0-471-64833-7, John Wiley, December 2005. [[http://cecs.wright.edu/~pmateti/Research/WirelessHacks-Mateti-2004.pdf][PDF]]. Required Reading.

1. WPA2 https://en.wikipedia.org/wiki/Wi-Fi_Protected_Access Required Reading

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
