
# -*- mode: org -*-
#+date: 2018-10-29
#+TITLE: Kernel Exploits #1 Overview
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:2

* Overview

1. Two more articles: [[./exploits-classic.org][Kernel Exploit Classics]], [[./exploits-recent.org][Recent Kernel Exploits]]
1. [[../Hardening/BuildKernel]] Overview of Kernel Source and How to Build
   a Kernel
1. [[../Hardening/Kernel]] Applying patches, Building the hardened Kernel,
   Deploying the Kernel

1. Over the years there have been many kernel bugs.  In the 1000s.


** Objectives

1. This page and related articles give brief technical descriptions of
   a few kernel vulnerabilities.  Discovered in 2017 and 2018.  Or,
   classics.  Network related items are skipped.  Not exhaustive.

1. Objective: Provide technical descriptions accessible to students of
   cyber security.

1. Objective: Become familiar with CVE, and the description structure
   of a CVE.

1. Objective: Have a decent technical understanding of the
   vulnerability and the exploit.

1. Objective: Be able to apply a patch and rebuild and deploy the new
   kernel.  A patch to mitigate/ fix the vulnerability is provided by
   experts.

* Kernel Expectations: Provide "Standard" Abstractions

1. A computer system can be divided into three pieces:

   1. [Hardware] Motherboard (CPU, RAM, and other chips), various daughter cards (e.g., a graphics card, a wireless network card), keyboard, mouse, screen, hard disks, other IO devices, and power supply.
   2. [Software] Operating system, and applications.
   3. [Firmware] A basic input/output subsystem (UEFI/BIOS) preloaded
      into a ROM

1. OS Kernel Definition by Components: OSK == VirtualMem + FileM +
   ProcessM + Net + IO + UserM + (Boot) + [SysPrg] ;; M stands for
   Management.

1. http://cecs.wright.edu/~pmateti/Courses/2350/Labs/OS-on-USB/OSonUSBLab.html
   Recommended Reading.

* Kernel Expectations: Prevent/ Detect/ Mitigate/ Repair  Exploits

1. In this course, we are focused on the security aspects of the kernel.
1. Preventing Security Exploits is an expectation of all OS kernels,
   and system software.  There is no consensus on the definition of
   what "exploits" are, and what we mean by "prevention".

1. A few specific classes of security exploits are describe below.
1. Underneath all these exploits is the technique known as privilege
   escalation.

* What is a Kernel Bug?

1. Kernel Bug: A bug in the code of the kernel.
1. In a course on Software Engineering, we define a bug as a deviation
   from the spec.  
1. But, Linux still does not have a spec, informal or formal based on
   math + logic + grammar.  What we do have are expectations.
   Functional, performance and other expectations.  A deviation from
   these is a bug.
1. A crash is a bug.
1. A hang is a bug.
1. Recall:  Bug -> Exploit -> Vulnerability -> Attack

* Current Bug-Status of OS Kernels

1. All OS kernels, Linux, MacOS, Windows, are buggy.  OS kernels have
   not yet reached a state of being bug free.  A security issue in a
   bug makes it vulnerable.  An exploit presents an actual use of this
   vulnerability in demonstrating the security issue.

1. https://www.cvedetails.com/product/47/Linux-Linux-Kernel.html Linux
   Kernel Vulnerability Statistics 1999 - 2018.  Required Visit.

1. See Coverity articles for Linux kernel bugs.  https://scan.coverity.com/projects/linux

* References

1. https://www.cvedetails.com/product/47/Linux-Linux-Kernel.html Linux
   Kernel Vulnerability Statistics 1999 - 2018.  Required Visit.

1. https://courses.linuxchix.org/kernel-hacking-2002/08-overview-kernel-source.html
   LinuxChix Kernel Hacking Lessons. 2002

1. https://kernelnewbies.org/KernelHacking Background on kernel
   development 2017 -- 

1. https://github.com/xairy/kernel-exploits "A bunch of
   proof-of-concept exploits for the Linux kernel" 2016 -- current.

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
