
# -*- mode: org -*-
#+date: 2018-10-19
#+TITLE: BufOvf 2018 pmNotes
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0


1. https://dl.packetstormsecurity.net/papers/attack/64bit-overflow.pdf 64 Bits Linux Stack Based Buffer Overflow 12pp
1. https://bytesoverbombs.io/exploiting-a-64-bit-buffer-overflow-469e8b500f10 Nov 4, 2017;; Long winded. Uses Kali, python, metasploit pattern find tool, msfvenom, python payload generator; uses linux/x64/shell_reverse_tcp payload so the remote mc controls our hoast when exploit happens. Explains the real rsp register.
1. https://www.exploit-db.com/papers/24085/ Stack Smashing On A Modern Linux System 21 December, 2012;;
1. https://www.blackhat.com/presentations/bh-europe-09/Fritsch/Blackhat-Europe-2009-Fritsch-Buffer-Overflows-Linux-whitepaper.pdf 12pp April 16th, 2009
1. https://users.suse.com/~krahmer/no-nx.pdf 20pp {x86-64 buffer overflow exploits and the borrowed code chunks exploitation technique} Sebastian Krahmer krahmer@suse.de Sep 2005
1. https://bytesoverbombs.io/getting-into-ctfs-391ae73947bd CTF
1. 
1. 
1. 

* Disabling Stack Protection

1. Compiler flags: no canaries =gcc overflow.c -o overflow
   -fno-stack-protector=
1. Stack top randomization;;
1. Disable ASLR: =sudo echo 0 > /proc/sys/kernel/randomize_va_space=
   Enabled: =randomize_va_space= should be 2
1. ASLR is effective only if the binary was PIE (position independent
   code enabled). =-fPIC -pie=

* Disable ASLR

1. disable ASLR: =echo 0 > /proc/sys/kernel/randomize_va_space=
1. compile: =gcc -fno-stack-protector -z execstack -o bo bo.c=


* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
