# -*- mode: org -*-
#+date: 2018-08-22
#+TITLE: Lab on Buffer Overflow Exploits
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:2

Objective: Understand the stack smashing buffer exploit thoroughly.

* Task: Background Knowledge

1. What is the "prompt string"?
1. What is the "environment"?
1. What does =system("/bin/bash")= do?
1. Why does =exploit3.c= run =system("/bin/bash")= at the end of
   =main()=?

* Task: GCC Should Not Complain

1. Improve the source code of =exploit3.c= and =exploit4.c= of
   AlephOne so that there are no warning messages from =gcc= even
   after using the =gcc -ansi -pedantic -Wall= flags.

* Task: Size Reduction

1. Reduce the size of their compiled binaries by at least 5% as seen
   by the =size= command when exactly the same flags are used in the
   compilation.  Make sure no functionality is lost. E.g., do not just
   remove printf's.  Not easy.  Do your best.

1. Thoroughly describe your changes, and how you verified that there
   was no loss of functionality.  Include properly indented versions
   of your =exploit*.c= files.  Use =indent -kr=.

* Task: Does it Still Work?

1. Login as a non-root user.  Verify that the exploit still works on
   the =vulnerable= program. (It may not!)

* Task: Experience the Exploit

1. There are now (201x) many preventive measures in place that the
   AlephOne's exploit4 no longer works in modern Linux installations.
   But, you can run an older distro and experience the exploit.

1. [[./Auditor/vm-setup.html]] describes a setup using
   [[./Auditor/auditor-250405-01.iso]] Auditor Live CD of 2008, from the same
   group that develops Kali Linux.

* Task: Current Buffer Overflow Exploits

1. Search the web and report on at least two recent (within last 12
   months) buffer overflow exploits/ attacks.  Recall that there are
   alternate names for this exploit.

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
