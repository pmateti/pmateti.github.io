** Building a Secure Linux Kernel

1. TBD Moved into "Hardening"

The following is a list, based on kernel version 3.12 (Nov 2013), of
the various security related choices you can make using the =xconfig=
tool in building a custom kernel.  Note that not all items mentioned
in Security Enhancements in the Linux Kernel have made it into the
official kernel source tree.

1.  Select the security module that will be used by default if the
   kernel parameter =security= is not specified.  Choices: SELinux
   Simplified Mandatory Access Control (DEFAULT-SECURITY-SMACK) TOMOYO
   (DEFAULT-SECURITY-TOMOYO) AppArmor (DEFAULT-SECURITY-APPARMOR) Yama
   (DEFAULT-SECURITY-YAMA) Unix Discretionary Access Controls
   (DEFAULT-SECURITY-DAC)

1.  Restrict unprivileged access to the kernel syslog
   (SECURITY-DMESG-RESTRICT) This enforces restrictions on
   unprivileged users reading the kernel syslog via dmesg(8).

1.  Enable the securityfs filesystem (SECURITYFS) It is currently used
   by the TPM BIOS character driver and IMA, an integrity provider.  It
   is not used by SELinux or SMACK.

1.  Security hooks for pathname based access control (SECURITY-PATH)

1.  NSA SELinux Support (SECURITY-SELINUX) You will also need a policy
   configuration and a labeled filesystem.

1.  Simplified Mandatory Access Control Kernel Support (SECURITY-SMACK)
   Smack is useful for sensitivity, integrity, and a variety of other
   mandatory security schemes.

1.  TOMOYO Linux Support (SECURITY-TOMOYO) This selects TOMOYO Linux,
   pathname-based access control.

1.  AppArmor support (SECURITY-APPARMOR) This enables the AppArmor
   security module.  Required userspace tools.  AppArmor policy is
   stored in a set of files in =/etc/apparmor.d/=.

1.  Yama support (SECURITY-YAMA) Yama extends discretionary access
   controls (DAC) support with additional system-wide security
   settings beyond regular Linux DAC.

1.  Digital signature verification using multiple keyrings
   (INTEGRITY-SIGNATURE) It defines separate keyrings for each of the
   different use cases: evm, ima, and modules.  Different keyrings
   improves search performance, but also allow to "lock" certain
   keyring to prevent adding new keys.

1.  Enables integrity auditing support (INTEGRITY-AUDIT) In addition to
   enabling integrity auditing support, this option adds a kernel
   parameter =integrity-audit=, which controls the level of integrity
   auditing messages.

1.  Enable asymmetric keys support (INTEGRITY-ASYMMETRIC-KEYS) This
   option enables digital signature verification using asymmetric
   keys.

1.  Integrity Measurement Architecture(IMA) (IMA) The Trusted Computing
   Group(TCG) runtime IMA maintains a list of hash values of
   executables and other sensitive system files, as they are read or
   executed.  We can then discover if an attacker manages to change
   the contents of an important system file being measured.  If your
   system has a TPM chip, then IMA also maintains an aggregate
   integrity value over this list inside the TPM hardware, so that the
   TPM can prove to a third party whether or not critical system files
   have been modified.

1.  Extended Verification Module (EVM) validates security-sensitive
   extended attributes before allowing operations on the files.

1.  Asymmetric public-key crypto algorithm subtype
   (ASYMMETRIC-PUBLIC-KEY-SUBTYPE) This option provides support for
   asymmetric public key type handling.  If signature generation
   and/or verification are to be used, appropriate hash algorithms
   (such as SHA-1) must be available.  ENOPKG will be reported if the
   requisite algorithm is unavailable.  RSA public-key algorithm
   (PUBLIC-KEY-ALGO-RSA) 
   (X509-CERTIFICATE-PARSER) 

