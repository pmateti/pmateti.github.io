<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2019-11-22 Fri 06:42 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>SELinux Intro</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Prabhaker Mateti" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="org-div-home-and-up">
 <a accesskey="h" href="../"> UP </a>
 |
 <a accesskey="H" href="../../../Top/index.html"> HOME </a>
</div><div id="preamble" class="status">
2019-11-20 | <a href="../../"> ../../</a>
</div>
<div id="content">
<h1 class="title">SELinux Intro</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgeef2080">1. Overview</a>
<ul>
<li><a href="#org29716aa">1.1. Lecture #1</a></li>
<li><a href="#org4838257">1.2. Lecture #2</a></li>
<li><a href="#orgef15587">1.3. Lecture #3</a></li>
<li><a href="#org0eb7970">1.4. Lecture #4</a></li>
<li><a href="#orgd4403e4">1.5. Lecture #5</a></li>
</ul>
</li>
<li><a href="#org4f117e8">2. Where Does SELinux Fit in DAC+MAC?</a>
<ul>
<li><a href="#orgd88e97e">2.1. SysCalls in the Presence of LSM</a></li>
<li><a href="#org4e731a1">2.2. Permission Granted?</a></li>
<li><a href="#org33565d3">2.3. SEL Example: Read /etc/passwd</a></li>
<li><a href="#orga963fd7">2.4. SEL Example: Read /etc/passwd  More Details</a></li>
<li><a href="#org96bf386">2.5. SEL Block Diagram</a></li>
<li><a href="#org8a696ac">2.6. SE Android</a></li>
</ul>
</li>
<li><a href="#org9934dfb">3. SELinux Conceptual Overview</a>
<ul>
<li><a href="#orga2b3c56">3.1. Example: User Wishes to Execute a Script</a></li>
<li><a href="#org57ad614">3.2. SELinux Contexts (aka Labels)</a></li>
<li><a href="#org33fa2d7">3.3. Example Contd.</a></li>
<li><a href="#org7f278b8">3.4. SELinux Contexts/ Labels #2</a></li>
<li><a href="#org1261e27">3.5. SELinux Types and Type Enforcement</a></li>
<li><a href="#org5d3c8dc">3.6. SELinux Policies</a></li>
<li><a href="#org1427f8c">3.7. SELinux Modes</a></li>
</ul>
</li>
<li><a href="#org111de7e">4. SELinux Role-Based Access Control (SE-RBAC)</a>
<ul>
<li><a href="#orgf5307e3">4.1. RBAC-SEL-Example #1</a></li>
<li><a href="#org275c6b3">4.2. RBAC-SEL-Example #2</a></li>
<li><a href="#org2134869">4.3. RBAC-SEL-Example #3</a></li>
</ul>
</li>
<li><a href="#org6629bff">5. Constructing SELinux Policies</a></li>
<li><a href="#orgde486f9">6. Labs on SELinux</a></li>
<li><a href="#org95e5ad7">7. SELinux Critiques</a></li>
<li><a href="#orgf6d4dc6">8. SELinux Design Internals</a>
<ul>
<li><a href="#org89dd3b3">8.1. Extended Attributes (XATTR)</a></li>
</ul>
</li>
<li><a href="#org02b2cad">9. References</a>
<ul>
<li><a href="#org227eaee">9.1. References #2</a></li>
<li><a href="#orgeba715e">9.2. References #3</a></li>
<li><a href="#orgc8715ed">9.3. References #4</a></li>
<li><a href="#orgbc98b14">9.4. References for CEG 4440/6440 Android Security</a></li>
</ul>
</li>
<li><a href="#org6b3ffb7">10. End</a></li>
</ul>
</div>
</div>

<div id="outline-container-orgeef2080" class="outline-2">
<h2 id="orgeef2080"><span class="section-number-2">1</span> Overview</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>Linux includes DAC by default.  We (root + users) can render it
useless.  But, cannot disable DAC.</li>
<li>SELinux is an implementation of MAC as an LSM for Linux.  Installed
by choice in some Linux distros.  Others are AppArmour, etc.
SELinux is the default MAC in Android.</li>
<li>SELinux divides access issues to a fine granularity.  It can, e.g.,
limit the power of the superuser/ root.</li>
<li>SELinux is considered by many to be too difficult to learn within a
week.  We are trying! (in this course)</li>
<li>"Security. Hardening. Compliance. Policy. The Four Horsemen of the
SysAdmin Apocalypse."  (culture
<a href="https://en.wikipedia.org/wiki/Four_Horsemen_of_the_Apocalypse">https://en.wikipedia.org/wiki/Four_Horsemen_of_the_Apocalypse</a>)</li>
</ol>
</div>

<div id="outline-container-org29716aa" class="outline-3">
<h3 id="org29716aa"><span class="section-number-3">1.1</span> Lecture #1</h3>
<div class="outline-text-3" id="text-1-1">
<ol class="org-ol">
<li>Nov 18, 2019 55 minutes</li>
<li><a href="../../AccessControl">../../AccessControl</a> Background Notes</li>
<li>DAC</li>
<li>MAC</li>
<li>LS</li>
<li>Installing SELinux <a href="../SELinux/selinux-ubuntu.html">../SELinux/selinux-ubuntu.html</a></li>
</ol>
</div>
</div>


<div id="outline-container-org4838257" class="outline-3">
<h3 id="org4838257"><span class="section-number-3">1.2</span> Lecture #2</h3>
<div class="outline-text-3" id="text-1-2">
<ol class="org-ol">
<li>Nov 20, 2019 55 minutes</li>
<li>Installing SELinux <a href="../SELinux/selinux-ubuntu.html">../SELinux/selinux-ubuntu.html</a>  contd.</li>
<li>Section on [Where Does SELinux Fit in DAC+MAC?]</li>
<li>Section on [SELinux Conceptual Overview]</li>
<li><a href="https://source.android.com/security/selinux/concepts">https://source.android.com/security/selinux/concepts</a> Required Reading.</li>
<li>Awareness of References.</li>
</ol>
</div>
</div>

<div id="outline-container-orgef15587" class="outline-3">
<h3 id="orgef15587"><span class="section-number-3">1.3</span> Lecture #3</h3>
<div class="outline-text-3" id="text-1-3">
<ol class="org-ol">
<li>Nov 22, 2019 55 minutes</li>
<li>Section on [Constructing SELinux Policies]</li>
<li>Section on [SELinux Role-Based Access Control]</li>
<li>Section on [Labs on SELinux]</li>
<li><a href="./selinux-diy.html">./selinux-diy.html</a> [required reading]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file">Creating your own policy module file</a> [from Gentoo] [required reading]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Using_gentoo_selocal_for_small_policy_enhancements">Using Gentoo selocal for small policy enhancements</a> [from Gentoo] [can skip]</li>
</ol>
</div>
</div>


<div id="outline-container-org0eb7970" class="outline-3">
<h3 id="org0eb7970"><span class="section-number-3">1.4</span> Lecture #4</h3>
<div class="outline-text-3" id="text-1-4">
<ol class="org-ol">
<li>Nov 25, 2019 55 minutes</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_a_daemon_domain">Creating a daemon domain</a> [required reading]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_a_user_domain">Creating a user domain</a> [required reading]</li>
</ol>
</div>
</div>

<div id="outline-container-orgd4403e4" class="outline-3">
<h3 id="orgd4403e4"><span class="section-number-3">1.5</span> Lecture #5</h3>
<div class="outline-text-3" id="text-1-5">
<ol class="org-ol">
<li>Dec 02, 2019 55 minutes</li>
<li><a href="./selinux-diy.html">./selinux-diy.html</a>  [again?][required reading]</li>
<li>Section on [Labs on SELinux] [again?]</li>
<li>Do we need SELinux?  Some other MAC?</li>
</ol>
</div>
</div>
</div>

<div id="outline-container-org4f117e8" class="outline-2">
<h2 id="org4f117e8"><span class="section-number-2">2</span> Where Does SELinux Fit in DAC+MAC?</h2>
<div class="outline-text-2" id="text-2">
<ol class="org-ol">
<li>Recall that With a MAC, the permissions are not governed by the owner of the
resource.</li>
<li>Nor can they be worked around by users.</li>
<li>Instead, they are set in stone by the security administrator.</li>
<li>In SELinux, this is done through the SELinux policy that is loaded
at the start of the system.</li>
<li>The path name of the policy varies by Linux distribution.  Read
<a href="../SELinux/selinux-ubuntu.html">../SELinux/selinux-ubuntu.html</a></li>
</ol>
</div>

<div id="outline-container-orgd88e97e" class="outline-3">
<h3 id="orgd88e97e"><span class="section-number-3">2.1</span> SysCalls in the Presence of LSM</h3>
<div class="outline-text-3" id="text-2-1">

<div class="figure">
<p><img src="./Figures/lsm-access.jpg" alt="LSM Access" title="LSM" width="50%" />
</p>
<p><span class="figure-number">Figure 1: </span>LSM (e.g., SELinux) steps in User mode to Kernel Mode</p>
</div>

<ol class="org-ol">
<li>Process with a security id SSec is trying to access (1) the file
with the security id TSec.</li>
<li>Makes a syscall (2).</li>
<li>The kernel consults LSM module (3).</li>
<li>The user specific security is implemented as a function "f".</li>
<li>The kernel will then grant/ deny access to the resource (4).</li>
<li>Every syscall goes through SELinux.</li>
</ol>
</div>
</div>

<div id="outline-container-org4e731a1" class="outline-3">
<h3 id="org4e731a1"><span class="section-number-3">2.2</span> Permission Granted?</h3>
<div class="outline-text-3" id="text-2-2">

<div class="figure">
<p><img src="./Figures/sel-subj-obj.png" alt="DAC to MAC flow" title="LSM" width="100%" />
</p>
<p><span class="figure-number">Figure 2: </span>Subject Action Object [AVC Access Vector Cache]</p>
</div>

<ol class="org-ol">
<li>SELinux Security Server receives the request only after DAC said
yes.  See Figures 3 and 4.</li>
</ol>
</div>
</div>

<div id="outline-container-org33565d3" class="outline-3">
<h3 id="org33565d3"><span class="section-number-3">2.3</span> SEL Example: Read /etc/passwd</h3>
<div class="outline-text-3" id="text-2-3">

<div class="figure">
<p><img src="./Figures/dac-mac-sel1.png" alt="DAC to MAC flow" title="LSM" width="100%" />
</p>
<p><span class="figure-number">Figure 3: </span>DAC to MAC flow: Subject Action Object</p>
</div>
</div>
</div>

<div id="outline-container-orga963fd7" class="outline-3">
<h3 id="orga963fd7"><span class="section-number-3">2.4</span> SEL Example: Read /etc/passwd  More Details</h3>
<div class="outline-text-3" id="text-2-4">

<div class="figure">
<p><img src="./Figures/dac-mac-sel2.png" alt="DAC to MAC flow" title="LSM" width="100%" />
</p>
<p><span class="figure-number">Figure 4: </span>DAC to MAC flow: Subject Action Object</p>
</div>
</div>
</div>

<div id="outline-container-org96bf386" class="outline-3">
<h3 id="org96bf386"><span class="section-number-3">2.5</span> SEL Block Diagram</h3>
<div class="outline-text-3" id="text-2-5">

<div class="figure">
<p><img src="./Figures/sel-arch.png" alt="sel-arch.png" title="SELinux Arch" width="100%" />
</p>
<p><span class="figure-number">Figure 5: </span>SELinux Block Diagram</p>
</div>
<ol class="org-ol">
<li>SELinux has hooks located at strategic points within the kernel code</li>
</ol>
</div>
</div>

<div id="outline-container-org8a696ac" class="outline-3">
<h3 id="org8a696ac"><span class="section-number-3">2.6</span> SE Android</h3>
<div class="outline-text-3" id="text-2-6">

<div class="figure">
<p><img src="./Figures/seandroid-timeline.jpg" alt="LSM Access" title="LSM" width="100%" />
</p>
<p><span class="figure-number">Figure 6: </span>SE Android</p>
</div>
</div>
</div>
</div>

<div id="outline-container-org9934dfb" class="outline-2">
<h2 id="org9934dfb"><span class="section-number-2">3</span> SELinux Conceptual Overview</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>SELinux will grant/deny access on fine grain level.</li>
<li>Even root (super user) may be denied.</li>
<li>It is all controlled by the SELinux LSM based on a policy.</li>
<li>The policy is written up using "subjects", "objects", etc.</li>
<li>These are "labeled".  Aka "contexts".</li>
<li>All these are generalized and abstracted (and implemented in kernel
source code) into the following SELinux entities:
<ol class="org-ol">
<li><i>Domain</i> - A label for one or more subjects (processes). Also
called a domain type.</li>
<li><i>Type</i> - A label for the object or set of objects.  E.g., file, socket.</li>
<li><i>Class</i> - The kind of object being accessed.</li>
<li><i>Permission</i> - The operation (about) to be performed. E.g.,
read, write.</li>
</ol></li>

<li>An <i>allow</i> policy rule: <code>allow domains types:classes permissions;</code></li>
<li>Principle of Default Denial: Anything not explicitly allowed is denied.</li>
</ol>
</div>


<div id="outline-container-orga2b3c56" class="outline-3">
<h3 id="orga2b3c56"><span class="section-number-3">3.1</span> Example: User Wishes to Execute a Script</h3>
<div class="outline-text-3" id="text-3-1">

<div class="figure">
<p><img src="./Figures/sel-permissions.png" alt="LSM SELinux" title="LSM" width="100%" />
</p>
<p><span class="figure-number">Figure 7: </span>LSM SELinux Work Flow in {User Wishes to Execute Script}</p>
</div>
</div>
</div>



<div id="outline-container-org57ad614" class="outline-3">
<h3 id="org57ad614"><span class="section-number-3">3.2</span> SELinux Contexts (aka Labels)</h3>
<div class="outline-text-3" id="text-3-2">
<ol class="org-ol">
<li>SELinux assigns a context (aka label) to every object and subject:
files, directories, programs, processes, network ports, &#x2026;</li>

<li>Labels encapsulate all security attributes of an object. Labels are
interpreted by the SELinux Security Server (Figure 4) in the kernel
and by <code>libselinux</code> in user space.</li>

<li>The rest of the kernel code and user space view labels as opaque data.</li>
<li><p>
New security attributes can be added to labels without having to
recompile applications or redesign core SELinux code.
</p></li>
</ol>

<div class="figure">
<p><img src="./Figures/sel-users.png" alt="sel-users.png" />
</p>
<p><span class="figure-number">Figure 8: </span>SELinux Contexts</p>
</div>

<ol class="org-ol">
<li>SELinux introduces: selinux-user-identity, role, type, and
sensitivity, in order to divides access issues to a fine
granularity.</li>
<li>Linux user names are mapped to SELinux user names, <code>*_u</code>.  [The
underscore syntax is not required.]</li>
<li>A SELinux role <code>*_r</code></li>
<li>A SELinux type <code>*_t</code>. [An attribute of "type enforcement" (TE) that
defines a domain for processes.]</li>
<li><p>
Optionally followed by a sensitivity level, e.g., <code>s0</code>
</p></li>
</ol>

<div class="figure">
<p><img src="./Figures/sel-context.png" alt="sel-context.png" />
</p>
<p><span class="figure-number">Figure 9: </span>SELinux Context</p>
</div>


<ol class="org-ol">
<li>Context Examples
<ol class="org-ol">
<li>Ex: context of /etc/shadow: <code>system_u:object_r:shadow_t</code></li>
<li>Ex: context of a process: <code>root:staff_r:staff_t</code></li>
</ol></li>
<li>100+ types, such as device-type, process-type, file-system-type,
network type, IPC type, &#x2026;</li>
<li><code>/usr/sbin/semanage fcontext -l</code> to see the current list of all contexts</li>

<li><p>
Add the flag <code>-Z</code> to the familiar Linux commands to see the
contexts.  Examples:
</p>
<pre class="example">
$ id -Z
system_u:system_r:kernel_t:s0

</pre>

<pre class="example">
$ ls -Z pmNotes-SELinux.org
system_u:object_r:unlabeled_t:s0 pmNotes-SELinux.org

</pre></li>
</ol>
</div>
</div>


<div id="outline-container-org33fa2d7" class="outline-3">
<h3 id="org33fa2d7"><span class="section-number-3">3.3</span> Example Contd.</h3>
<div class="outline-text-3" id="text-3-3">
<ol class="org-ol">
<li>In the example {User Wishes to Execute Script Figure 7}, two
contexts take part in the activity.
<ol class="org-ol">
<li>the context of the user process (such as a shell), which is <code>user_u:user_r:user_t</code></li>
<li>the context of the target file, which is <code>system_u:object_r:lib_t</code></li>
</ol></li>
</ol>
</div>
</div>


<div id="outline-container-org7f278b8" class="outline-3">
<h3 id="org7f278b8"><span class="section-number-3">3.4</span> SELinux Contexts/ Labels #2</h3>
<div class="outline-text-3" id="text-3-4">
<ol class="org-ol">
<li>When a user or process requests access to a resource (for example,
when opening a file), SELinux uses three items to determine whether
to allow access.
<ol class="org-ol">
<li>the kind of access requested,</li>
<li>the security context of the process, and</li>
<li>the security context of the requested resource</li>
</ol></li>

<li>The security context of a process, called a domain, determines what
the process can do (what it can access, and what actions it can
take).  Ex: User, trusted, system, security</li>

<li>The security context of an object is called a type.  It gathers the
security attributes of the object.  These are stored in extra
attributes XATTRs of the file system.  (Not all file systems can
have XATTRs.  On such FS, SELinux has to make do with other
techniques.)</li>

<li>On Ubuntu, see the files in <code>/etc/selinux/default/contexts/</code> (These
are text files.)</li>

<li>Users also have security contexts.  See the <code>/usr/sbin/semanage</code>
tool.</li>
</ol>
</div>
</div>


<div id="outline-container-org1261e27" class="outline-3">
<h3 id="org1261e27"><span class="section-number-3">3.5</span> SELinux Types and Type Enforcement</h3>
<div class="outline-text-3" id="text-3-5">
<ol class="org-ol">
<li>Objects are given a specific SELinux type.  Type includes ACLs based on
roles.</li>
<li>There are 100+ types, such as device-type, process-type, file-system-type,
network type, IPC type, &#x2026;</li>
<li>Device types:
<ol class="org-ol">
<li><code>agp_device_t</code> - AGP device (/dev/agpgart)</li>
<li><code>mouse_device_t</code> - Mouse (/dev/mouse)</li>
</ol></li>
<li>File types:
<ol class="org-ol">
<li><code>fs_t</code> - Defaults file type</li>
<li><code>bin_t</code> - Files in /bin</li>
</ol></li>

<li>/proc types
<ol class="org-ol">
<li><code>proc_t</code> - /proc and related files</li>
<li><code>sysctl_t</code> - /proc/sys and related files</li>
</ol></li>
</ol>
</div>
</div>

<div id="outline-container-org5d3c8dc" class="outline-3">
<h3 id="org5d3c8dc"><span class="section-number-3">3.6</span> SELinux Policies</h3>
<div class="outline-text-3" id="text-3-6">
<ol class="org-ol">
<li>Written in a SELinux-specific language.</li>

<li>An SELinux policy is a collection of rules capturing the boolean
conditions granting access; see Figures 2 and 4.</li>

<li>The path name of the policy varies by Linux distribution.  Read
<a href="../SELinux/selinux-ubuntu.html">../SELinux/selinux-ubuntu.html</a></li>

<li><p>
Policies are compiled into binary files.
</p>
<pre class="example">
root@Sutherland:~# file /etc/selinux/default/policy/policy.31 
(on stdout) SE Linux policy v31 8 symbols 9 ocons

</pre></li>

<li><code>default</code> is the name of the policy installed by the package named
<code>selinux-policy-default</code></li>
<li>The full collection of rules is at <code>/usr/share/selinux/default</code>.
Some 380+ bzip-compressed files.  E.g., take a look at <code>bzcat
   /usr/share/selinux/default/keyboardd.pp.bz2</code></li>
</ol>
</div>
</div>

<div id="outline-container-org1427f8c" class="outline-3">
<h3 id="org1427f8c"><span class="section-number-3">3.7</span> SELinux Modes</h3>
<div class="outline-text-3" id="text-3-7">
<ol class="org-ol">
<li>In <code>/etc/selinux/config</code> file, <code>SELINUX</code> can be set to
<code>enforcing</code>, <code>disabled</code>, or <code>permissive</code>

<ol class="org-ol">
<li>Enforcing: Policy is loaded.  When SELinux is enforcing,
everything is denied by default and a policy determines
requested access.  See Figure 4.</li>

<li>Permissive: Policy is loaded, but SELinux is <i>not enforcing</i>
it.  Accesses will be logged but not
prevented.  This mode is intended for testing and debugging.</li>
<li>Disabled: SELinux infrastructure is not enabled. No policy
loaded.  Logs are not generated.</li>
<li>If you just did <code># apt install selinux*</code>, the value will be
<code>permissive</code></li>
</ol></li>

<li>See also what the Grub boot entry should be for selinux to be
enabled (permissive or enforcing).  Read
<a href="../SELinux/selinux-ubuntu.html">../SELinux/selinux-ubuntu.html</a></li>
</ol>
</div>
</div>
</div>

<div id="outline-container-org111de7e" class="outline-2">
<h2 id="org111de7e"><span class="section-number-2">4</span> SELinux Role-Based Access Control (SE-RBAC)</h2>
<div class="outline-text-2" id="text-4">
<ol class="org-ol">
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Role-based_access_control">https://wiki.gentoo.org/wiki/SELinux/Role-based_access_control</a> Do a
quick read.  Must.</li>

<li>Roles may also have policy restrictions on who/ when/ how roles
are changed.  Not just anyone (or any program) can get privileges.</li>

<li>SELinux users have authorized roles.  Roles are authorized for
domains.  Processes run in their domains.</li>
</ol>
</div>

<div id="outline-container-orgf5307e3" class="outline-3">
<h3 id="orgf5307e3"><span class="section-number-3">4.1</span> RBAC-SEL-Example #1</h3>
<div class="outline-text-3" id="text-4-1">
<ol class="org-ol">
<li>Goal: User named <code>ta</code> should be permitted to browse the web, grade labs,
and administer a web server.</li>
<li>Create a role for each, with different privileges</li>
<li><code>grader</code> role should not have network access, except to blackboard
etc. sofwtare.</li>
<li><code>browsing</code> role should not have access to files within local
directory</li>
<li><code>webadmin</code> role should not access students’ labs, etc.</li>
</ol>
</div>
</div>

<div id="outline-container-org275c6b3" class="outline-3">
<h3 id="org275c6b3"><span class="section-number-3">4.2</span> RBAC-SEL-Example #2</h3>
<div class="outline-text-3" id="text-4-2">
<ol class="org-ol">
<li>Goal:  <code>userlevel1</code> should be permitted to read a secret file.</li>
<li>Transition to a secret role to do this.  This role is restricted:
<ol class="org-ol">
<li>Cannot write to the network</li>
<li>Cannot write to declassified files</li>
</ol></li>
<li>Secret files cannot be read in a declassified role</li>
</ol>
</div>
</div>

<div id="outline-container-org2134869" class="outline-3">
<h3 id="org2134869"><span class="section-number-3">4.3</span> RBAC-SEL-Example #3</h3>
<div class="outline-text-3" id="text-4-3">
<ol class="org-ol">
<li>Goal: Should not let this file <code>notontheweb.xyz</code> to go out on the
internet.</li>
<li>Create secret-file role with no network access</li>
<li>Process cannot change roles, only exit</li>
<li>Process can read secret files</li>
<li>Can this this policy be expressed in Linux DAC permissions?
<ol class="org-ol">
<li>"On a Linux system, one can make most, if not all, of its
behavior based on role assignment done through group membership
and group privileges."</li>
</ol></li>
</ol>
</div>
</div>
</div>

<div id="outline-container-org6629bff" class="outline-2">
<h2 id="org6629bff"><span class="section-number-2">5</span> Constructing SELinux Policies</h2>
<div class="outline-text-2" id="text-5">
<p>
There are many tutorials and even books on SELinux.  <a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials">Gentoo Wiki on
SELinux Tutorials</a> are sufficient for our work in this course.
However, Gentoo specifics need to be adapted, mildly, for our Linux
distribution.  E.g., <code>/usr/share/selinux/strict/include/Makefile</code>
becomes <code>/usr/share/selinux/devel/Makefile</code> on Ubuntu.  Reading other
tutorials, blogs, manuals is not expected for our course.
</p>


<ol class="org-ol">
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/The_security_context_of_a_process">The security context of a process</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/How_SELinux_controls_file_and_directory_accesses">How SELinux controls file and directory accesses</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Where_to_find_SELinux_permission_denial_details">Where to find SELinux permission denial details</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Controlling_file_contexts_yourself">Controlling file contexts yourself</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/How_does_a_process_get_into_a_certain_context">How does a process get into a certain context</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Using_SELinux_booleans">Using SELinux booleans</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Working_with_customizable_types">Working with customizable types</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Permissive_versus_enforcing">Permissive versus enforcing</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/What_is_this_unconfined_thingie_and_tell_me_about_attributes">What is this unconfined thingie (and tell me about attributes)</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/How_is_the_policy_provided_and_loaded">How is the policy provided and loaded</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/The_purpose_of_SELinux_roles">The purpose of SELinux roles</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Defining_SELinux_users">Defining SELinux users</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Linux_services_and_the_system_u_SELinux_user">Linux services and the system-u SELinux user</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Putting_constraints_on_operations">Putting constraints on operations</a></li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/SELinux_Multi-Level_Security">SELinux Multi-Level Security</a>   [Not part of 4420/6420 course]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/SELinux_Multi-Category_Security">SELinux Multi-Category Security</a>   [Not part of 4420/6420 course]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Managing_network_port_labels">Managing network port labels</a>  [Not part of 4420/6420 course]</li>
</ol>

<p>
[In the above list, I may follow a different order in the lectures.
You are expected to skim first ( so that you know "What you need to
remember") then read carefully all the above.]
</p>

<ol class="org-ol">
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_your_own_policy_module_file">Creating your own policy module file</a> [required reading]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Using_gentoo_selocal_for_small_policy_enhancements">Using Gentoo selocal for small policy enhancements</a> [can skip]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_a_daemon_domain">Creating a daemon domain</a> [required reading]</li>
<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials/Creating_a_user_domain">Creating a user domain</a> [required reading]</li>
<li><a href="./selinux-diy.html">./selinux-diy.html</a> [required reading]</li>
</ol>
</div>
</div>

<div id="outline-container-orgde486f9" class="outline-2">
<h2 id="orgde486f9"><span class="section-number-2">6</span> Labs on SELinux</h2>
<div class="outline-text-2" id="text-6">
<ol class="org-ol">
<li>SELinux: Is it possible to disable it at runtime?  Here is how:
<code>setenforce 0</code>, set <code>SELINUX=disabled</code> in /etc/selinux/config,
reboot, choose a Grub entry that does not have <code>selinux</code>.</li>

<li><a href="./selinux-lab.html">./selinux-lab.html</a> is a required lab in this course.  Before
attempting it, skim the sections above.  Do not skip any.  The lab
expects you to develop new policies.  Re-read the relevant
sections.</li>

<li>Develop a collection of access control policies, such as those in
the lab above that can improve the security of a Linux installation.</li>

<li>Compare SELinux and AppArmor. Optional Lab.  Read the discussion
<a href="https://www.reddit.com/r/linuxadmin/comments/9a0khb/selinux_vs_apparmor/">https://www.reddit.com/r/linuxadmin/comments/9a0khb/selinux_vs_apparmor/</a></li>

<li>Is sudo <i>now</i> unnecessary? (and /etc/sudoers?)</li>

<li>SELinux =&gt; Loss of Performance?  Develop a lab experiment that can
confirm/ deny this based on objective measurements.</li>
</ol>
</div>
</div>

<div id="outline-container-org95e5ad7" class="outline-2">
<h2 id="org95e5ad7"><span class="section-number-2">7</span> SELinux Critiques</h2>
<div class="outline-text-2" id="text-7">
<ol class="org-ol">
<li>That writing SELinux config files is "complicated" is widely agreed.</li>

<li>Smack LSM was designed in response to the complexity of
SELinux. Smack is now part of Tizen, a mobile OS
<a href="https://www.tizen.org/">https://www.tizen.org/</a>.  Not well-respected.  Search in HackerNews.</li>

<li>Comments by "Frustated Users"
<ol class="org-ol">
<li><a href="http://forums.fedoraforum.org/showthread.php?t=288584">http://forums.fedoraforum.org/showthread.php?t=288584</a> Is SELinux crap?</li>
<li><a href="http://symcbean.blogspot.com/2016/11/selinux-sucks.html">http://symcbean.blogspot.com/2016/11/selinux-sucks.html</a></li>
</ol></li>
</ol>
</div>
</div>



<div id="outline-container-orgf6d4dc6" class="outline-2">
<h2 id="orgf6d4dc6"><span class="section-number-2">8</span> SELinux Design Internals</h2>
<div class="outline-text-2" id="text-8">
<ol class="org-ol">
<li>Linux adds an opaque "security" pointer that LSM can use to
store security metadata in processes, inodes, sockets, etc.</li>

<li>A process reads the inode
<ol class="org-ol">
<li>VFS (virtual file sys layer) function calls LSM hook, with
inode and process pointer</li>
<li>LSM reads policy rules from inode</li>
</ol></li>

<li>Suppose the file requires a role transition for read
<ol class="org-ol">
<li>LSM hook modifies process’s security data to change its role</li>
<li>Then read allowed to proceed</li>
</ol></li>

<li>In addition to standard Linux attributes, associate a small
key+value store with an on-disk inode
<ol class="org-ol">
<li>User can tag a file with arbitrary metadata</li>
</ol></li>
</ol>
</div>

<div id="outline-container-org89dd3b3" class="outline-3">
<h3 id="org89dd3b3"><span class="section-number-3">8.1</span> Extended Attributes (XATTR)</h3>
<div class="outline-text-3" id="text-8-1">
<ol class="org-ol">
<li>File systems that support extended attributes: ext2/3/4, &#x2026;</li>

<li>All ACLs, type information, etc. are stored in extended attributes
for persistence.</li>

<li>Each file must be labeled for MAC enforcement.</li>
</ol>
</div>
</div>
</div>


<div id="outline-container-org02b2cad" class="outline-2">
<h2 id="org02b2cad"><span class="section-number-2">9</span> References</h2>
<div class="outline-text-2" id="text-9">
<ol class="org-ol">
<li>Unless otherwise stated:  All are (at least) Recommended Reading.</li>
<li><a href="http://selinuxproject.org/page/FAQ">http://selinuxproject.org/page/FAQ</a>   Recommended Reading.</li>

<li><a href="https://wiki.gentoo.org/wiki/SELinux/Tutorials">https://wiki.gentoo.org/wiki/SELinux/Tutorials</a> This is part of
Gentoo Linux wiki, but applicable to other Linux distros.  Has
several useful URLs.  {pm: Beyond my lecture notes, consider this
the source of valid information.}  Highly Recommended Reading.
Portions (see above) are Required Reading.</li>

<li><a href="http://oss.tresys.com/">http://oss.tresys.com/</a> (i) SELinux Policy IDE is an integrated
development environment for SELinux, (ii) SIPC : Secure one way
interprocess communication library for SELinux systems. 201x.
Both: "This is an archived project which is no longer maintained by
Tresys. "  (iii) <a href="https://github.com/SELinuxProject/setools">https://github.com/SELinuxProject/setools</a> SELinux
Policy Analysis Tools.  2018.  Active??.  Reference.</li>
</ol>
</div>

<div id="outline-container-org227eaee" class="outline-3">
<h3 id="org227eaee"><span class="section-number-3">9.1</span> References #2</h3>
<div class="outline-text-3" id="text-9-1">
<ol class="org-ol">
<li>Trent Jaeger, {Systems and Internet Infrastructure Security (SIIS)
Lab, Pennsylvania State University.}</li>
<li><a href="http://www.cse.psu.edu/~trj1/cse543-f07/slides/03-PolicyConcepts.pdf">http://www.cse.psu.edu/~trj1/cse543-f07/slides/03-PolicyConcepts.pdf</a>
SELinux Policy Concepts and Overview, 2005, 28 slides by
Tresys.com. { <a href="./03-PolicyConcepts-pm.pdf">./03-PolicyConcepts-pm.pdf</a> with a few scribbles by
pm.}  Required Reading.</li>

<li><a href="http://www.cse.psu.edu/~trj1/cse443-s12/docs/ch9.pdf">http://www.cse.psu.edu/~trj1/cse443-s12/docs/ch9.pdf</a> Building a
Secure Operating System for Linux.  Recommended Reading.  This
PDF is Chapter 9 of his book titled
"Operating System Security: Synthesis Lectures on Information
Security, Privacy, and Trust", 2008, 218 pages,
(<a href="https://doi.org/10.2200/S00126ED1V01Y200808SPT001">https://doi.org/10.2200/S00126ED1V01Y200808SPT001</a>).  Reference.</li>

<li><a href="http://www.cse.psu.edu/~trj1/cse544-s13/slides/cse544-selinux.pdf">http://www.cse.psu.edu/~trj1/cse544-s13/slides/cse544-selinux.pdf</a>
40+ slides, 2013, Reference</li>
</ol>
</div>
</div>



<div id="outline-container-orgeba715e" class="outline-3">
<h3 id="orgeba715e"><span class="section-number-3">9.2</span> References #3</h3>
<div class="outline-text-3" id="text-9-2">
<ol class="org-ol">
<li>Richard Haines, <code>The_SELinux_Notebook-4th_Edition.pdf</code>, ~400 pp;
Legit download.  Search the web for links. {pm: Pretty good.}
Recommended Reading.</li>

<li>RedHat, <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/pdf/selinux_users_and_administrators_guide/Red_Hat_Enterprise_Linux-7-SELinux_Users_and_Administrators_Guide-en-US.pdf">SELinux Users and Admin Guide</a> 2018, legit free PDF, 189
pp. Reference</li>

<li>Red Hat, <a href="./state-of-selinux-moore-2015.pdf">./state-of-selinux-moore-2015.pdf</a> Aug 2015 Short
presentation.  Aimed at SELinux developers.  Recommended Reading.</li>

<li><a href="http://www.linux.com/learn/docs/727873-overview-of-linux-kernel-security-features/">http://www.linux.com/learn/docs/727873-overview-of-linux-kernel-security-features/</a>
2013 Good overview.  Highly recommended reading.</li>

<li><a href="http://www.electronicsweekly.com/eyes-on-android/what-is/what-is-security-enhanced-se-android-2013-03/">http://www.electronicsweekly.com/eyes-on-android/what-is/what-is-security-enhanced-se-android-2013-03/</a>
2013 Overview. Light reading.  Recommended.</li>
</ol>
</div>
</div>

<div id="outline-container-orgc8715ed" class="outline-3">
<h3 id="orgc8715ed"><span class="section-number-3">9.3</span> References #4</h3>
<div class="outline-text-3" id="text-9-3">
<ol class="org-ol">
<li><a href="http://www-personal.umich.edu/~cja/SEL12/">http://www-personal.umich.edu/~cja/SEL12/</a> Hands-on SELinux: A
Practical Introduction SELinux short course, 2012; Uses VMware
Player, Server, or Fusion.  Reference.</li>

<li><a href="http://pages.mtu.edu/~xinlwang/itseed/labs/SELinux_Policy.pdf">http://pages.mtu.edu/~xinlwang/itseed/labs/SELinux_Policy.pdf</a> 19pp,
year=??,    Reference</li>

<li><a href="https://ict.senecacollege.ca/wiki/ifs/index.php/DPI904_SELinux_LAB">https://ict.senecacollege.ca/wiki/ifs/index.php/DPI904_SELinux_LAB</a>
Part 1 - Managing an SELinux System, Chapter 13 of the SELinux by
Example book.; Part 2 - Managing Confined Services,
<a href="http://docs.fedoraproject.org/selinux-managing-confined-services-guide/en-US/F11/html/">http://docs.fedoraproject.org/selinux-managing-confined-services-guide/en-US/F11/html/</a>;  Reference</li>

<li><a href="https://people.redhat.com/duffy/selinux/selinux-coloring-book_A4-Stapled.pdf">https://people.redhat.com/duffy/selinux/selinux-coloring-book_A4-Stapled.pdf</a>
16pp, Dan Walsh, Selinux Coloring Book.  {pm: Explains type
enforcement using cats and dogs as processes, and uses the
children's coloring book idea.}</li>

<li><a href="https://www.cyberciti.biz/tips/selinux-vs-apparmor-vs-grsecurity.html">https://www.cyberciti.biz/tips/selinux-vs-apparmor-vs-grsecurity.html</a> 2009</li>

<li><a href="https://www.nsa.gov/resources/everyone/digital-media-center/publications/research-papers/assets/files/implementing-selinux-as-linux-security-module-report.pdf">https://www.nsa.gov/resources/everyone/digital-media-center/publications/research-papers/assets/files/implementing-selinux-as-linux-security-module-report.pdf</a></li>
</ol>
</div>
</div>


<div id="outline-container-orgbc98b14" class="outline-3">
<h3 id="orgbc98b14"><span class="section-number-3">9.4</span> References for CEG 4440/6440 Android Security</h3>
<div class="outline-text-3" id="text-9-4">
<ol class="org-ol">
<li><a href="http://source.android.com/devices/tech/security/se-linux.html">http://source.android.com/devices/tech/security/se-linux.html</a>
Validating Security-Enhanced Linux in Android.  For 4440, Required
Reading.  Other courses, Recommended Reading.</li>

<li>Stephen Smaley,
<a href="http://kernsec.org/files/lss2014/lss2014_androidtcb_smalley.pdf">http://kernsec.org/files/lss2014/lss2014_androidtcb_smalley.pdf</a>
Protecting the Android TCB with SELinux</li>

<li>Stephen Smaley, "Security Enhanced (SE) Android: Bringing Flexible
MAC to Android." <a href="./SEAndroid-NDSS2013-pm-tab.pdf">./SEAndroid-NDSS2013-pm-tab.pdf</a> NDSS 2013 paper,
with a few of my annotations. Slides:
<a href="./seandroid-Presentation02_4.pdf">./seandroid-Presentation02_4.pdf</a> Academic conference paper.  For
4440, Required Reading.  Other courses, Recommended Reading.
{Stephen Smalley, Trusted Systems Research, National Security
Agency; original developer of SELinux and SEAndroid. }</li>

<li><a href="https://www.youtube.com/watch?v=KoK42DsKEtc">https://www.youtube.com/watch?v=KoK42DsKEtc</a> Defcon 21 Defeating
SEAndroid.  Recommended Watching.</li>
</ol>
</div>
</div>
</div>


<div id="outline-container-org6b3ffb7" class="outline-2">
<h2 id="org6b3ffb7"><span class="section-number-2">10</span> End</h2>
<div class="outline-text-2" id="text-10">
</div>
</div>
</div>
<div id="postamble" class="status">
<hr size=1>Copyright &copy; 2018 <a href="http://www.wright.edu/~pmateti">www.wright.edu/~pmateti</a> &bull; 2019-11-20
</div>
</body>
</html>
