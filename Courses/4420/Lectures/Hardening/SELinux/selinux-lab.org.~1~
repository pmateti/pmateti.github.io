
# -*- mode: org -*-
#+date: 2019-10-10
#+TITLE: Lab on SE Linux
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Prerequisites

1. Install SELinux.  Details depend on the distro. On Ubuntu: Read
   [[./selinux-ubuntu.org]].

1. This lab uses a modifiable Linux install that has SELinux.

1. On a Ubuntu system with SELinux installed, =man -k selinux | wc -l=
   was 103.  Check that your installation numbers are close, and
   install missing programs.

* Tasks

1. The requirement goals of this lab use the words "should", "should (not)
   be", etc.

2. For each of the requirements:: 
   1. Design, build and deploy a policy module.
   2. During development, it is recommended to keep SELinux in
      =permissive= mode.  When confident, switch to =enforcing=.
   3. Record and describe its effects. In =permissive= mode first,
      then in =enforcing= mode.
   4. Include a section discussing whether the requirements could have
      been met with just DAC only.
   5. These sentences are not repeated below.

1. Create users named =selinux=, =newbie=, and =untrusted= whose
   "privileges and abilities" should be curtailed by SELinux as
   described below.

1. Create a non-empty list of full path names of programs at
   =/etc/selinux/whitelist.conf=.  These should be considered white
   listed.  The list should include =/bin/bash=.  A program whose name
   does not appear in this list should be considered untrusted and
   black-listed.  Include this file in the tar ball for this lab.

1. Create a non-empty list of full path names of directories at
   =/etc/selinux/confidential.conf=.  This list includes
   =/etc/selinux/=.  The files within these directories should not be
   modifiable by "any one."  Reading them is permissible by root and
   selinux users only.  Other users should have no access.  Include
   this file in the tar ball for this lab.

** Task: Using SELinux [20 points]

1. Learn to use each of the following: =sestatus, seinfo, chcon=,
   =matchpathcon, restorecon, semanage, semodule, getsebool,
   setsebool, avcstat=.  Explain a selected sample or two of their
   output.

1. Search the log files, and select five interesting =avc: denied=
   entries.  Explain why the denials happened.

** Task: Newbie User [30 points]

1. User named =newbie= should not be able create a process unless it
   is the result of invoking an existing white-listed program through
   =bash=.

1. Such a process should not be able to fork at all.

** Task: Root User [30 points]

1. Log every action.
1. Root user should not be able to write/ update any file (text,
   binary, ...) within the directories whose full path names are
   in a list of confidential directories.
1. Even the root should not be able to disable selinux.

* Tasks [Bonus][Optional]

** Task: Protect =/etc/selinux/=

3. The files within the directory =/etc/selinux/= should be modifiable
   only by either =root= or user named =selinux=.  Read-open
   search-open permissions of other users is left for your good
   judgment to decide.

** Task: Untrusted User

1. User named =untrusted= should be able to invoke a program only when
   its full path name is white-listed.

1. User named =untrusted= should not be able to write/ update any file
   (text, binary, ...) within the directories whose full path names
   are in a list of confidential directories.



** Task: Untrusted Programs

1. Any program is considered untrusted if its full path name is not
   white-listed.  We wish to curtail their activities.

1. Untrusted programs should not be able to fork or exec.



* Submission

1. [15 points] Lab Report quality, compliance, and completeness.  [5
   points] Include a journal. By the hour.  You must follow the Lab
   Report Template.  There should be a section on each of the tasks. A
   couple of lines of an answer to each (implied/ explicit) question/
   discussion item. Must number them as in this document.

1. Use good judgment in (i) what to submit and (ii) what to omit and
   (iii) how long the report becomes.  Do not make the report way
   longer than, say, 20 pages.  It is possible to remain under 20 pp, and
   receive full score.  Lack of judgment earns *negative* points.

1. Submit relevant files of source code that you wrote, and of text.
   Always interpret the results -- when before + after states are in
   context.

1. Submit a PDF file named exactly =Report-L8.pdf=, and a tarball
   =L8.tbz= [created with =tar cfjvv L8.tbz source-files*= ]. (Scripts
   are used to check various things -- so file names should obey such
   "rules".)


* References

1. Prabhaker Mateti, Lecture Notes on SELinux, 2018.

1. https://people.redhat.com/~jduncan/workshops/selinux-vcu/#_lab_configuration
   SELinux Labs @ VCU.  Awareness Reference.

1. http://pages.mtu.edu/~xinlwang/itseed/labs/SELinux_Policy.pdf This
   lab is designed so that you can learn how to use and modify current
   SELinux policy.    Awareness Reference.

1. https://github.com/jamesfreeman959/selinux-hands-on-labs "A simple
   project to enable playing with SELinux contexts and policies on a
   bespoke piece of code."    Awareness Reference.

1. https://lms.360training.com/scorm/linuxfoundation/LFS201/LAB_SOL%2019.1.pdf
   Lab 19.1: SELinux *Includes solution*.    Awareness Reference.

1. https://www.computer.org/csdl/proceedings/hicss/2009/3450/00/10-05-05.pdf
   Machon B. Gregory National Security Agency mbgrego@tycho.ncsc.mil;
   Angela S. Reninger United States Naval Academy, National Security
   Agency reninger@usna.edu; Teaching SELinux in Introductory
   Information Assurance Classes, Proceedings of the 42nd Hawaii
   International Conference on System Sciences - 2009, Awareness
   Reference.

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
