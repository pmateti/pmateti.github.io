<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2019-11-22 Fri 07:22 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>SELinux DIY Policy Module</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Prabhaker Mateti" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="org-div-home-and-up">
 <a accesskey="h" href="../"> UP </a>
 |
 <a accesskey="H" href="../../Top/index.html"> HOME </a>
</div><div id="preamble" class="status">
2018-11-30 | <a href="../../"> ../../</a> | <a href=./>NoSlides</a>
</div>
<div id="content">
<h1 class="title">SELinux DIY Policy Module</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orge5099f8">1. Example Driven</a></li>
<li><a href="#org0244e28">2. seinfo demo</a></li>
<li><a href="#org3e1b502">3. Policy Rules</a>
<ul>
<li><a href="#org63a2f81">3.1. Reference Policy</a></li>
</ul>
</li>
<li><a href="#org3260082">4. Attributes: Group Types</a></li>
<li><a href="#orga911bf8">5. Policy Module</a></li>
<li><a href="#org93542cc">6. Our hddtemp Policy</a>
<ul>
<li><a href="#org5e99640">6.1. Check Environment</a></li>
<li><a href="#orgc3ffaef">6.2. Generating Initial Policy</a></li>
<li><a href="#orga84b2ec">6.3. Install Policy</a></li>
<li><a href="#orgd291f4a">6.4. Initial Policy: Checks</a></li>
<li><a href="#orgd663632">6.5. Permissive Domains</a></li>
</ul>
</li>
<li><a href="#orgdf757e3">7. Policy Development Suggestions</a></li>
<li><a href="#org584de22">8. Confined vs Unconfined daemon</a></li>
<li><a href="#orgf494774">9. ACK</a></li>
<li><a href="#org9f79451">10. End</a></li>
</ul>
</div>
</div>

<div id="outline-container-orge5099f8" class="outline-2">
<h2 id="orge5099f8"><span class="section-number-2">1</span> Example Driven</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>These notes describe a simple  DIY example  Policy Module</li>
<li><code>root@Milner:~# hddtemp -uF /dev/sdb</code> produces <code>/dev/sdb: WDC WD1002FAEX-00Z3A0: 91°F</code></li>

<li>An SELinux policy controls the AVC decisiom making based on process
labels coupled with other   labels on the system.</li>
<li>This is known as type enforcement.  Happens within the kernel LSM.</li>
</ol>
</div>
</div>

<div id="outline-container-org0244e28" class="outline-2">
<h2 id="org0244e28"><span class="section-number-2">2</span> seinfo demo</h2>
<div class="outline-text-2" id="text-2">
<ol class="org-ol">
<li><code>seinfo</code> on my PC (named Milner)</li>
<li><div class="org-src-container">
<pre class="src src-bash">root@Milner:~# seinfo
Statistics for policy file: /sys/fs/selinux/policy
Policy Version:             31 (MLS enabled)
Target Policy:              selinux
Handle unknown classes:     allow
  Classes:             128    Permissions:         454
  Sensitivities:         1    Categories:         1024
  Types:              4053    Attributes:          207
  Users:                 6    Roles:                14
  Booleans:            239    Cond. Expr.:         269
  Allow:            105172    Neverallow:            0
  Auditallow:           23    Dontaudit:         17663
  Type_trans:         9231    Type_change:          72
  Type_member:          16    Range_trans:          35
  Role allow:           28    Role_trans:          416
  Constraints:         136    Validatetrans:         0
  MLS Constrain:        57    MLS Val. Tran:         0
  Permissives:           0    Polcap:                5
  Defaults:              0    Typebounds:            0
  Allowxperm:            0    Neverallowxperm:       0
  Auditallowxperm:       0    Dontauditxperm:        0
  Initial SIDs:         27    Fs_use:               26
  Genfscon:             90    Portcon:             473
  Netifcon:              0    Nodecon:               0
</pre>
</div></li>

<li>The <code>man seinfo</code> describes all the above.</li>
</ol>
</div>
</div>

<div id="outline-container-org3e1b502" class="outline-2">
<h2 id="org3e1b502"><span class="section-number-2">3</span> Policy Rules</h2>
<div class="outline-text-2" id="text-3">
<ol class="org-ol">
<li>Syntax of a Policy Rules Statement: <i>command sourcetype targettype: class permissions;</i></li>
<li>command: <code>allow, dontaudit, audit2allow, neverallow</code></li>
<li>class: <code>file, dir, sock_file, tcp_socket, process</code></li>
<li>perms: <code>read, open, write</code></li>
<li>ex: <code>allow staff_t etc_t:file { open read getattr ioctl lock};</code></li>
<li>ex: <code>dontaudit staff_t shadow_t:file { open read getattr ioctl lock};</code></li>
</ol>
</div>

<div id="outline-container-org63a2f81" class="outline-3">
<h3 id="org63a2f81"><span class="section-number-3">3.1</span> Reference Policy</h3>
<div class="outline-text-3" id="text-3-1">
<ol class="org-ol">
<li><a href="https://en.wikipedia.org/wiki/M4_(computer_language)">m4 is a well-known general purpose macro language</a></li>
<li>Example macro: <code>define(`r_file_perms', `{ open read getattr lock ioctl }</code></li>
<li><a href="https://github.com/SELinuxProject/refpolicy">https://github.com/SELinuxProject/refpolicy</a> SELinux Reference
Policy.  If you are developing several DIY policy modules, become
familiar with M4.  Else, learn enough from this example policy.  Do
read the README.</li>
</ol>
</div>
</div>
</div>

<div id="outline-container-org3260082" class="outline-2">
<h2 id="org3260082"><span class="section-number-2">4</span> Attributes: Group Types</h2>
<div class="outline-text-2" id="text-4">
<ol class="org-ol">
<li><code>attribute file_type</code></li>
<li><code>type etc_t, file_type</code></li>
<li><code>typeattribute etc_t, file_type</code></li>
<li><code>allow rpm_t file_type: file manage_file_perms</code></li>
</ol>
</div>
</div>

<div id="outline-container-orga911bf8" class="outline-2">
<h2 id="orga911bf8"><span class="section-number-2">5</span> Policy Module</h2>
<div class="outline-text-2" id="text-5">
<ol class="org-ol">
<li>It is a place where all policy statements are located.</li>
<li>Allows users to easily customize policy</li>
<li>Allows third parties to ship policy with their debs, rpms,
&#x2026; packages</li>

<li>Similar to kernel modules</li>
<li>Recompile and reload</li>

<li>Generate policy package (.pp) to be installed on systems.</li>
</ol>
</div>
</div>

<div id="outline-container-org93542cc" class="outline-2">
<h2 id="org93542cc"><span class="section-number-2">6</span> Our hddtemp Policy</h2>
<div class="outline-text-2" id="text-6">
<ol class="org-ol">
<li>Disable the current policy: <code># semodule -d hddtemp</code></li>
<li><p>
Fix labels
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #b22222;"># </span><span style="color: #b22222;">for i in $(</span><span style="color: #ff00ff;">dpkg</span><span style="color: #b22222;"> -L hddtemp); do restorecon -R -v $i; done</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">systemctl restart hddtemp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">ps -eZ | grep hddtemp</span>
</pre>
</div></li>

<li>What are you getting?  [Pause reading and check.]</li>
</ol>
</div>

<div id="outline-container-org5e99640" class="outline-3">
<h3 id="org5e99640"><span class="section-number-3">6.1</span> Check Environment</h3>
<div class="outline-text-3" id="text-6-1">
<ol class="org-ol">
<li>You should see <code>initrc_t</code> type</li>
<li>Default type for process without SELinux policy started by init system</li>
<li>unconfined domain</li>
<li>We don't want to have <code>initrc_t</code> on a system =&gt; we need to create a policy</li>
</ol>
</div>
</div>

<div id="outline-container-orgc3ffaef" class="outline-3">
<h3 id="orgc3ffaef"><span class="section-number-3">6.2</span> Generating Initial Policy</h3>
<div class="outline-text-3" id="text-6-2">
<ol class="org-ol">
<li><p>
Generate the policy files: [cwd was <code>/root</code> ]
</p>
<pre class="example">
sepolicy generate -n myhddtemp --init $(which hddtemp)

</pre>
<p>
Created the following files:
</p>

<div class="org-src-container">
<pre class="src src-bash">/root/myhddtemp.te <span style="color: #b22222;"># </span><span style="color: #b22222;">Type Enforcement file</span>
/root/myhddtemp.if <span style="color: #b22222;"># </span><span style="color: #b22222;">Interface file</span>
/root/myhddtemp.fc <span style="color: #b22222;"># </span><span style="color: #b22222;">File Contexts file</span>
/root/myhddtemp.sh <span style="color: #b22222;"># </span><span style="color: #b22222;">Setup Script</span>
</pre>
</div></li>
</ol>
</div>
</div>

<div id="outline-container-orga84b2ec" class="outline-3">
<h3 id="orga84b2ec"><span class="section-number-3">6.3</span> Install Policy</h3>
<div class="outline-text-3" id="text-6-3">
<ol class="org-ol">
<li><code># sh myhddtemp.sh</code>   [cwd was <code>/root</code> ]</li>
<li><p>
Using Makefile shown, generate <code>.pp</code> file
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #b22222;"># </span><span style="color: #b22222;">make -f /usr/share/selinux/devel/Makefile myhddtemp.pp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">systemctl hddtemp stop</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">semodule -i myhddtemp.pp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">for i in $(</span><span style="color: #ff00ff;">dpkg</span><span style="color: #b22222;"> -L hddtemp);do restorecon -R -v $i;done</span>
</pre>
</div></li>
</ol>
</div>
</div>

<div id="outline-container-orgd291f4a" class="outline-3">
<h3 id="orgd291f4a"><span class="section-number-3">6.4</span> Initial Policy: Checks</h3>
<div class="outline-text-3" id="text-6-4">
<ol class="org-ol">
<li><div class="org-src-container">
<pre class="src src-bash"><span style="color: #b22222;"># </span><span style="color: #b22222;">semodule -l | grep hddtemp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">ls -Z `which hddtemp`</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">systemctl start hddtemp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">ps -eZ | grep hddtemp</span>
<span style="color: #b22222;"># </span><span style="color: #b22222;">ausearch -m avc -ts recent</span>
</pre>
</div></li>

<li>Does the service work correctly?</li>
<li>Does it work without permissive?</li>
</ol>
</div>
</div>


<div id="outline-container-orgd663632" class="outline-3">
<h3 id="orgd663632"><span class="section-number-3">6.5</span> Permissive Domains</h3>
<div class="outline-text-3" id="text-6-5">
<ol class="org-ol">
<li>Initial policies are running as permissive  domains</li>
<li>Check AVC messages: <code># ausearch -m avc -ts recent | grep hddtemp</code></li>
<li>Make domain permissive: <code># semanage permissive -a hddtemp_t</code></li>
<li>Users don't have to switch to permissive mode globally</li>
</ol>
</div>
</div>
</div>

<div id="outline-container-orgdf757e3" class="outline-2">
<h2 id="orgdf757e3"><span class="section-number-2">7</span> Policy Development Suggestions</h2>
<div class="outline-text-2" id="text-7">
<ol class="org-ol">
<li>Loop until a policy works fine
<ol class="org-ol">
<li>test application</li>
<li>examine generated AVC messages</li>
</ol></li>

<li>Use <code>ausearch, audit2allow</code> tools.<br />
<code># ausearch -m avc -ts today | grep hddtemp | audit2allow -R &gt;&gt; myhddtemp.te</code></li>

<li>Compile and load rules
<ol class="org-ol">
<li><code># make -f /usr/share/selinux/devel/Makefile myhddtemp.pp</code></li>
<li><code># semodule -i myhddtemp.pp</code></li>
</ol></li>
<li>Test it with enforcing mode</li>
</ol>
</div>
</div>

<div id="outline-container-org584de22" class="outline-2">
<h2 id="org584de22"><span class="section-number-2">8</span> Confined vs Unconfined daemon</h2>
<div class="outline-text-2" id="text-8">
<ol class="org-ol">
<li>without myhddtemp policy
<ol class="org-ol">
<li><code>ls -Z /sbin/hddtemp -&gt; bin_t type</code></li>
<li><code>init_t @bin_t -&gt; initrc_t</code></li>
</ol></li>
<li>with the myhddtemp policy
<ol class="org-ol">
<li><code>ls -Z /sbin/hddtemp -&gt; myhddtemp_exec_t type</code></li>
<li><code>init_t @hddtemp_exec_t -&gt; hddtemp_t</code></li>
</ol></li>
<li>run directly
<ol class="org-ol">
<li><code>unconfined_t @hddtemp_exec_t-&gt; hddtemp_t</code></li>
</ol></li>
</ol>
</div>
</div>

<div id="outline-container-orgf494774" class="outline-2">
<h2 id="orgf494774"><span class="section-number-2">9</span> ACK</h2>
<div class="outline-text-2" id="text-9">
<p>
Thanks to several web articles.
</p>
</div>
</div>

<div id="outline-container-org9f79451" class="outline-2">
<h2 id="org9f79451"><span class="section-number-2">10</span> End</h2>
<div class="outline-text-2" id="text-10">
</div>
</div>
</div>
<div id="postamble" class="status">
<hr size=1>Copyright &copy; 2018 <a href="http://www.wright.edu/~pmateti">www.wright.edu/~pmateti</a> &bull; 2018-11-30
</div>
</body>
</html>
