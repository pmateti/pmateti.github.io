
# -*- mode: org -*-
#+date: 2018-11-05
#+TITLE: pmNotes SysCalls [WIP] [Not-On-Web]
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

** bash scripts

1. strace and filter out dupes
   =strace ls 1>/dev/null 2>/tmp/ls.strace; cat /tmp/ls.strace | cut -d'(' -f1 | sort -u=


* PMateti Exploration =linux-4.0.5/=

1. =# grep sys_call_table /boot/System.map-3.19.0-18-lowlatency=\\
   =ffffffff81801680 R sys_call_table=\\
   =ffffffff8180d9c0 R ia32_sys_call_table=\\

1. The table is in a read-only page.  Need to make this writable.  See
   https://exploit.ph/linux-kernel-hacking/2014/07/10/system-call-hooking/
   Welcome to the third post on Linux kernel hacking. In the first we
   looked at how to create a basic LKM and in the second we created a
   character device and communicated with it.  ... Here we will
   develop an LKM that will hide files from the unix ls command.

1. =grep syscall /boot/System.map-3.19.0-18-lowlatency -n= shows 803 hits.
   =grep syscall /boot/System.map-4.18.0-10-generic | wc -l= shows 851

1. =grep 'sys_call_table' /boot/System.map-3.19.0-18-lowlatency -n=

1. =grep _text /boot/System.map-3.19.0-18-lowlatency= ffffffff81000000
   T _text

1. =/usr/src/linux-3.0/include/asm-generic/unistd.h=

1. =/usr/src/linux-4.0.5/include/linux/syscalls.h=

1. =% grep _unlock_kernel -R /usr/src/linux-4.0.5=
./drivers/misc/sgi-gru/grukservices.c:static void gru_unlock_kernel_context(int blade_id)
./drivers/misc/sgi-gru/grukservices.c:  gru_unlock_kernel_context(uv_numa_blade_id());
./drivers/misc/sgi-gru/grukservices.c:  gru_unlock_kernel_context(blade_id);
Why did I do this??

1. modinfo signature

   #+begin_src bash
% modinfo /lib/modules/3.19.0-18-lowlatency/kernel/mm/hwpoison-inject.ko 
filename:       /lib/modules/3.19.0-18-lowlatency/kernel/mm/hwpoison-inject.ko
license:        GPL
srcversion:     3511DE2CEE4213EB35BCC1B
depends:        
intree:         Y
vermagic:       3.19.0-18-lowlatency SMP preempt mod_unload modversions 
signer:         Magrathea: Glacier signing key
sig_key:        56:7C:C5:8B:11:79:FD:B3:BB:63:27:71:8E:FA:C1:BD:5C:CB:8C:52
sig_hashalgo:   sha512
#+end_src

1. =syscall_table= after =% cd /usr/src/linux-4.0.5/arch/=

   #+begin_src bash
% ls -lGi */kernel/syscall_table.S  # edited
102503418   7892 Jun  6 11:21 avr32/kernel/syscall_table.S
102894905   9674 Jun  6 11:21 m32r/kernel/syscall_table.S
103026775  10049 Jun  6 11:21 microblaze/kernel/syscall_table.S
103423300  13877 Jun  6 11:21 parisc/kernel/syscall_table.S
#+end_src

Note the absence of =x86/kernel/syscall_table.S=

#+begin_src bash
% ls -lGi x86/kernel/syscall_*.c
103817339 -rw-rw-r-- 1 pmateti 655 Jun  6 11:21 x86/kernel/syscall_32.c
103817340 -rw-rw-r-- 1 pmateti 853 Jun  6 11:21 x86/kernel/syscall_64.c
#+end_src

#+begin_src bash
% ls -l x86/syscalls
total 44
-rw-rw-r-- 1 pmateti pmateti  1824 Jun  6 11:21 Makefile
-rw-rw-r-- 1 pmateti pmateti 14671 Jun  6 11:21 syscall_32.tbl
-rw-rw-r-- 1 pmateti pmateti 12754 Jun  6 11:21 syscall_64.tbl
-rw-rw-r-- 1 pmateti pmateti   644 Jun  6 11:21 syscallhdr.sh
-rw-rw-r-- 1 pmateti pmateti   327 Jun  6 11:21 syscalltbl.sh
#+end_src

* References

1. TBD Prabhaker Mateti, System Call Setup in Linux, 2018.
1. Asish Sahadevan, MTech Thesis, Advisor: Prabhaker Mateti, 2015.
1. http://www.cs.albany.edu/~sdc/CSI500/Fal11/Labs/L06/OwnSyscall.html Lab on making your own system call.


1. https://www.kernel.org/doc/Documentation/kbuild/modules.txt
1. http://www.tldp.org/LDP/lkmpg/2.6/html/x181.html

1. https://linux-kernel-labs.github.io/master/labs/kernel_api.html
1. https://pdos.csail.mit.edu/6.828/2017/labs/lab3/
1. https://compas.cs.stonybrook.edu/~nhonarmand/courses/sp17/cse506/labs.html
1. https://github.com/auca/com.341/tree/master/Practice%202
1. https://linux-kernel-labs.github.io/master/ Linux Kernel Teaching, 201x.
1. http://learnlinuxconcepts.blogspot.com/2014/03/memory-layout-of-userspace-c-program.html


* References

1. TBD Prune these.  Include reading suggestions.

1. Robert Love, Linux Kernel Development, 3rd Edition, Addison Wesley,
   2010, 460++ pp, http://www.makelinux.net/books/lkd2/ch05lev1sec4

1. http://en.wikipedia.org/wiki/System_call

1. Sunil Gadi, TBD.  Details are obsolete; but the conceptual
   discussion of freezing system calls is one of the best.  Highly
   Recommended Reading.

1. http://unix.stackexchange.com/questions/125343/what-is-meant-by-a-system-call-if-not-the-implementation-in-the-programing-lan April 2014

1. David Drysdale, Anatomy of a system call.  Appeared in three parts
   in 2014. (i) http://lwn.net/Articles/604287/ (ii)
   http://lwn.net/Articles/604515/ July 16, 2014
   (iii). http://lwn.net/Articles/604406/.

1. Jonathan Corbet, http://lwn.net/Articles/475043/ Yet another new
   approach to seccomp, January 11, 2012

1. Greg Kroah-Hartman, Jonathan Corbet, and Amanda McPherson, "Linux
   Kernel Development How Fast it is Going, Who is Doing It, What They
   are Doing, and Who is Sponsoring It: An August 2009 Update",
   http://www.linuxfoundation.org/sites/main/files/publications/whowriteslinux.pdf, 2009.
   Highly Recommended Reading.

1. http://kernelnewbies.org/ Begin here if you wish to learn kernel
   devlopment beyond this class room article.  Recommended Visit.
1. http://eudyptula-challenge.org/ The Eudyptula Challenge is a series
   of programming exercises for the Linux kernel, that start from a
   very basic "Hello world" kernel module, moving on up in complexity
   to getting patches accepted into the main Linux kernel source tree.
   {pm: Seems dubious.  No source code!}

1. http://www.csee.umbc.edu/courses/undergraduate/CMSC421/fall02/burt/projects/howto_add_systemcall.html

1. http://tssurya.wordpress.com/2014/08/19/adding-a-hello-world-system-call-to-linux-kernel-3-16-0/

1. https://www.google.com/webhp?&q=linux+arm+syscall+implementation

1. http://stackoverflow.com/questions/25431095/how-to-implement-system-call-in-arm64 a good explanation Aug 2014
1. https://github.com/android/platform_bionic/blob/master/libc/arch-arm64/syscalls/write.S
1. http://infocenter.arm.com/help/topic/com.arm.doc.subset.swdev.abi/index.html

1. Jonathan Corbet, http://lwn.net/Articles/475043/ Yet another new
   approach to seccomp, January 11, 2012

1. https://filippo.io/linux-syscall-table/  Good. 2014

1. Sys Call Implementation Refs

1. http://www.cs.swarthmore.edu/~newhall/cs45/s14/Labs/lab02.php

1. http://stackoverflow.com/questions/25431095/how-to-implement-system-call-in-arm64

1. http://www.tldp.org/HOWTO/html_single/Implement-Sys-Call-Linux-2.6-i386/
   Good but
   obsolete. https://shanetully.com/2014/04/adding-a-syscall-to-linux-3-14/
   updated here.

1. http://stackoverflow.com/questions/22274194/implementing-custom-system-call-in-android-kernel

1. http://www.quora.com/How-can-I-hook-system-calls-in-Linux The
   syscall table is R/O from kernel 2.6.24 onwards, however it's
   possible to hook a syscall by disabling page protection using
   =set_memory_rw= (and then enabling it before exiting using
   =set_memory_ro=).  Note.

1. http://www.gilgalab.com.br/hacking/programming/linux/2013/01/11/Hooking-Linux-3-syscalls/
   =find_sys_call_table()= =long my_sys_open(const char __user
   *filename, int flags, int mode)= Not bad.  =printk(KERN_DEBUG "Cannot set the memory to rw (%d) at addr %16lX\n", ret, PAGE_ALIGN(addr) - PAGE_SIZE);=

1. path name of sys call table file =arch/x86/syscalls/syscall_64.tbl=

1. http://www.ibm.com/developerworks/library/l-system-calls/ Linux®
   system calls—we use them every day. But do you know how a system
   call is performed from user-space to the kernel? Explore the Linux
   system call interface (SCI), learn how to add new system calls (and
   alternatives for doing so), and discover utilities related to the
   SCI. [This article has been updated to reflect coding changes for
   kernels 2.6.18 and later. -Ed.] February 2010 

* Refs-2018

1. http://www.cs.unc.edu/~porter/courses/cse306/s13/lab1.html Due
   11:59 PM, Friday, February 15, 2013 3rd part: Text processing using
   syscalls, without libc.

1. https://sysdig.com/blog/fascinating-world-linux-system-calls/ 2014
1. https://www.cs.swarthmore.edu/~newhall/cs45/s14/Labs/lab02.php  Add
   new syscalls.  Uses VirtualBox.
   https://www.cs.swarthmore.edu/~newhall/unixhelp/virtualbox_lab2.php

1. http://www.cs.albany.edu/~sdc/CSI500/Fal13/Labs/OwnSyscallV3plus/OwnSyscallFE.html
   2013 Uses VirtualBox and Gentoo.vdi Details on syscall impl, and
   kernel experience.
1. http://trolen.polytech.unice.fr/cours/esa/02-Lab.pdf
1. http://soc.eurecom.fr/OS/labs_kernel.html Course on Operating
   Systems - Fall 2018 Uses vmplayer.  Lab on hacking the Linux
   kernel.  Compiling the Linux kernel. II. Adding a basic system call
   to Linux: "kernelprint" system call.  Bonus work: Optimizing the
   size of the Linux kernel.  pm: All at a level I like.
1. http://www.cs.otago.ac.nz/cosc440/labs/lab01.pdf  Rasbian Linux;
   Impl cat-equiv.

1. https://github.com/tinyclub/linux-0.11-lab/tree/master/examples/syscall
   How to add a new system call 2017
1. http://www.cs.columbia.edu/~krj/os/lectures/L04-IPC.pdf
1. http://people.clarkson.edu/~jmatthew/os/labs/lab03.pdf 16 slides,
   Operating Systems, CS 444/544 Spring 2016 Jeanna Matthews
1. https://medium.com/@jeremyphilemon/adding-a-quick-system-call-to-the-linux-kernel-cad55b421a7b
   2018? Adding a quick System Call to the Linux Kernel.  Print-Hello
   to the log.
1. http://www.cs.ucr.edu/~nael/cs153/labs/lab1.html Lab 1: Fun with
   system calls. pm: Not about adding syscalls, but more data members
   to the process.
1. https://linux-kernel-labs.github.io/master/labs/exercises.html
   Built with Sphinx using a theme provided by Read the Docs.  Virtual
   Machine Setup; gdb on cmlinux; Exercises; Kernel modules Lab
   objectives ; mount -t debugfs none /debug;
   https://github.com/linux-kernel-labs;
   https://ocw.cs.pub.ro/courses/so2;
   https://elixir.bootlin.com/linux/latest/source; {pm: May be the best hands-on descriptions.}

1. https://medium.com/@ssreehari/implementing-a-system-call-in-linux-kernel-4-7-1-6f98250a8c38
   Sreehari Computer Science Undergrad | BITS Pilani-Goa | Quizzer |
   Speaker Research-TEDxBITSGoa Aug 30, 2016

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
