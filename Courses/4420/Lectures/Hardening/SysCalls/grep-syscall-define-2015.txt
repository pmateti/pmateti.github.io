./security/keys/compat.c:COMPAT_SYSCALL_DEFINE5(keyctl, u32, option,
./security/keys/keyctl.c:SYSCALL_DEFINE5(add_key, const char __user *, _type,
./security/keys/keyctl.c:SYSCALL_DEFINE4(request_key, const char __user *, _type,
./security/keys/keyctl.c:SYSCALL_DEFINE5(keyctl, int, option, unsigned long, arg2, unsigned long, arg3,
./kernel/uid16.c:SYSCALL_DEFINE3(chown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)
./kernel/uid16.c:SYSCALL_DEFINE3(lchown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)
./kernel/uid16.c:SYSCALL_DEFINE3(fchown16, unsigned int, fd, old_uid_t, user, old_gid_t, group)
./kernel/uid16.c:SYSCALL_DEFINE2(setregid16, old_gid_t, rgid, old_gid_t, egid)
./kernel/uid16.c:SYSCALL_DEFINE1(setgid16, old_gid_t, gid)
./kernel/uid16.c:SYSCALL_DEFINE2(setreuid16, old_uid_t, ruid, old_uid_t, euid)
./kernel/uid16.c:SYSCALL_DEFINE1(setuid16, old_uid_t, uid)
./kernel/uid16.c:SYSCALL_DEFINE3(setresuid16, old_uid_t, ruid, old_uid_t, euid, old_uid_t, suid)
./kernel/uid16.c:SYSCALL_DEFINE3(getresuid16, old_uid_t __user *, ruidp, old_uid_t __user *, euidp, old_uid_t __user *, suidp)
./kernel/uid16.c:SYSCALL_DEFINE3(setresgid16, old_gid_t, rgid, old_gid_t, egid, old_gid_t, sgid)
./kernel/uid16.c:SYSCALL_DEFINE3(getresgid16, old_gid_t __user *, rgidp, old_gid_t __user *, egidp, old_gid_t __user *, sgidp)
./kernel/uid16.c:SYSCALL_DEFINE1(setfsuid16, old_uid_t, uid)
./kernel/uid16.c:SYSCALL_DEFINE1(setfsgid16, old_gid_t, gid)
./kernel/uid16.c:SYSCALL_DEFINE2(getgroups16, int, gidsetsize, old_gid_t __user *, grouplist)
./kernel/uid16.c:SYSCALL_DEFINE2(setgroups16, int, gidsetsize, old_gid_t __user *, grouplist)
./kernel/uid16.c:SYSCALL_DEFINE0(getuid16)
./kernel/uid16.c:SYSCALL_DEFINE0(geteuid16)
./kernel/uid16.c:SYSCALL_DEFINE0(getgid16)
./kernel/uid16.c:SYSCALL_DEFINE0(getegid16)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(gettimeofday, struct compat_timeval __user *, tv,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(settimeofday, struct compat_timeval __user *, tv,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(nanosleep, struct compat_timespec __user *, rqtp,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(getitimer, int, which,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE3(setitimer, int, which,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE1(times, struct compat_tms __user *, tbuf)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE1(sigpending, compat_old_sigset_t __user *, set)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE3(sigprocmask, int, how,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(setrlimit, unsigned int, resource,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(getrlimit, unsigned int, resource,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE4(wait4,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE5(waitid,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE3(sched_setaffinity, compat_pid_t, pid,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE3(sched_getaffinity, compat_pid_t,  pid, unsigned int, len,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE3(timer_create, clockid_t, which_clock,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE4(timer_settime, timer_t, timer_id, int, flags,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(timer_gettime, timer_t, timer_id,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(clock_settime, clockid_t, which_clock,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(clock_gettime, clockid_t, which_clock,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(clock_adjtime, clockid_t, which_clock,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(clock_getres, clockid_t, which_clock,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE4(clock_nanosleep, clockid_t, which_clock, int, flags,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE4(rt_sigtimedwait, compat_sigset_t __user *, uthese,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE1(time, compat_time_t __user *, tloc)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE1(stime, compat_time_t __user *, tptr)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE1(adjtimex, struct compat_timex __user *, utp)
./kernel/compat.c:COMPAT_SYSCALL_DEFINE6(move_pages, pid_t, pid, compat_ulong_t, nr_pages,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE4(migrate_pages, compat_pid_t, pid,
./kernel/compat.c:COMPAT_SYSCALL_DEFINE2(sched_rr_get_interval,
./kernel/time/time.c:SYSCALL_DEFINE1(time, time_t __user *, tloc)
./kernel/time/time.c:SYSCALL_DEFINE1(stime, time_t __user *, tptr)
./kernel/time/time.c:SYSCALL_DEFINE2(gettimeofday, struct timeval __user *, tv,
./kernel/time/time.c:SYSCALL_DEFINE2(settimeofday, struct timeval __user *, tv,
./kernel/time/time.c:SYSCALL_DEFINE1(adjtimex, struct timex __user *, txc_p)
./kernel/time/Kconfig:config GENERIC_TIME_VSYSCALL_OLD
./kernel/time/itimer.c:SYSCALL_DEFINE2(getitimer, int, which, struct itimerval __user *, value)
./kernel/time/itimer.c:SYSCALL_DEFINE3(setitimer, int, which, struct itimerval __user *, value,
./kernel/time/timer.c:SYSCALL_DEFINE1(alarm, unsigned int, seconds)
./kernel/time/posix-timers.c:SYSCALL_DEFINE3(timer_create, const clockid_t, which_clock,
./kernel/time/posix-timers.c:SYSCALL_DEFINE2(timer_gettime, timer_t, timer_id,
./kernel/time/posix-timers.c:SYSCALL_DEFINE1(timer_getoverrun, timer_t, timer_id)
./kernel/time/posix-timers.c:SYSCALL_DEFINE4(timer_settime, timer_t, timer_id, int, flags,
./kernel/time/posix-timers.c:SYSCALL_DEFINE1(timer_delete, timer_t, timer_id)
./kernel/time/posix-timers.c:SYSCALL_DEFINE2(clock_settime, const clockid_t, which_clock,
./kernel/time/posix-timers.c:SYSCALL_DEFINE2(clock_gettime, const clockid_t, which_clock,
./kernel/time/posix-timers.c:SYSCALL_DEFINE2(clock_adjtime, const clockid_t, which_clock,
./kernel/time/posix-timers.c:SYSCALL_DEFINE2(clock_getres, const clockid_t, which_clock,
./kernel/time/posix-timers.c:SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,
./kernel/time/timekeeping.c:#ifdef CONFIG_GENERIC_TIME_VSYSCALL_OLD
./kernel/time/timekeeping.c:	* (shifted nanoseconds), and CONFIG_GENERIC_TIME_VSYSCALL_OLD
./kernel/time/hrtimer.c:SYSCALL_DEFINE2(nanosleep, struct timespec __user *, rqtp,
./kernel/exit.c:SYSCALL_DEFINE1(exit, int, error_code)
./kernel/exit.c:SYSCALL_DEFINE1(exit_group, int, error_code)
./kernel/exit.c:SYSCALL_DEFINE5(waitid, int, which, pid_t, upid, struct siginfo __user *,
./kernel/exit.c:SYSCALL_DEFINE4(wait4, pid_t, upid, int __user *, stat_addr,
./kernel/exit.c:SYSCALL_DEFINE3(waitpid, pid_t, pid, int __user *, stat_addr, int, options)
./kernel/signal.c:SYSCALL_DEFINE0(restart_syscall)
./kernel/signal.c:SYSCALL_DEFINE4(rt_sigprocmask, int, how, sigset_t __user *, nset,
./kernel/signal.c:COMPAT_SYSCALL_DEFINE4(rt_sigprocmask, int, how, compat_sigset_t __user *, nset,
./kernel/signal.c:SYSCALL_DEFINE2(rt_sigpending, sigset_t __user *, uset, size_t, sigsetsize)
./kernel/signal.c:COMPAT_SYSCALL_DEFINE2(rt_sigpending, compat_sigset_t __user *, uset,
./kernel/signal.c:SYSCALL_DEFINE4(rt_sigtimedwait, const sigset_t __user *, uthese,
./kernel/signal.c:SYSCALL_DEFINE2(kill, pid_t, pid, int, sig)
./kernel/signal.c:SYSCALL_DEFINE3(tgkill, pid_t, tgid, pid_t, pid, int, sig)
./kernel/signal.c:SYSCALL_DEFINE2(tkill, pid_t, pid, int, sig)
./kernel/signal.c:SYSCALL_DEFINE3(rt_sigqueueinfo, pid_t, pid, int, sig,
./kernel/signal.c:COMPAT_SYSCALL_DEFINE3(rt_sigqueueinfo,
./kernel/signal.c:SYSCALL_DEFINE4(rt_tgsigqueueinfo, pid_t, tgid, pid_t, pid, int, sig,
./kernel/signal.c:COMPAT_SYSCALL_DEFINE4(rt_tgsigqueueinfo,
./kernel/signal.c:SYSCALL_DEFINE2(sigaltstack,const stack_t __user *,uss, stack_t __user *,uoss)
./kernel/signal.c:COMPAT_SYSCALL_DEFINE2(sigaltstack,
./kernel/signal.c:SYSCALL_DEFINE1(sigpending, old_sigset_t __user *, set)
./kernel/signal.c:SYSCALL_DEFINE3(sigprocmask, int, how, old_sigset_t __user *, nset,
./kernel/signal.c:SYSCALL_DEFINE4(rt_sigaction, int, sig,
./kernel/signal.c:COMPAT_SYSCALL_DEFINE4(rt_sigaction, int, sig,
./kernel/signal.c:SYSCALL_DEFINE3(sigaction, int, sig,
./kernel/signal.c:COMPAT_SYSCALL_DEFINE3(sigaction, int, sig,
./kernel/signal.c:SYSCALL_DEFINE0(sgetmask)
./kernel/signal.c:SYSCALL_DEFINE1(ssetmask, int, newmask)
./kernel/signal.c:SYSCALL_DEFINE2(signal, int, sig, __sighandler_t, handler)
./kernel/signal.c:SYSCALL_DEFINE0(pause)
./kernel/signal.c:SYSCALL_DEFINE2(rt_sigsuspend, sigset_t __user *, unewset, size_t, sigsetsize)
./kernel/signal.c:COMPAT_SYSCALL_DEFINE2(rt_sigsuspend, compat_sigset_t __user *, unewset, compat_size_t, sigsetsize)
./kernel/signal.c:SYSCALL_DEFINE1(sigsuspend, old_sigset_t, mask)
./kernel/signal.c:SYSCALL_DEFINE3(sigsuspend, int, unused1, int, unused2, old_sigset_t, mask)
./kernel/module.c:SYSCALL_DEFINE2(delete_module, const char __user *, name_user,
./kernel/module.c:SYSCALL_DEFINE3(init_module, void __user *, umod,
./kernel/module.c:SYSCALL_DEFINE3(finit_module, int, fd, const char __user *, uargs, int, flags)
./kernel/printk/printk.c:SYSCALL_DEFINE3(syslog, int, type, char __user *, buf, int, len)
./kernel/events/core.c:SYSCALL_DEFINE5(perf_event_open,
./kernel/sys.c:SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)
./kernel/sys.c:SYSCALL_DEFINE2(getpriority, int, which, int, who)
./kernel/sys.c:SYSCALL_DEFINE2(setregid, gid_t, rgid, gid_t, egid)
./kernel/sys.c:SYSCALL_DEFINE1(setgid, gid_t, gid)
./kernel/sys.c:SYSCALL_DEFINE2(setreuid, uid_t, ruid, uid_t, euid)
./kernel/sys.c:SYSCALL_DEFINE1(setuid, uid_t, uid)
./kernel/sys.c:SYSCALL_DEFINE3(setresuid, uid_t, ruid, uid_t, euid, uid_t, suid)
./kernel/sys.c:SYSCALL_DEFINE3(getresuid, uid_t __user *, ruidp, uid_t __user *, euidp, uid_t __user *, suidp)
./kernel/sys.c:SYSCALL_DEFINE3(setresgid, gid_t, rgid, gid_t, egid, gid_t, sgid)
./kernel/sys.c:SYSCALL_DEFINE3(getresgid, gid_t __user *, rgidp, gid_t __user *, egidp, gid_t __user *, sgidp)
./kernel/sys.c:SYSCALL_DEFINE1(setfsuid, uid_t, uid)
./kernel/sys.c:SYSCALL_DEFINE1(setfsgid, gid_t, gid)
./kernel/sys.c:SYSCALL_DEFINE0(getpid)
./kernel/sys.c:SYSCALL_DEFINE0(gettid)
./kernel/sys.c:SYSCALL_DEFINE0(getppid)
./kernel/sys.c:SYSCALL_DEFINE0(getuid)
./kernel/sys.c:SYSCALL_DEFINE0(geteuid)
./kernel/sys.c:SYSCALL_DEFINE0(getgid)
./kernel/sys.c:SYSCALL_DEFINE0(getegid)
./kernel/sys.c:SYSCALL_DEFINE1(times, struct tms __user *, tbuf)
./kernel/sys.c:SYSCALL_DEFINE2(setpgid, pid_t, pid, pid_t, pgid)
./kernel/sys.c:SYSCALL_DEFINE1(getpgid, pid_t, pid)
./kernel/sys.c:SYSCALL_DEFINE0(getpgrp)
./kernel/sys.c:SYSCALL_DEFINE1(getsid, pid_t, pid)
./kernel/sys.c:SYSCALL_DEFINE0(setsid)
./kernel/sys.c:SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)
./kernel/sys.c:SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)
./kernel/sys.c:SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)
./kernel/sys.c:SYSCALL_DEFINE2(sethostname, char __user *, name, int, len)
./kernel/sys.c:SYSCALL_DEFINE2(gethostname, char __user *, name, int, len)
./kernel/sys.c:SYSCALL_DEFINE2(setdomainname, char __user *, name, int, len)
./kernel/sys.c:SYSCALL_DEFINE2(getrlimit, unsigned int, resource, struct rlimit __user *, rlim)
./kernel/sys.c:SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,
./kernel/sys.c:SYSCALL_DEFINE4(prlimit64, pid_t, pid, unsigned int, resource,
./kernel/sys.c:SYSCALL_DEFINE2(setrlimit, unsigned int, resource, struct rlimit __user *, rlim)
./kernel/sys.c:SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)
./kernel/sys.c:COMPAT_SYSCALL_DEFINE2(getrusage, int, who, struct compat_rusage __user *, ru)
./kernel/sys.c:SYSCALL_DEFINE1(umask, int, mask)
./kernel/sys.c:SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3,
./kernel/sys.c:SYSCALL_DEFINE3(getcpu, unsigned __user *, cpup, unsigned __user *, nodep,
./kernel/sys.c:SYSCALL_DEFINE1(sysinfo, struct sysinfo __user *, info)
./kernel/sys.c:COMPAT_SYSCALL_DEFINE1(sysinfo, struct compat_sysinfo __user *, info)
./kernel/exec_domain.c:SYSCALL_DEFINE1(personality, unsigned int, personality)
./kernel/auditfilter.c:static __u32 *classes[AUDIT_SYSCALL_CLASSES];
./kernel/auditfilter.c:		if (n >= AUDIT_BITMASK_SIZE * 32 - AUDIT_SYSCALL_CLASSES) {
./kernel/auditfilter.c:	if (class >= AUDIT_SYSCALL_CLASSES || classes[class]) {
./kernel/auditfilter.c:	if (unlikely(class >= AUDIT_SYSCALL_CLASSES || !classes[class]))
./kernel/auditfilter.c:	for (i = 0; i < AUDIT_SYSCALL_CLASSES; i++) {
./kernel/fork.c:SYSCALL_DEFINE1(set_tid_address, int __user *, tidptr)
./kernel/fork.c:	clear_tsk_thread_flag(p, TIF_SYSCALL_TRACE);
./kernel/fork.c:#ifdef TIF_SYSCALL_EMU
./kernel/fork.c:	clear_tsk_thread_flag(p, TIF_SYSCALL_EMU);
./kernel/fork.c:SYSCALL_DEFINE0(fork)
./kernel/fork.c:SYSCALL_DEFINE0(vfork)
./kernel/fork.c:SYSCALL_DEFINE5(clone, unsigned long, clone_flags, unsigned long, newsp,
./kernel/fork.c:SYSCALL_DEFINE5(clone, unsigned long, newsp, unsigned long, clone_flags,
./kernel/fork.c:SYSCALL_DEFINE6(clone, unsigned long, clone_flags, unsigned long, newsp,
./kernel/fork.c:SYSCALL_DEFINE5(clone, unsigned long, clone_flags, unsigned long, newsp,
./kernel/fork.c:SYSCALL_DEFINE1(unshare, unsigned long, unshare_flags)
./kernel/nsproxy.c:SYSCALL_DEFINE2(setns, int, fd, int, nstype)
./kernel/seccomp.c:SYSCALL_DEFINE3(seccomp, unsigned int, op, unsigned int, flags,
./kernel/ptrace.c:	clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./kernel/ptrace.c:		set_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./kernel/ptrace.c:		clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./kernel/ptrace.c:#ifdef TIF_SYSCALL_EMU
./kernel/ptrace.c:		set_tsk_thread_flag(child, TIF_SYSCALL_EMU);
./kernel/ptrace.c:		clear_tsk_thread_flag(child, TIF_SYSCALL_EMU);
./kernel/ptrace.c:SYSCALL_DEFINE4(ptrace, long, request, long, pid, unsigned long, addr,
./kernel/ptrace.c:COMPAT_SYSCALL_DEFINE4(ptrace, compat_long_t, request, compat_long_t, pid,
./kernel/tracepoint.c:#ifdef CONFIG_HAVE_SYSCALL_TRACEPOINTS
./kernel/tracepoint.c:			set_tsk_thread_flag(t, TIF_SYSCALL_TRACEPOINT);
./kernel/tracepoint.c:			clear_tsk_thread_flag(t, TIF_SYSCALL_TRACEPOINT);
./kernel/kcmp.c:SYSCALL_DEFINE5(kcmp, pid_t, pid1, pid_t, pid2, int, type,
./kernel/reboot.c:SYSCALL_DEFINE4(reboot, int, magic1, int, magic2, unsigned int, cmd,
./kernel/auditsc.c:		clear_tsk_thread_flag(tsk, TIF_SYSCALL_AUDIT);
./kernel/auditsc.c:	set_tsk_thread_flag(tsk, TIF_SYSCALL_AUDIT);
./kernel/sysctl_binary.c:SYSCALL_DEFINE1(sysctl, struct __sysctl_args __user *, args)
./kernel/sysctl_binary.c:COMPAT_SYSCALL_DEFINE1(sysctl, struct compat_sysctl_args __user *, args)
./kernel/capability.c:SYSCALL_DEFINE2(capget, cap_user_header_t, header, cap_user_data_t, dataptr)
./kernel/capability.c:SYSCALL_DEFINE2(capset, cap_user_header_t, header, const cap_user_data_t, data)
./kernel/acct.c:SYSCALL_DEFINE1(acct, const char __user *, name)
./kernel/futex.c:SYSCALL_DEFINE2(set_robust_list, struct robust_list_head __user *, head,
./kernel/futex.c:SYSCALL_DEFINE3(get_robust_list, int, pid,
./kernel/futex.c:SYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val,
./kernel/sched/core.c:SYSCALL_DEFINE1(nice, int, increment)
./kernel/sched/core.c:SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
./kernel/sched/core.c:SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
./kernel/sched/core.c:SYSCALL_DEFINE3(sched_setattr, pid_t, pid, struct sched_attr __user *, uattr,
./kernel/sched/core.c:SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
./kernel/sched/core.c:SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
./kernel/sched/core.c:SYSCALL_DEFINE4(sched_getattr, pid_t, pid, struct sched_attr __user *, uattr,
./kernel/sched/core.c:SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
./kernel/sched/core.c:SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
./kernel/sched/core.c:SYSCALL_DEFINE0(sched_yield)
./kernel/sched/core.c:SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
./kernel/sched/core.c:SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
./kernel/sched/core.c:SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
./kernel/groups.c:SYSCALL_DEFINE2(getgroups, int, gidsetsize, gid_t __user *, grouplist)
./kernel/groups.c:SYSCALL_DEFINE2(setgroups, int, gidsetsize, gid_t __user *, grouplist)
./kernel/kexec.c:SYSCALL_DEFINE4(kexec_load, unsigned long, entry, unsigned long, nr_segments,
./kernel/kexec.c:COMPAT_SYSCALL_DEFINE4(kexec_load, compat_ulong_t, entry,
./kernel/kexec.c:SYSCALL_DEFINE5(kexec_file_load, int, kernel_fd, int, initrd_fd,
./kernel/trace/Kconfig:config HAVE_SYSCALL_TRACEPOINTS
./kernel/trace/Kconfig:	depends on HAVE_SYSCALL_TRACEPOINTS
./kernel/trace/trace_events.c: * to set the TIF_SYSCALL_TRACEPOINT flag of pid 1. But event_trace_enable()
./kernel/trace/trace_syscalls.c:#ifndef ARCH_HAS_SYSCALL_MATCH_SYM_NAME
./kernel/trace/trace_syscalls.c:#define SYSCALL_FIELD(type, name)					\
./kernel/trace/trace_syscalls.c:	ret = trace_define_field(call, SYSCALL_FIELD(int, nr), FILTER_OTHER);
./kernel/trace/trace_syscalls.c:	ret = trace_define_field(call, SYSCALL_FIELD(int, nr), FILTER_OTHER);
./kernel/trace/trace_syscalls.c:	ret = trace_define_field(call, SYSCALL_FIELD(long, ret),
./kernel/bpf/syscall.c:SYSCALL_DEFINE3(bpf, int, cmd, union bpf_attr __user *, uattr, unsigned int, size)
./kernel/futex_compat.c:COMPAT_SYSCALL_DEFINE2(set_robust_list,
./kernel/futex_compat.c:COMPAT_SYSCALL_DEFINE3(get_robust_list, int, pid,
./kernel/futex_compat.c:COMPAT_SYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val,
./scripts/tags.sh:	--regex-c='/^SYSCALL_DEFINE[[:digit:]]?\(([^,)]*).*/sys_\1/' \
./scripts/tags.sh:	--regex-c='/^COMPAT_SYSCALL_DEFINE[[:digit:]]?\(([^,)]*).*/compat_sys_\1/' \
./scripts/tags.sh:	--regex='/^SYSCALL_DEFINE[0-9]?(\([^,)]*\).*/sys_\1/'   \
./scripts/tags.sh:	--regex='/^COMPAT_SYSCALL_DEFINE[0-9]?(\([^,)]*\).*/compat_sys_\1/' \
./scripts/kernel-doc:##	if ($prototype =~ m/SYSCALL_DEFINE0\s*\(\s*(a-zA-Z0-9_)*\s*\)/) {
./scripts/kernel-doc:	if ($prototype =~ m/SYSCALL_DEFINE0/) {
./scripts/kernel-doc:	$prototype =~ s/SYSCALL_DEFINE.*\(/long sys_/; # fix return type & func name
./scripts/kernel-doc:	if ($prototype =~ /SYSCALL_DEFINE/) {
./mm/readahead.c:SYSCALL_DEFINE3(readahead, int, fd, loff_t, offset, size_t, count)
./mm/swapfile.c:SYSCALL_DEFINE1(swapoff, const char __user *, specialfile)
./mm/swapfile.c:SYSCALL_DEFINE2(swapon, const char __user *, specialfile, int, swap_flags)
./mm/fadvise.c:SYSCALL_DEFINE4(fadvise64_64, int, fd, loff_t, offset, loff_t, len, int, advice)
./mm/fadvise.c:SYSCALL_DEFINE4(fadvise64, int, fd, loff_t, offset, size_t, len, int, advice)
./mm/mmap.c:SYSCALL_DEFINE1(brk, unsigned long, brk)
./mm/mmap.c:SYSCALL_DEFINE6(mmap_pgoff, unsigned long, addr, unsigned long, len,
./mm/mmap.c:SYSCALL_DEFINE1(old_mmap, struct mmap_arg_struct __user *, arg)
./mm/mmap.c:SYSCALL_DEFINE2(munmap, unsigned long, addr, size_t, len)
./mm/process_vm_access.c:SYSCALL_DEFINE6(process_vm_readv, pid_t, pid, const struct iovec __user *, lvec,
./mm/process_vm_access.c:SYSCALL_DEFINE6(process_vm_writev, pid_t, pid,
./mm/process_vm_access.c:COMPAT_SYSCALL_DEFINE6(process_vm_readv, compat_pid_t, pid,
./mm/process_vm_access.c:COMPAT_SYSCALL_DEFINE6(process_vm_writev, compat_pid_t, pid,
./mm/shmem.c:SYSCALL_DEFINE2(memfd_create,
./mm/migrate.c:SYSCALL_DEFINE6(move_pages, pid_t, pid, unsigned long, nr_pages,
./mm/madvise.c:SYSCALL_DEFINE3(madvise, unsigned long, start, size_t, len_in, int, behavior)
./mm/mlock.c:SYSCALL_DEFINE2(mlock, unsigned long, start, size_t, len)
./mm/mlock.c:SYSCALL_DEFINE2(munlock, unsigned long, start, size_t, len)
./mm/mlock.c:SYSCALL_DEFINE1(mlockall, int, flags)
./mm/mlock.c:SYSCALL_DEFINE0(munlockall)
./mm/mincore.c:SYSCALL_DEFINE3(mincore, unsigned long, start, size_t, len,
./mm/fremap.c:SYSCALL_DEFINE5(remap_file_pages, unsigned long, start, unsigned long, size,
./mm/mempolicy.c:SYSCALL_DEFINE6(mbind, unsigned long, start, unsigned long, len,
./mm/mempolicy.c:SYSCALL_DEFINE3(set_mempolicy, int, mode, const unsigned long __user *, nmask,
./mm/mempolicy.c:SYSCALL_DEFINE4(migrate_pages, pid_t, pid, unsigned long, maxnode,
./mm/mempolicy.c:SYSCALL_DEFINE5(get_mempolicy, int __user *, policy,
./mm/mempolicy.c:COMPAT_SYSCALL_DEFINE5(get_mempolicy, int __user *, policy,
./mm/mempolicy.c:COMPAT_SYSCALL_DEFINE3(set_mempolicy, int, mode, compat_ulong_t __user *, nmask,
./mm/mempolicy.c:COMPAT_SYSCALL_DEFINE6(mbind, compat_ulong_t, start, compat_ulong_t, len,
./mm/msync.c:SYSCALL_DEFINE3(msync, unsigned long, start, size_t, len, int, flags)
./mm/nommu.c:SYSCALL_DEFINE1(brk, unsigned long, brk)
./mm/nommu.c:SYSCALL_DEFINE6(mmap_pgoff, unsigned long, addr, unsigned long, len,
./mm/nommu.c:SYSCALL_DEFINE1(old_mmap, struct mmap_arg_struct __user *, arg)
./mm/nommu.c:SYSCALL_DEFINE2(munmap, unsigned long, addr, size_t, len)
./mm/nommu.c:SYSCALL_DEFINE5(mremap, unsigned long, addr, unsigned long, old_len,
./mm/mprotect.c:SYSCALL_DEFINE3(mprotect, unsigned long, start, size_t, len,
./mm/mremap.c:SYSCALL_DEFINE5(mremap, unsigned long, addr, unsigned long, old_len,
./drivers/lguest/interrupts_and_traps.c:static unsigned int syscall_vector = SYSCALL_VECTOR;
./drivers/lguest/interrupts_and_traps.c:	/* Normal Linux SYSCALL_VECTOR or reserved vector? */
./drivers/lguest/interrupts_and_traps.c:	return num == SYSCALL_VECTOR || num == syscall_vector;
./drivers/lguest/interrupts_and_traps.c:	if (syscall_vector != SYSCALL_VECTOR) {
./drivers/lguest/interrupts_and_traps.c:	if (syscall_vector != SYSCALL_VECTOR)
./drivers/pci/syscall.c:SYSCALL_DEFINE5(pciconfig_read, unsigned long, bus, unsigned long, dfn,
./drivers/pci/syscall.c:SYSCALL_DEFINE5(pciconfig_write, unsigned long, bus, unsigned long, dfn,
./drivers/char/random.c:SYSCALL_DEFINE3(getrandom, char __user *, buf, size_t, count,
./net/compat.c:COMPAT_SYSCALL_DEFINE5(setsockopt, int, fd, int, level, int, optname,
./net/compat.c:COMPAT_SYSCALL_DEFINE5(getsockopt, int, fd, int, level, int, optname,
./net/compat.c:COMPAT_SYSCALL_DEFINE3(sendmsg, int, fd, struct compat_msghdr __user *, msg, unsigned int, flags)
./net/compat.c:COMPAT_SYSCALL_DEFINE4(sendmmsg, int, fd, struct compat_mmsghdr __user *, mmsg,
./net/compat.c:COMPAT_SYSCALL_DEFINE3(recvmsg, int, fd, struct compat_msghdr __user *, msg, unsigned int, flags)
./net/compat.c:COMPAT_SYSCALL_DEFINE4(recv, int, fd, void __user *, buf, compat_size_t, len, unsigned int, flags)
./net/compat.c:COMPAT_SYSCALL_DEFINE6(recvfrom, int, fd, void __user *, buf, compat_size_t, len,
./net/compat.c:COMPAT_SYSCALL_DEFINE5(recvmmsg, int, fd, struct compat_mmsghdr __user *, mmsg,
./net/compat.c:COMPAT_SYSCALL_DEFINE2(socketcall, int, call, u32 __user *, args)
./net/socket.c:SYSCALL_DEFINE3(socket, int, family, int, type, int, protocol)
./net/socket.c:SYSCALL_DEFINE4(socketpair, int, family, int, type, int, protocol,
./net/socket.c:SYSCALL_DEFINE3(bind, int, fd, struct sockaddr __user *, umyaddr, int, addrlen)
./net/socket.c:SYSCALL_DEFINE2(listen, int, fd, int, backlog)
./net/socket.c:SYSCALL_DEFINE4(accept4, int, fd, struct sockaddr __user *, upeer_sockaddr,
./net/socket.c:SYSCALL_DEFINE3(accept, int, fd, struct sockaddr __user *, upeer_sockaddr,
./net/socket.c:SYSCALL_DEFINE3(connect, int, fd, struct sockaddr __user *, uservaddr,
./net/socket.c:SYSCALL_DEFINE3(getsockname, int, fd, struct sockaddr __user *, usockaddr,
./net/socket.c:SYSCALL_DEFINE3(getpeername, int, fd, struct sockaddr __user *, usockaddr,
./net/socket.c:SYSCALL_DEFINE6(sendto, int, fd, void __user *, buff, size_t, len,
./net/socket.c:SYSCALL_DEFINE4(send, int, fd, void __user *, buff, size_t, len,
./net/socket.c:SYSCALL_DEFINE6(recvfrom, int, fd, void __user *, ubuf, size_t, size,
./net/socket.c:SYSCALL_DEFINE4(recv, int, fd, void __user *, ubuf, size_t, size,
./net/socket.c:SYSCALL_DEFINE5(setsockopt, int, fd, int, level, int, optname,
./net/socket.c:SYSCALL_DEFINE5(getsockopt, int, fd, int, level, int, optname,
./net/socket.c:SYSCALL_DEFINE2(shutdown, int, fd, int, how)
./net/socket.c:SYSCALL_DEFINE3(sendmsg, int, fd, struct user_msghdr __user *, msg, unsigned int, flags)
./net/socket.c:SYSCALL_DEFINE4(sendmmsg, int, fd, struct mmsghdr __user *, mmsg,
./net/socket.c:SYSCALL_DEFINE3(recvmsg, int, fd, struct user_msghdr __user *, msg,
./net/socket.c:SYSCALL_DEFINE5(recvmmsg, int, fd, struct mmsghdr __user *, mmsg,
./net/socket.c:SYSCALL_DEFINE2(socketcall, int, call, unsigned long __user *, args)
./arch/arm/kernel/entry-armv.S:    !defined(CONFIG_NEEDS_SYSCALL_FOR_CMPXCHG)
./arch/arm/kernel/entry-armv.S:#if defined(CONFIG_NEEDS_SYSCALL_FOR_CMPXCHG)
./arch/arm/kernel/entry-armv.S:#if defined(CONFIG_NEEDS_SYSCALL_FOR_CMPXCHG)
./arch/arm/kernel/traps.c:#ifdef CONFIG_NEEDS_SYSCALL_FOR_CMPXCHG
./arch/arm/kernel/entry-common.S:	movlt	scno, #(__NR_restart_syscall - __NR_SYSCALL_BASE)
./arch/arm/kernel/entry-common.S:	addne	scno, r7, #__NR_SYSCALL_BASE	@ put OS number in
./arch/arm/kernel/entry-common.S:	eorne	scno, r10, #__NR_OABI_SYSCALL_BASE
./arch/arm/kernel/entry-common.S:	eor	scno, scno, #__NR_SYSCALL_BASE	@ check OS number
./arch/arm/kernel/entry-common.S:	tst	r10, #_TIF_SYSCALL_WORK		@ are we tracing syscalls?
./arch/arm/kernel/entry-common.S:2:	cmp	scno, #(__ARM_NR_BASE - __NR_SYSCALL_BASE)
./arch/arm/kernel/entry-common.S:	eor	r0, scno, #__NR_SYSCALL_BASE	@ put OS number back
./arch/arm/kernel/entry-common.S:		bic	scno, r0, #__NR_OABI_SYSCALL_BASE
./arch/arm/kernel/entry-common.S:		cmp	scno, #__NR_syscall - __NR_SYSCALL_BASE
./arch/arm/kernel/ptrace.c:	PTRACE_SYSCALL_ENTER = 0,
./arch/arm/kernel/ptrace.c:	PTRACE_SYSCALL_EXIT,
./arch/arm/kernel/ptrace.c:	if (dir == PTRACE_SYSCALL_EXIT)
./arch/arm/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/arm/kernel/ptrace.c:		tracehook_report_syscall(regs, PTRACE_SYSCALL_ENTER);
./arch/arm/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/arm/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/arm/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/arm/kernel/ptrace.c:		tracehook_report_syscall(regs, PTRACE_SYSCALL_EXIT);
./arch/arm/kernel/sigreturn_codes.S:ARM_OK(	mov	r7, #(__NR_sigreturn - __NR_SYSCALL_BASE)	)
./arch/arm/kernel/sigreturn_codes.S:ARM_OK(	swi	#(__NR_sigreturn)|(__NR_OABI_SYSCALL_BASE)	)
./arch/arm/kernel/sigreturn_codes.S:	movs	r7, #(__NR_sigreturn - __NR_SYSCALL_BASE)
./arch/arm/kernel/sigreturn_codes.S:ARM_OK(	mov	r7, #(__NR_rt_sigreturn - __NR_SYSCALL_BASE)	)
./arch/arm/kernel/sigreturn_codes.S:ARM_OK(	swi	#(__NR_rt_sigreturn)|(__NR_OABI_SYSCALL_BASE)	)
./arch/arm/kernel/sigreturn_codes.S:	movs	r7, #(__NR_rt_sigreturn - __NR_SYSCALL_BASE)
./arch/arm/mm/Kconfig:	select NEEDS_SYSCALL_FOR_CMPXCHG if SMP
./arch/arm/mm/Kconfig:	select NEEDS_SYSCALL_FOR_CMPXCHG if SMP
./arch/arm/mm/Kconfig:	select NEEDS_SYSCALL_FOR_CMPXCHG if SMP
./arch/arm/mm/Kconfig:	select NEEDS_SYSCALL_FOR_CMPXCHG if SMP
./arch/arm/mm/Kconfig:config NEEDS_SYSCALL_FOR_CMPXCHG
./arch/arm/configs/zeus_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/palmz72_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/s3c6400_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/mini2440_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/eseries_pxa_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/em_x270_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/mv78xx0_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/s5pv210_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/cm_x300_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/cm_x2xx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/s3c2410_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/h5000_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/xcep_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/configs/viper_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/arm/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/arm/include/asm/syscall.h:#ifndef _ASM_ARM_SYSCALL_H
./arch/arm/include/asm/syscall.h:#define _ASM_ARM_SYSCALL_H
./arch/arm/include/asm/syscall.h:#define SYSCALL_MAX_ARGS 7
./arch/arm/include/asm/syscall.h:	if (i + n > SYSCALL_MAX_ARGS) {
./arch/arm/include/asm/syscall.h:		unsigned long *args_bad = args + SYSCALL_MAX_ARGS - i;
./arch/arm/include/asm/syscall.h:		unsigned int n_bad = n + i - SYSCALL_MAX_ARGS;
./arch/arm/include/asm/syscall.h:			__func__, i + n, SYSCALL_MAX_ARGS);
./arch/arm/include/asm/syscall.h:		n = SYSCALL_MAX_ARGS - i;
./arch/arm/include/asm/syscall.h:	if (i + n > SYSCALL_MAX_ARGS) {
./arch/arm/include/asm/syscall.h:			__func__, i + n, SYSCALL_MAX_ARGS);
./arch/arm/include/asm/syscall.h:		n = SYSCALL_MAX_ARGS - i;
./arch/arm/include/asm/syscall.h:#endif /* _ASM_ARM_SYSCALL_H */
./arch/arm/include/asm/thread_info.h: *  TIF_SYSCALL_TRACE	- syscall trace active
./arch/arm/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	8
./arch/arm/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	9
./arch/arm/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	10
./arch/arm/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/arm/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/arm/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1 << TIF_SYSCALL_TRACEPOINT)
./arch/arm/include/asm/thread_info.h:#define _TIF_SYSCALL_WORK (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | \
./arch/arm/include/asm/thread_info.h:			   _TIF_SYSCALL_TRACEPOINT | _TIF_SECCOMP)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_OABI_SYSCALL_BASE	0x900000
./arch/arm/include/uapi/asm/unistd.h:#define __NR_SYSCALL_BASE	0
./arch/arm/include/uapi/asm/unistd.h:#define __NR_SYSCALL_BASE	__NR_OABI_SYSCALL_BASE
./arch/arm/include/uapi/asm/unistd.h:#define __NR_restart_syscall		(__NR_SYSCALL_BASE+  0)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_exit			(__NR_SYSCALL_BASE+  1)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fork			(__NR_SYSCALL_BASE+  2)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_read			(__NR_SYSCALL_BASE+  3)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_write			(__NR_SYSCALL_BASE+  4)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_open			(__NR_SYSCALL_BASE+  5)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_close			(__NR_SYSCALL_BASE+  6)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_creat			(__NR_SYSCALL_BASE+  8)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_link			(__NR_SYSCALL_BASE+  9)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_unlink			(__NR_SYSCALL_BASE+ 10)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_execve			(__NR_SYSCALL_BASE+ 11)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_chdir			(__NR_SYSCALL_BASE+ 12)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_time			(__NR_SYSCALL_BASE+ 13)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mknod			(__NR_SYSCALL_BASE+ 14)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_chmod			(__NR_SYSCALL_BASE+ 15)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lchown			(__NR_SYSCALL_BASE+ 16)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lseek			(__NR_SYSCALL_BASE+ 19)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getpid			(__NR_SYSCALL_BASE+ 20)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mount			(__NR_SYSCALL_BASE+ 21)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_umount			(__NR_SYSCALL_BASE+ 22)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setuid			(__NR_SYSCALL_BASE+ 23)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getuid			(__NR_SYSCALL_BASE+ 24)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_stime			(__NR_SYSCALL_BASE+ 25)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ptrace			(__NR_SYSCALL_BASE+ 26)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_alarm			(__NR_SYSCALL_BASE+ 27)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pause			(__NR_SYSCALL_BASE+ 29)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_utime			(__NR_SYSCALL_BASE+ 30)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_access			(__NR_SYSCALL_BASE+ 33)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_nice			(__NR_SYSCALL_BASE+ 34)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sync			(__NR_SYSCALL_BASE+ 36)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_kill			(__NR_SYSCALL_BASE+ 37)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rename			(__NR_SYSCALL_BASE+ 38)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mkdir			(__NR_SYSCALL_BASE+ 39)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rmdir			(__NR_SYSCALL_BASE+ 40)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_dup			(__NR_SYSCALL_BASE+ 41)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pipe			(__NR_SYSCALL_BASE+ 42)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_times			(__NR_SYSCALL_BASE+ 43)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_brk			(__NR_SYSCALL_BASE+ 45)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setgid			(__NR_SYSCALL_BASE+ 46)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getgid			(__NR_SYSCALL_BASE+ 47)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_geteuid			(__NR_SYSCALL_BASE+ 49)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getegid			(__NR_SYSCALL_BASE+ 50)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_acct			(__NR_SYSCALL_BASE+ 51)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_umount2			(__NR_SYSCALL_BASE+ 52)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ioctl			(__NR_SYSCALL_BASE+ 54)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fcntl			(__NR_SYSCALL_BASE+ 55)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setpgid			(__NR_SYSCALL_BASE+ 57)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_umask			(__NR_SYSCALL_BASE+ 60)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_chroot			(__NR_SYSCALL_BASE+ 61)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ustat			(__NR_SYSCALL_BASE+ 62)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_dup2			(__NR_SYSCALL_BASE+ 63)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getppid			(__NR_SYSCALL_BASE+ 64)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getpgrp			(__NR_SYSCALL_BASE+ 65)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setsid			(__NR_SYSCALL_BASE+ 66)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigaction			(__NR_SYSCALL_BASE+ 67)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setreuid			(__NR_SYSCALL_BASE+ 70)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setregid			(__NR_SYSCALL_BASE+ 71)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigsuspend			(__NR_SYSCALL_BASE+ 72)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigpending			(__NR_SYSCALL_BASE+ 73)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sethostname		(__NR_SYSCALL_BASE+ 74)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setrlimit			(__NR_SYSCALL_BASE+ 75)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getrlimit			(__NR_SYSCALL_BASE+ 76)	/* Back compat 2GB limited rlimit */
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getrusage			(__NR_SYSCALL_BASE+ 77)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_gettimeofday		(__NR_SYSCALL_BASE+ 78)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_settimeofday		(__NR_SYSCALL_BASE+ 79)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getgroups			(__NR_SYSCALL_BASE+ 80)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setgroups			(__NR_SYSCALL_BASE+ 81)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_select			(__NR_SYSCALL_BASE+ 82)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_symlink			(__NR_SYSCALL_BASE+ 83)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_readlink			(__NR_SYSCALL_BASE+ 85)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_uselib			(__NR_SYSCALL_BASE+ 86)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_swapon			(__NR_SYSCALL_BASE+ 87)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_reboot			(__NR_SYSCALL_BASE+ 88)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_readdir			(__NR_SYSCALL_BASE+ 89)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mmap			(__NR_SYSCALL_BASE+ 90)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_munmap			(__NR_SYSCALL_BASE+ 91)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_truncate			(__NR_SYSCALL_BASE+ 92)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ftruncate			(__NR_SYSCALL_BASE+ 93)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchmod			(__NR_SYSCALL_BASE+ 94)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchown			(__NR_SYSCALL_BASE+ 95)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getpriority		(__NR_SYSCALL_BASE+ 96)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setpriority		(__NR_SYSCALL_BASE+ 97)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_statfs			(__NR_SYSCALL_BASE+ 99)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fstatfs			(__NR_SYSCALL_BASE+100)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_socketcall			(__NR_SYSCALL_BASE+102)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_syslog			(__NR_SYSCALL_BASE+103)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setitimer			(__NR_SYSCALL_BASE+104)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getitimer			(__NR_SYSCALL_BASE+105)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_stat			(__NR_SYSCALL_BASE+106)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lstat			(__NR_SYSCALL_BASE+107)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fstat			(__NR_SYSCALL_BASE+108)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_vhangup			(__NR_SYSCALL_BASE+111)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_syscall			(__NR_SYSCALL_BASE+113) /* syscall to call a syscall! */
./arch/arm/include/uapi/asm/unistd.h:#define __NR_wait4			(__NR_SYSCALL_BASE+114)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_swapoff			(__NR_SYSCALL_BASE+115)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sysinfo			(__NR_SYSCALL_BASE+116)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ipc			(__NR_SYSCALL_BASE+117)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fsync			(__NR_SYSCALL_BASE+118)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigreturn			(__NR_SYSCALL_BASE+119)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clone			(__NR_SYSCALL_BASE+120)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setdomainname		(__NR_SYSCALL_BASE+121)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_uname			(__NR_SYSCALL_BASE+122)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_adjtimex			(__NR_SYSCALL_BASE+124)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mprotect			(__NR_SYSCALL_BASE+125)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigprocmask		(__NR_SYSCALL_BASE+126)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_init_module		(__NR_SYSCALL_BASE+128)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_delete_module		(__NR_SYSCALL_BASE+129)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_quotactl			(__NR_SYSCALL_BASE+131)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getpgid			(__NR_SYSCALL_BASE+132)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchdir			(__NR_SYSCALL_BASE+133)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_bdflush			(__NR_SYSCALL_BASE+134)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sysfs			(__NR_SYSCALL_BASE+135)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_personality		(__NR_SYSCALL_BASE+136)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setfsuid			(__NR_SYSCALL_BASE+138)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setfsgid			(__NR_SYSCALL_BASE+139)
./arch/arm/include/uapi/asm/unistd.h:#define __NR__llseek			(__NR_SYSCALL_BASE+140)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getdents			(__NR_SYSCALL_BASE+141)
./arch/arm/include/uapi/asm/unistd.h:#define __NR__newselect			(__NR_SYSCALL_BASE+142)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_flock			(__NR_SYSCALL_BASE+143)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_msync			(__NR_SYSCALL_BASE+144)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_readv			(__NR_SYSCALL_BASE+145)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_writev			(__NR_SYSCALL_BASE+146)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getsid			(__NR_SYSCALL_BASE+147)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fdatasync			(__NR_SYSCALL_BASE+148)
./arch/arm/include/uapi/asm/unistd.h:#define __NR__sysctl			(__NR_SYSCALL_BASE+149)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mlock			(__NR_SYSCALL_BASE+150)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_munlock			(__NR_SYSCALL_BASE+151)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mlockall			(__NR_SYSCALL_BASE+152)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_munlockall			(__NR_SYSCALL_BASE+153)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_setparam		(__NR_SYSCALL_BASE+154)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_getparam		(__NR_SYSCALL_BASE+155)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_setscheduler		(__NR_SYSCALL_BASE+156)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_getscheduler		(__NR_SYSCALL_BASE+157)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_yield		(__NR_SYSCALL_BASE+158)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_get_priority_max	(__NR_SYSCALL_BASE+159)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_get_priority_min	(__NR_SYSCALL_BASE+160)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_rr_get_interval	(__NR_SYSCALL_BASE+161)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_nanosleep			(__NR_SYSCALL_BASE+162)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mremap			(__NR_SYSCALL_BASE+163)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setresuid			(__NR_SYSCALL_BASE+164)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getresuid			(__NR_SYSCALL_BASE+165)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_poll			(__NR_SYSCALL_BASE+168)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_nfsservctl			(__NR_SYSCALL_BASE+169)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setresgid			(__NR_SYSCALL_BASE+170)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getresgid			(__NR_SYSCALL_BASE+171)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_prctl			(__NR_SYSCALL_BASE+172)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigreturn		(__NR_SYSCALL_BASE+173)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigaction		(__NR_SYSCALL_BASE+174)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigprocmask		(__NR_SYSCALL_BASE+175)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigpending		(__NR_SYSCALL_BASE+176)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigtimedwait		(__NR_SYSCALL_BASE+177)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigqueueinfo		(__NR_SYSCALL_BASE+178)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_sigsuspend		(__NR_SYSCALL_BASE+179)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pread64			(__NR_SYSCALL_BASE+180)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pwrite64			(__NR_SYSCALL_BASE+181)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_chown			(__NR_SYSCALL_BASE+182)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getcwd			(__NR_SYSCALL_BASE+183)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_capget			(__NR_SYSCALL_BASE+184)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_capset			(__NR_SYSCALL_BASE+185)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sigaltstack		(__NR_SYSCALL_BASE+186)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sendfile			(__NR_SYSCALL_BASE+187)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_vfork			(__NR_SYSCALL_BASE+190)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ugetrlimit			(__NR_SYSCALL_BASE+191)	/* SuS compliant getrlimit */
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mmap2			(__NR_SYSCALL_BASE+192)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_truncate64			(__NR_SYSCALL_BASE+193)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ftruncate64		(__NR_SYSCALL_BASE+194)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_stat64			(__NR_SYSCALL_BASE+195)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lstat64			(__NR_SYSCALL_BASE+196)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fstat64			(__NR_SYSCALL_BASE+197)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lchown32			(__NR_SYSCALL_BASE+198)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getuid32			(__NR_SYSCALL_BASE+199)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getgid32			(__NR_SYSCALL_BASE+200)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_geteuid32			(__NR_SYSCALL_BASE+201)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getegid32			(__NR_SYSCALL_BASE+202)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setreuid32			(__NR_SYSCALL_BASE+203)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setregid32			(__NR_SYSCALL_BASE+204)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getgroups32		(__NR_SYSCALL_BASE+205)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setgroups32		(__NR_SYSCALL_BASE+206)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchown32			(__NR_SYSCALL_BASE+207)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setresuid32		(__NR_SYSCALL_BASE+208)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getresuid32		(__NR_SYSCALL_BASE+209)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setresgid32		(__NR_SYSCALL_BASE+210)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getresgid32		(__NR_SYSCALL_BASE+211)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_chown32			(__NR_SYSCALL_BASE+212)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setuid32			(__NR_SYSCALL_BASE+213)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setgid32			(__NR_SYSCALL_BASE+214)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setfsuid32			(__NR_SYSCALL_BASE+215)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setfsgid32			(__NR_SYSCALL_BASE+216)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getdents64			(__NR_SYSCALL_BASE+217)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pivot_root			(__NR_SYSCALL_BASE+218)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mincore			(__NR_SYSCALL_BASE+219)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_madvise			(__NR_SYSCALL_BASE+220)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fcntl64			(__NR_SYSCALL_BASE+221)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_gettid			(__NR_SYSCALL_BASE+224)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_readahead			(__NR_SYSCALL_BASE+225)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setxattr			(__NR_SYSCALL_BASE+226)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lsetxattr			(__NR_SYSCALL_BASE+227)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fsetxattr			(__NR_SYSCALL_BASE+228)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getxattr			(__NR_SYSCALL_BASE+229)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lgetxattr			(__NR_SYSCALL_BASE+230)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fgetxattr			(__NR_SYSCALL_BASE+231)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_listxattr			(__NR_SYSCALL_BASE+232)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_llistxattr			(__NR_SYSCALL_BASE+233)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_flistxattr			(__NR_SYSCALL_BASE+234)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_removexattr		(__NR_SYSCALL_BASE+235)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lremovexattr		(__NR_SYSCALL_BASE+236)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fremovexattr		(__NR_SYSCALL_BASE+237)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_tkill			(__NR_SYSCALL_BASE+238)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sendfile64			(__NR_SYSCALL_BASE+239)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_futex			(__NR_SYSCALL_BASE+240)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_setaffinity		(__NR_SYSCALL_BASE+241)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_getaffinity		(__NR_SYSCALL_BASE+242)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_io_setup			(__NR_SYSCALL_BASE+243)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_io_destroy			(__NR_SYSCALL_BASE+244)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_io_getevents		(__NR_SYSCALL_BASE+245)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_io_submit			(__NR_SYSCALL_BASE+246)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_io_cancel			(__NR_SYSCALL_BASE+247)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_exit_group			(__NR_SYSCALL_BASE+248)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_lookup_dcookie		(__NR_SYSCALL_BASE+249)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_epoll_create		(__NR_SYSCALL_BASE+250)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_epoll_ctl			(__NR_SYSCALL_BASE+251)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_epoll_wait			(__NR_SYSCALL_BASE+252)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_remap_file_pages		(__NR_SYSCALL_BASE+253)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_set_tid_address		(__NR_SYSCALL_BASE+256)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timer_create		(__NR_SYSCALL_BASE+257)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timer_settime		(__NR_SYSCALL_BASE+258)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timer_gettime		(__NR_SYSCALL_BASE+259)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timer_getoverrun		(__NR_SYSCALL_BASE+260)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timer_delete		(__NR_SYSCALL_BASE+261)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clock_settime		(__NR_SYSCALL_BASE+262)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clock_gettime		(__NR_SYSCALL_BASE+263)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clock_getres		(__NR_SYSCALL_BASE+264)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clock_nanosleep		(__NR_SYSCALL_BASE+265)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_statfs64			(__NR_SYSCALL_BASE+266)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fstatfs64			(__NR_SYSCALL_BASE+267)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_tgkill			(__NR_SYSCALL_BASE+268)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_utimes			(__NR_SYSCALL_BASE+269)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_arm_fadvise64_64		(__NR_SYSCALL_BASE+270)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pciconfig_iobase		(__NR_SYSCALL_BASE+271)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pciconfig_read		(__NR_SYSCALL_BASE+272)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pciconfig_write		(__NR_SYSCALL_BASE+273)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_open			(__NR_SYSCALL_BASE+274)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_unlink			(__NR_SYSCALL_BASE+275)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_timedsend		(__NR_SYSCALL_BASE+276)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_timedreceive		(__NR_SYSCALL_BASE+277)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_notify			(__NR_SYSCALL_BASE+278)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mq_getsetattr		(__NR_SYSCALL_BASE+279)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_waitid			(__NR_SYSCALL_BASE+280)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_socket			(__NR_SYSCALL_BASE+281)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_bind			(__NR_SYSCALL_BASE+282)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_connect			(__NR_SYSCALL_BASE+283)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_listen			(__NR_SYSCALL_BASE+284)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_accept			(__NR_SYSCALL_BASE+285)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getsockname		(__NR_SYSCALL_BASE+286)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getpeername		(__NR_SYSCALL_BASE+287)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_socketpair			(__NR_SYSCALL_BASE+288)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_send			(__NR_SYSCALL_BASE+289)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sendto			(__NR_SYSCALL_BASE+290)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_recv			(__NR_SYSCALL_BASE+291)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_recvfrom			(__NR_SYSCALL_BASE+292)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_shutdown			(__NR_SYSCALL_BASE+293)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setsockopt			(__NR_SYSCALL_BASE+294)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getsockopt			(__NR_SYSCALL_BASE+295)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sendmsg			(__NR_SYSCALL_BASE+296)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_recvmsg			(__NR_SYSCALL_BASE+297)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_semop			(__NR_SYSCALL_BASE+298)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_semget			(__NR_SYSCALL_BASE+299)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_semctl			(__NR_SYSCALL_BASE+300)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_msgsnd			(__NR_SYSCALL_BASE+301)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_msgrcv			(__NR_SYSCALL_BASE+302)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_msgget			(__NR_SYSCALL_BASE+303)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_msgctl			(__NR_SYSCALL_BASE+304)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_shmat			(__NR_SYSCALL_BASE+305)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_shmdt			(__NR_SYSCALL_BASE+306)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_shmget			(__NR_SYSCALL_BASE+307)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_shmctl			(__NR_SYSCALL_BASE+308)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_add_key			(__NR_SYSCALL_BASE+309)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_request_key		(__NR_SYSCALL_BASE+310)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_keyctl			(__NR_SYSCALL_BASE+311)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_semtimedop			(__NR_SYSCALL_BASE+312)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_vserver			(__NR_SYSCALL_BASE+313)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ioprio_set			(__NR_SYSCALL_BASE+314)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ioprio_get			(__NR_SYSCALL_BASE+315)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_inotify_init		(__NR_SYSCALL_BASE+316)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_inotify_add_watch		(__NR_SYSCALL_BASE+317)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_inotify_rm_watch		(__NR_SYSCALL_BASE+318)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mbind			(__NR_SYSCALL_BASE+319)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_get_mempolicy		(__NR_SYSCALL_BASE+320)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_set_mempolicy		(__NR_SYSCALL_BASE+321)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_openat			(__NR_SYSCALL_BASE+322)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mkdirat			(__NR_SYSCALL_BASE+323)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_mknodat			(__NR_SYSCALL_BASE+324)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchownat			(__NR_SYSCALL_BASE+325)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_futimesat			(__NR_SYSCALL_BASE+326)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fstatat64			(__NR_SYSCALL_BASE+327)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_unlinkat			(__NR_SYSCALL_BASE+328)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_renameat			(__NR_SYSCALL_BASE+329)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_linkat			(__NR_SYSCALL_BASE+330)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_symlinkat			(__NR_SYSCALL_BASE+331)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_readlinkat			(__NR_SYSCALL_BASE+332)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fchmodat			(__NR_SYSCALL_BASE+333)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_faccessat			(__NR_SYSCALL_BASE+334)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pselect6			(__NR_SYSCALL_BASE+335)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_ppoll			(__NR_SYSCALL_BASE+336)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_unshare			(__NR_SYSCALL_BASE+337)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_set_robust_list		(__NR_SYSCALL_BASE+338)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_get_robust_list		(__NR_SYSCALL_BASE+339)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_splice			(__NR_SYSCALL_BASE+340)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_arm_sync_file_range	(__NR_SYSCALL_BASE+341)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_tee			(__NR_SYSCALL_BASE+342)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_vmsplice			(__NR_SYSCALL_BASE+343)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_move_pages			(__NR_SYSCALL_BASE+344)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getcpu			(__NR_SYSCALL_BASE+345)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_epoll_pwait		(__NR_SYSCALL_BASE+346)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_kexec_load			(__NR_SYSCALL_BASE+347)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_utimensat			(__NR_SYSCALL_BASE+348)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_signalfd			(__NR_SYSCALL_BASE+349)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timerfd_create		(__NR_SYSCALL_BASE+350)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_eventfd			(__NR_SYSCALL_BASE+351)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fallocate			(__NR_SYSCALL_BASE+352)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timerfd_settime		(__NR_SYSCALL_BASE+353)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_timerfd_gettime		(__NR_SYSCALL_BASE+354)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_signalfd4			(__NR_SYSCALL_BASE+355)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_eventfd2			(__NR_SYSCALL_BASE+356)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_epoll_create1		(__NR_SYSCALL_BASE+357)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_dup3			(__NR_SYSCALL_BASE+358)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pipe2			(__NR_SYSCALL_BASE+359)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_inotify_init1		(__NR_SYSCALL_BASE+360)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_preadv			(__NR_SYSCALL_BASE+361)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_pwritev			(__NR_SYSCALL_BASE+362)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_rt_tgsigqueueinfo		(__NR_SYSCALL_BASE+363)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_perf_event_open		(__NR_SYSCALL_BASE+364)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_recvmmsg			(__NR_SYSCALL_BASE+365)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_accept4			(__NR_SYSCALL_BASE+366)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fanotify_init		(__NR_SYSCALL_BASE+367)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_fanotify_mark		(__NR_SYSCALL_BASE+368)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_prlimit64			(__NR_SYSCALL_BASE+369)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_name_to_handle_at		(__NR_SYSCALL_BASE+370)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_open_by_handle_at		(__NR_SYSCALL_BASE+371)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_clock_adjtime		(__NR_SYSCALL_BASE+372)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_syncfs			(__NR_SYSCALL_BASE+373)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sendmmsg			(__NR_SYSCALL_BASE+374)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_setns			(__NR_SYSCALL_BASE+375)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_process_vm_readv		(__NR_SYSCALL_BASE+376)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_process_vm_writev		(__NR_SYSCALL_BASE+377)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_kcmp			(__NR_SYSCALL_BASE+378)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_finit_module		(__NR_SYSCALL_BASE+379)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_setattr		(__NR_SYSCALL_BASE+380)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_sched_getattr		(__NR_SYSCALL_BASE+381)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_renameat2			(__NR_SYSCALL_BASE+382)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_seccomp			(__NR_SYSCALL_BASE+383)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_getrandom			(__NR_SYSCALL_BASE+384)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_memfd_create		(__NR_SYSCALL_BASE+385)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_bpf			(__NR_SYSCALL_BASE+386)
./arch/arm/include/uapi/asm/unistd.h:#define __NR_execveat			(__NR_SYSCALL_BASE+387)
./arch/arm/include/uapi/asm/unistd.h:#define __ARM_NR_BASE			(__NR_SYSCALL_BASE+0x0f0000)
./arch/nios2/kernel/entry.S:	BTBNZ   r11,r11,TIF_SYSCALL_TRACE,traced_system_call
./arch/nios2/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/nios2/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/nios2/include/asm/syscall.h:#ifndef __ASM_NIOS2_SYSCALL_H__
./arch/nios2/include/asm/syscall.h:#define __ASM_NIOS2_SYSCALL_H__
./arch/nios2/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/nios2/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	6	/* syscall auditing active */
./arch/nios2/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/nios2/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/tile/kernel/compat.c:#define __SYSCALL_COMPAT
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE4(truncate64, char __user *, filename, u32, dummy,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE4(ftruncate64, unsigned int, fd, u32, dummy,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE6(pread64, unsigned int, fd, char __user *, ubuf,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE6(pwrite64, unsigned int, fd, char __user *, ubuf,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE6(sync_file_range2, int, fd, unsigned int, flags,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE6(fallocate, int, fd, int, mode,
./arch/tile/kernel/compat.c:COMPAT_SYSCALL_DEFINE5(llseek, unsigned int, fd, unsigned int, offset_high,
./arch/tile/kernel/intvec_64.S:#define PTREGS_OFFSET_SYSCALL PTREGS_OFFSET_REG(TREG_SYSCALL_NR)
./arch/tile/kernel/intvec_64.S:	 *   registers, which we do in PTREGS_SYSCALL_ALL_REGS, below.
./arch/tile/kernel/intvec_64.S:	push_reg TREG_SYSCALL_NR_NAME, r52, \
./arch/tile/kernel/intvec_64.S:	moveli r20, hw2_last(irq_stat + IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET)
./arch/tile/kernel/intvec_64.S:	shl16insli r20, r20, hw1(irq_stat + IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET)
./arch/tile/kernel/intvec_64.S:	shl16insli r20, r20, hw0(irq_stat + IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET)
./arch/tile/kernel/intvec_64.S:	 moveli r32, _TIF_SYSCALL_ENTRY_WORK
./arch/tile/kernel/intvec_64.S:	 ld     TREG_SYSCALL_NR_NAME, r11
./arch/tile/kernel/intvec_64.S:	 cmpltu r21, TREG_SYSCALL_NR_NAME, r21
./arch/tile/kernel/intvec_64.S:	shl3add r20, TREG_SYSCALL_NR_NAME, r20
./arch/tile/kernel/intvec_64.S:	 moveli  r32, _TIF_SYSCALL_EXIT_WORK
./arch/tile/kernel/intvec_64.S:	 cmpltu r21, TREG_SYSCALL_NR_NAME, r21
./arch/tile/kernel/intvec_64.S:#define PTREGS_SYSCALL_SIGRETURN(x, reg)                \
./arch/tile/kernel/intvec_64.S:PTREGS_SYSCALL_SIGRETURN(sys_rt_sigreturn, r0)
./arch/tile/kernel/intvec_64.S:PTREGS_SYSCALL_SIGRETURN(compat_sys_rt_sigreturn, r0)
./arch/tile/kernel/asm-offsets.c:	DEFINE(IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET,
./arch/tile/kernel/signal.c:SYSCALL_DEFINE0(rt_sigreturn)
./arch/tile/kernel/signal.c:			regs->regs[TREG_SYSCALL_NR] = __NR_restart_syscall;
./arch/tile/kernel/vdso/vrt_sigreturn.S:	moveli TREG_SYSCALL_NR_NAME, __NR_rt_sigreturn
./arch/tile/kernel/sys.c:SYSCALL_DEFINE3(cacheflush, unsigned long, addr, unsigned long, len,
./arch/tile/kernel/sys.c:SYSCALL_DEFINE6(mmap2, unsigned long, addr, unsigned long, len,
./arch/tile/kernel/sys.c:SYSCALL_DEFINE6(mmap, unsigned long, addr, unsigned long, len,
./arch/tile/kernel/ptrace.c:	clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./arch/tile/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE)) {
./arch/tile/kernel/ptrace.c:			regs->regs[TREG_SYSCALL_NR] = -1;
./arch/tile/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/tile/kernel/ptrace.c:		trace_sys_enter(regs, regs->regs[TREG_SYSCALL_NR]);
./arch/tile/kernel/ptrace.c:	return regs->regs[TREG_SYSCALL_NR];
./arch/tile/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/tile/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/tile/kernel/intvec_32.S:#define PTREGS_OFFSET_SYSCALL PTREGS_OFFSET_REG(TREG_SYSCALL_NR)
./arch/tile/kernel/intvec_32.S:	blz     TREG_SYSCALL_NR_NAME, sys_cmpxchg
./arch/tile/kernel/intvec_32.S:	 *   registers, which we do in PTREGS_SYSCALL_ALL_REGS, below.
./arch/tile/kernel/intvec_32.S:	push_reg TREG_SYSCALL_NR_NAME, r52, \
./arch/tile/kernel/intvec_32.S:	moveli  r20, lo16(irq_stat + IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET)
./arch/tile/kernel/intvec_32.S:	auli    r20, r20, ha16(irq_stat + IRQ_CPUSTAT_SYSCALL_COUNT_OFFSET)
./arch/tile/kernel/intvec_32.S:	andi    r30, r30, _TIF_SYSCALL_TRACE
./arch/tile/kernel/intvec_32.S:	pop_reg TREG_SYSCALL_NR_NAME, r11
./arch/tile/kernel/intvec_32.S:	 slt_u  r21, TREG_SYSCALL_NR_NAME, r21
./arch/tile/kernel/intvec_32.S:	s2a     r20, TREG_SYSCALL_NR_NAME, r20
./arch/tile/kernel/intvec_32.S:	andi    r30, r30, _TIF_SYSCALL_TRACE
./arch/tile/kernel/intvec_32.S:#define PTREGS_SYSCALL_SIGRETURN(x, reg)                \
./arch/tile/kernel/intvec_32.S:PTREGS_SYSCALL_SIGRETURN(sys_rt_sigreturn, r0)
./arch/tile/kernel/intvec_32.S:	 seqi	r23, TREG_SYSCALL_NR_NAME, __NR_FAST_cmpxchg64
./arch/tile/kernel/intvec_32.S:	 seqi	r23, TREG_SYSCALL_NR_NAME, __NR_FAST_atomic_update
./arch/tile/kernel/intvec_32.S:	 moveli TREG_SYSCALL_NR_NAME, __NR_cmpxchg_badaddr
./arch/tile/mm/fault.c:SYSCALL_DEFINE1(cmpxchg_badaddr, unsigned long, address)
./arch/tile/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/tile/include/asm/syscall.h:#ifndef _ASM_TILE_SYSCALL_H
./arch/tile/include/asm/syscall.h:#define _ASM_TILE_SYSCALL_H
./arch/tile/include/asm/syscall.h:	return regs->regs[TREG_SYSCALL_NR];
./arch/tile/include/asm/syscall.h:#endif	/* _ASM_TILE_SYSCALL_H */
./arch/tile/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	4	/* syscall trace active */
./arch/tile/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	5	/* syscall auditing active */
./arch/tile/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	9	/* syscall tracepoint instrumentation */
./arch/tile/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/tile/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/tile/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/tile/include/asm/thread_info.h:#define _TIF_SYSCALL_ENTRY_WORK (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_TRACEPOINT)
./arch/tile/include/asm/thread_info.h:#define _TIF_SYSCALL_EXIT_WORK (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_TRACEPOINT)
./arch/tile/include/hv/syscall_public.h:#ifndef _SYS_HV_INCLUDE_SYSCALL_PUBLIC_H
./arch/tile/include/hv/syscall_public.h:#define _SYS_HV_INCLUDE_SYSCALL_PUBLIC_H
./arch/tile/include/hv/syscall_public.h:#endif /* !_SYS_HV_INCLUDE_SYSCALL_PUBLIC_H */
./arch/tile/include/uapi/asm/unistd.h:#if !defined(__LP64__) || defined(__SYSCALL_COMPAT)
./arch/tile/include/uapi/arch/sim.h:  return _sim_syscall(SIM_SYSCALL_ADD_WATCHPOINT, 5, process_id,
./arch/tile/include/uapi/arch/sim.h:  return _sim_syscall(SIM_SYSCALL_REMOVE_WATCHPOINT, 5, process_id,
./arch/tile/include/uapi/arch/sim.h:    (SIM_SYSCALL_QUERY_WATCHPOINT << _SIM_CONTROL_OPERATOR_BITS);
./arch/tile/include/uapi/arch/sim.h:  _sim_syscall(SIM_SYSCALL_VALIDATE_LINES_EVICTED, 2, pa, length);
./arch/tile/include/uapi/arch/sim.h:  _sim_syscall(SIM_SYSCALL_VALIDATE_LINES_EVICTED, 4,
./arch/tile/include/uapi/arch/sim.h:  return _sim_syscall(SIM_SYSCALL_QUERY_CPU_SPEED, 0);
./arch/tile/include/uapi/arch/sim_def.h:#define SIM_SYSCALL_ADD_WATCHPOINT 2
./arch/tile/include/uapi/arch/sim_def.h:#define SIM_SYSCALL_REMOVE_WATCHPOINT 3
./arch/tile/include/uapi/arch/sim_def.h:#define SIM_SYSCALL_QUERY_WATCHPOINT 4
./arch/tile/include/uapi/arch/sim_def.h:#define SIM_SYSCALL_VALIDATE_LINES_EVICTED 5
./arch/tile/include/uapi/arch/sim_def.h:#define SIM_SYSCALL_QUERY_CPU_SPEED 6
./arch/tile/include/uapi/arch/abi.h:#define TREG_SYSCALL_NR      10
./arch/tile/include/uapi/arch/abi.h:#define TREG_SYSCALL_NR_NAME r10
./arch/ia64/kernel/entry.S:	and r2=_TIF_SYSCALL_TRACEAUDIT,r2
./arch/ia64/kernel/entry.S:(p6)	and r15=TIF_WORK_MASK,r31		// any work other than TIF_SYSCALL_TRACE?
./arch/ia64/kernel/entry.S:(p6)	and r19=TIF_WORK_MASK,r31		// any work other than TIF_SYSCALL_TRACE?
./arch/ia64/kernel/signal.c:	if (test_thread_flag(TIF_SYSCALL_TRACE)
./arch/ia64/kernel/signal.c:	    || test_thread_flag(TIF_SYSCALL_AUDIT))
./arch/ia64/kernel/ivt.S:	and r9=_TIF_SYSCALL_TRACEAUDIT,r9	// A    mask trace or audit
./arch/ia64/kernel/fsys.S:	and r3=_TIF_SYSCALL_TRACEAUDIT,r3	// A
./arch/ia64/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/ia64/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/ia64/kernel/gate.S:#define LOAD_FSYSCALL_TABLE(reg)			\
./arch/ia64/kernel/gate.S:	LOAD_FSYSCALL_TABLE(r14)		// X
./arch/ia64/Kconfig:	select GENERIC_TIME_VSYSCALL_OLD
./arch/ia64/include/asm/linkage.h:#define SYSCALL_ALIAS(alias, name)					\
./arch/ia64/include/asm/syscall.h:#ifndef _ASM_SYSCALL_H
./arch/ia64/include/asm/syscall.h:#define _ASM_SYSCALL_H	1
./arch/ia64/include/asm/syscall.h:#endif	/* _ASM_SYSCALL_H */
./arch/ia64/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	2	/* syscall trace active */
./arch/ia64/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	3	/* syscall auditing active */
./arch/ia64/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/ia64/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/ia64/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEAUDIT	(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|_TIF_SINGLESTEP)
./arch/ia64/include/asm/thread_info.h:#define TIF_ALLWORK_MASK	(_TIF_SIGPENDING|_TIF_NOTIFY_RESUME|_TIF_SYSCALL_AUDIT|\
./arch/ia64/include/asm/thread_info.h:				 _TIF_NEED_RESCHED|_TIF_SYSCALL_TRACE)
./arch/ia64/include/asm/thread_info.h:/* like TIF_ALLWORK_BITS but sans TIF_SYSCALL_TRACE or TIF_SYSCALL_AUDIT */
./arch/ia64/include/asm/thread_info.h:#define TIF_WORK_MASK		(TIF_ALLWORK_MASK&~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT))
./arch/ia64/include/uapi/asm/sigcontext.h:#define IA64_SC_FLAG_IN_SYSCALL_BIT		1	/* did signal interrupt a syscall? */
./arch/ia64/include/uapi/asm/sigcontext.h:#define IA64_SC_FLAG_IN_SYSCALL		(1 << IA64_SC_FLAG_IN_SYSCALL_BIT)
./arch/xtensa/kernel/entry.S:#ifdef CONFIG_FAST_SYSCALL_XTENSA
./arch/xtensa/kernel/entry.S:#else /* CONFIG_FAST_SYSCALL_XTENSA */
./arch/xtensa/kernel/entry.S:#endif /* CONFIG_FAST_SYSCALL_XTENSA */
./arch/xtensa/kernel/entry.S:#ifdef CONFIG_FAST_SYSCALL_SPILL_REGISTERS
./arch/xtensa/kernel/entry.S:#else /* CONFIG_FAST_SYSCALL_SPILL_REGISTERS */
./arch/xtensa/kernel/entry.S:#endif /* CONFIG_FAST_SYSCALL_SPILL_REGISTERS */
./arch/xtensa/kernel/ptrace.c:		case SYSCALL_NR:
./arch/xtensa/kernel/ptrace.c:		case SYSCALL_NR:
./arch/xtensa/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE)
./arch/xtensa/kernel/ptrace.c:	if ((test_thread_flag(TIF_SYSCALL_TRACE))
./arch/xtensa/configs/iss_defconfig:# CONFIG_SYSCTL_SYSCALL_CHECK is not set
./arch/xtensa/Kconfig:config FAST_SYSCALL_XTENSA
./arch/xtensa/Kconfig:config FAST_SYSCALL_SPILL_REGISTERS
./arch/xtensa/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/xtensa/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/xtensa/include/uapi/asm/ptrace.h:#define EXC_TABLE_SYSCALL_SAVE	0x014	/* For fast syscall handler */
./arch/xtensa/include/uapi/asm/ptrace.h:#define SYSCALL_NR	0x00ff
./arch/microblaze/kernel/entry.S:	andi	r11, r11, _TIF_WORK_SYSCALL_MASK
./arch/microblaze/kernel/entry.S:	andi	r11, r11, _TIF_WORK_SYSCALL_MASK
./arch/microblaze/kernel/entry.S:type_SYSCALL_PREEMPT:
./arch/microblaze/kernel/entry.S:	.word ret_from_trap; .word TRAP_return     ; .word type_SYSCALL_PREEMPT
./arch/microblaze/kernel/sys_microblaze.c:SYSCALL_DEFINE6(mmap, unsigned long, addr, unsigned long, len,
./arch/microblaze/kernel/sys_microblaze.c:SYSCALL_DEFINE6(mmap2, unsigned long, addr, unsigned long, len,
./arch/microblaze/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/microblaze/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/microblaze/kernel/entry-nommu.S:type_SYSCALL_PREEMPT:
./arch/microblaze/kernel/entry-nommu.S:	.word work_pending ; .word no_work_pending; .word type_SYSCALL_PREEMPT
./arch/microblaze/include/asm/syscall.h:#ifndef __ASM_MICROBLAZE_SYSCALL_H
./arch/microblaze/include/asm/syscall.h:#define __ASM_MICROBLAZE_SYSCALL_H
./arch/microblaze/include/asm/syscall.h:#endif /* __ASM_MICROBLAZE_SYSCALL_H */
./arch/microblaze/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0 /* syscall trace active */
./arch/microblaze/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	9       /* syscall auditing active */
./arch/microblaze/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/microblaze/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/microblaze/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_MASK  (_TIF_SYSCALL_TRACE | _TIF_SINGLESTEP | \
./arch/microblaze/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SECCOMP)
./arch/sparc/kernel/entry.S:	andcc	%l5, _TIF_SYSCALL_TRACE, %g0
./arch/sparc/kernel/entry.S:	andcc	%l5, _TIF_SYSCALL_TRACE, %g0
./arch/sparc/kernel/entry.S:	andcc	%l5, _TIF_SYSCALL_TRACE, %g0
./arch/sparc/kernel/entry.S:	 andcc	%l6, _TIF_SYSCALL_TRACE, %g0
./arch/sparc/kernel/sys_sparc_32.c:SYSCALL_DEFINE3(sparc_sigaction, int, sig,
./arch/sparc/kernel/sys_sparc_32.c:SYSCALL_DEFINE5(rt_sigaction, int, sig,
./arch/sparc/kernel/ptrace_64.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/sparc/kernel/ptrace_64.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sparc/kernel/ptrace_64.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sparc/kernel/ptrace_64.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE1(sparc_pipe_real, struct pt_regs *, regs)
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE6(sparc_ipc, unsigned int, call, int, first, unsigned long, second,
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE1(sparc64_personality, unsigned long, personality)
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE6(mmap, unsigned long, addr, unsigned long, len,
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE2(64_munmap, unsigned long, addr, size_t, len)
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE5(64_mremap, unsigned long, addr,	unsigned long, old_len,
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE2(getdomainname, char __user *, name, int, len)
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE5(utrap_install, utrap_entry_t, type,
./arch/sparc/kernel/sys_sparc_64.c:SYSCALL_DEFINE5(rt_sigaction, int, sig, const struct sigaction __user *, act,
./arch/sparc/kernel/sys_sparc32.c:COMPAT_SYSCALL_DEFINE3(sparc_sigaction, int, sig,
./arch/sparc/kernel/sys_sparc32.c:COMPAT_SYSCALL_DEFINE5(rt_sigaction, int, sig,
./arch/sparc/kernel/ttable_64.S:tl0_linux32:	LINUX_32BIT_SYSCALL_TRAP
./arch/sparc/kernel/ttable_64.S:tl0_oldlinux64:	LINUX_64BIT_SYSCALL_TRAP
./arch/sparc/kernel/ttable_64.S:tl0_linux64:	LINUX_64BIT_SYSCALL_TRAP
./arch/sparc/kernel/ttable_32.S:t_linux:LINUX_SYSCALL_TRAP                  /* Linux System Call             */
./arch/sparc/kernel/ttable_32.S:	LINUX_SYSCALL_TRAP BAD_TRAP(0x91)
./arch/sparc/kernel/ttable_32.S:	LINUX_SYSCALL_TRAP BAD_TRAP(0x91)
./arch/sparc/kernel/ttable_32.S:	LINUX_SYSCALL_TRAP
./arch/sparc/kernel/ptrace_32.c:	if (test_thread_flag(TIF_SYSCALL_TRACE)) {
./arch/sparc/kernel/syscalls.S:	andcc	%l5, (_TIF_SYSCALL_TRACE|_TIF_SECCOMP|_TIF_SYSCALL_AUDIT|_TIF_SYSCALL_TRACEPOINT|_TIF_NOHZ), %g0
./arch/sparc/kernel/syscalls.S:	andcc	%l0, (_TIF_SYSCALL_TRACE|_TIF_SECCOMP|_TIF_SYSCALL_AUDIT|_TIF_SYSCALL_TRACEPOINT|_TIF_NOHZ), %g0
./arch/sparc/kernel/syscalls.S:	andcc	%l0, (_TIF_SYSCALL_TRACE|_TIF_SECCOMP|_TIF_SYSCALL_AUDIT|_TIF_SYSCALL_TRACEPOINT|_TIF_NOHZ), %g0
./arch/sparc/kernel/syscalls.S:	 andcc	%l0, (_TIF_SYSCALL_TRACE|_TIF_SECCOMP|_TIF_SYSCALL_AUDIT|_TIF_SYSCALL_TRACEPOINT|_TIF_NOHZ), %g0
./arch/sparc/configs/sparc64_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sparc/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/sparc/include/asm/syscall.h:#ifndef __ASM_SPARC_SYSCALL_H
./arch/sparc/include/asm/syscall.h:#define __ASM_SPARC_SYSCALL_H
./arch/sparc/include/asm/syscall.h:#endif /* __ASM_SPARC_SYSCALL_H */
./arch/sparc/include/asm/ttable.h:#define SYSCALL_TRAP(routine, systbl)			\
./arch/sparc/include/asm/ttable.h:#define	LINUX_32BIT_SYSCALL_TRAP SYSCALL_TRAP(linux_sparc_syscall32, sys_call_table32)
./arch/sparc/include/asm/ttable.h:#define	LINUX_32BIT_SYSCALL_TRAP BTRAP(0x110)
./arch/sparc/include/asm/ttable.h:#define LINUX_64BIT_SYSCALL_TRAP SYSCALL_TRAP(linux_sparc_syscall, sys_call_table64)
./arch/sparc/include/asm/thread_info_32.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/sparc/include/asm/thread_info_32.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/sparc/include/asm/thread_info_64.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/sparc/include/asm/thread_info_64.h:#define TIF_SYSCALL_AUDIT	10	/* syscall auditing active */
./arch/sparc/include/asm/thread_info_64.h:#define TIF_SYSCALL_TRACEPOINT	11	/* syscall tracepoint instrumentation */
./arch/sparc/include/asm/thread_info_64.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/sparc/include/asm/thread_info_64.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/sparc/include/asm/thread_info_64.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/sparc/include/asm/head_32.h:#define LINUX_SYSCALL_TRAP \
./arch/metag/kernel/traps.c:	return current_thread_info()->flags & _TIF_WORK_SYSCALL_MASK;
./arch/metag/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/metag/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/metag/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/metag/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/metag/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/metag/include/asm/syscall.h:#ifndef _ASM_METAG_SYSCALL_H
./arch/metag/include/asm/syscall.h:#define _ASM_METAG_SYSCALL_H
./arch/metag/include/asm/syscall.h:#endif	/* _ASM_METAG_SYSCALL_H */
./arch/metag/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/metag/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	4	/* syscall auditing active */
./arch/metag/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	9	/* syscall tracepoint instrumentation */
./arch/metag/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/metag/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/metag/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/metag/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_MASK	(_TIF_SYSCALL_TRACE | _TIF_SINGLESTEP | \
./arch/metag/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | \
./arch/metag/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT)
./arch/metag/include/asm/thread_info.h:#define _TIF_ALLWORK_MASK	(_TIF_SYSCALL_TRACE | _TIF_SIGPENDING      | \
./arch/metag/include/asm/thread_info.h:				 _TIF_NEED_RESCHED  | _TIF_SYSCALL_AUDIT   | \
./arch/metag/include/asm/thread_info.h:#define _TIF_WORK_MASK		(_TIF_ALLWORK_MASK & ~(_TIF_SYSCALL_TRACE | \
./arch/metag/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP))
./arch/s390/kernel/entry.S:_TIF_TRACE	= (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | \
./arch/s390/kernel/entry.S:		   _TIF_SYSCALL_TRACEPOINT)
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE1(mmap2, struct s390_mmap_arg_struct __user *, arg)
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE5(s390_ipc, uint, call, int, first, unsigned long, second,
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE1(s390_personality, unsigned int, personality)
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE5(s390_fadvise64, int, fd, u32, offset_high, u32, offset_low,
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE1(s390_fadvise64_64, struct fadvise64_64_args __user *, args)
./arch/s390/kernel/sys_s390.c:SYSCALL_DEFINE5(s390_fallocate, int, fd, int, mode, loff_t, offset,
./arch/s390/kernel/signal.c:SYSCALL_DEFINE0(sigreturn)
./arch/s390/kernel/signal.c:SYSCALL_DEFINE0(rt_sigreturn)
./arch/s390/kernel/signal.c:		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn, svc))
./arch/s390/kernel/signal.c:		if (__put_user(S390_SYSCALL_OPCODE | __NR_rt_sigreturn, svc))
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP1(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(1, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP2(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(2, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP3(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(3, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP4(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(4, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP5(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(5, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAP6(name, ...) \
./arch/s390/kernel/compat_wrapper.c:	COMPAT_SYSCALL_WRAPx(6, _##name, __VA_ARGS__)
./arch/s390/kernel/compat_wrapper.c: * The COMPAT_SYSCALL_WRAP macro generates system call wrappers to be used by
./arch/s390/kernel/compat_wrapper.c:#define COMPAT_SYSCALL_WRAPx(x, name, ...)					\
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(exit, int, error_code);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(close, unsigned int, fd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(creat, const char __user *, pathname, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(link, const char __user *, oldname, const char __user *, newname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(unlink, const char __user *, pathname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(chdir, const char __user *, filename);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(mknod, const char __user *, filename, umode_t, mode, unsigned, dev);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(chmod, const char __user *, filename, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(oldumount, char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(alarm, unsigned int, seconds);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(access, const char __user *, filename, int, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(nice, int, increment);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(kill, int, pid, int, sig);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(rename, const char __user *, oldname, const char __user *, newname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(mkdir, const char __user *, pathname, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(rmdir, const char __user *, pathname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(dup, unsigned int, fildes);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(pipe, int __user *, fildes);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(brk, unsigned long, brk);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(signal, int, sig, __sighandler_t, handler);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(acct, const char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(umount, char __user *, name, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setpgid, pid_t, pid, pid_t, pgid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(umask, int, mask);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(chroot, const char __user *, filename);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(dup2, unsigned int, oldfd, unsigned int, newfd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(sigsuspend, int, unused1, int, unused2, old_sigset_t, mask);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(sethostname, char __user *, name, int, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(symlink, const char __user *, old, const char __user *, new);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(readlink, const char __user *, path, char __user *, buf, int, bufsiz);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(uselib, const char __user *, library);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(swapon, const char __user *, specialfile, int, swap_flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(reboot, int, magic1, int, magic2, unsigned int, cmd, void __user *, arg);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(munmap, unsigned long, addr, size_t, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(fchmod, unsigned int, fd, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(getpriority, int, which, int, who);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(setpriority, int, which, int, who, int, niceval);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(syslog, int, type, char __user *, buf, int, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(swapoff, const char __user *, specialfile);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(fsync, unsigned int, fd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setdomainname, char __user *, name, int, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(newuname, struct new_utsname __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(mprotect, unsigned long, start, size_t, len, unsigned long, prot);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(init_module, void __user *, umod, unsigned long, len, const char __user *, uargs);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(delete_module, const char __user *, name_user, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(quotactl, unsigned int, cmd, const char __user *, special, qid_t, id, void __user *, addr);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(getpgid, pid_t, pid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(fchdir, unsigned int, fd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(bdflush, int, func, long, data);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(sysfs, int, option, unsigned long, arg1, unsigned long, arg2);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(s390_personality, unsigned int, personality);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(llseek, unsigned int, fd, unsigned long, high, unsigned long, low, loff_t __user *, result, unsigned int, whence);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(flock, unsigned int, fd, unsigned int, cmd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(msync, unsigned long, start, size_t, len, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(getsid, pid_t, pid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(fdatasync, unsigned int, fd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(mlock, unsigned long, start, size_t, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(munlock, unsigned long, start, size_t, len);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(mlockall, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(sched_setparam, pid_t, pid, struct sched_param __user *, param);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(sched_getparam, pid_t, pid, struct sched_param __user *, param);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(sched_setscheduler, pid_t, pid, int, policy, struct sched_param __user *, param);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(sched_getscheduler, pid_t, pid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(sched_get_priority_max, int, policy);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(sched_get_priority_min, int, policy);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(mremap, unsigned long, addr, unsigned long, old_len, unsigned long, new_len, unsigned long, flags, unsigned long, new_addr);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(poll, struct pollfd __user *, ufds, unsigned int, nfds, int, timeout);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(prctl, int, option, unsigned long, arg2, unsigned long, arg3, unsigned long, arg4, unsigned long, arg5);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(getcwd, char __user *, buf, unsigned long, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(capget, cap_user_header_t, header, cap_user_data_t, dataptr);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(capset, cap_user_header_t, header, const cap_user_data_t, data);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(lchown, const char __user *, filename, uid_t, user, gid_t, group);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setreuid, uid_t, ruid, uid_t, euid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setregid, gid_t, rgid, gid_t, egid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(getgroups, int, gidsetsize, gid_t __user *, grouplist);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setgroups, int, gidsetsize, gid_t __user *, grouplist);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(fchown, unsigned int, fd, uid_t, user, gid_t, group);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(setresuid, uid_t, ruid, uid_t, euid, uid_t, suid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(getresuid, uid_t __user *, ruid, uid_t __user *, euid, uid_t __user *, suid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(setresgid, gid_t, rgid, gid_t, egid, gid_t, sgid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(getresgid, gid_t __user *, rgid, gid_t __user *, egid, gid_t __user *, sgid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(chown, const char __user *, filename, uid_t, user, gid_t, group);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(setuid, uid_t, uid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(setgid, gid_t, gid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(setfsuid, uid_t, uid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(setfsgid, gid_t, gid);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(pivot_root, const char __user *, new_root, const char __user *, put_old);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(mincore, unsigned long, start, size_t, len, unsigned char __user *, vec);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(madvise, unsigned long, start, size_t, len, int, behavior);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(setxattr, const char __user *, path, const char __user *, name, const void __user *, value, size_t, size, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(lsetxattr, const char __user *, path, const char __user *, name, const void __user *, value, size_t, size, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(fsetxattr, int, fd, const char __user *, name, const void __user *, value, size_t, size, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(getdents64, unsigned int, fd, struct linux_dirent64 __user *, dirent, unsigned int, count);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(getxattr, const char __user *, path, const char __user *, name, void __user *, value, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(lgetxattr, const char __user *, path, const char __user *, name, void __user *, value, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(fgetxattr, int, fd, const char __user *, name, void __user *, value, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(listxattr, const char __user *, path, char __user *, list, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(llistxattr, const char __user *, path, char __user *, list, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(flistxattr, int, fd, char __user *, list, size_t, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(removexattr, const char __user *, path, const char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(lremovexattr, const char __user *, path, const char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(fremovexattr, int, fd, const char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(exit_group, int, error_code);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(set_tid_address, int __user *, tidptr);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(epoll_create, int, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(epoll_ctl, int, epfd, int, op, int, fd, struct epoll_event __user *, event);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(epoll_wait, int, epfd, struct epoll_event __user *, events, int, maxevents, int, timeout);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(timer_getoverrun, timer_t, timer_id);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(timer_delete, compat_timer_t, compat_timer_id);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(io_destroy, aio_context_t, ctx);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(io_cancel, aio_context_t, ctx_id, struct iocb __user *, iocb, struct io_event __user *, result);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(mq_unlink, const char __user *, name);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(add_key, const char __user *, tp, const char __user *, dsc, const void __user *, pld, size_t, len, key_serial_t, id);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(request_key, const char __user *, tp, const char __user *, dsc, const char __user *, info, key_serial_t, id);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(remap_file_pages, unsigned long, start, unsigned long, size, unsigned long, prot, unsigned long, pgoff, unsigned long, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(ioprio_set, int, which, int, who, int, ioprio);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(ioprio_get, int, which, int, who);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(inotify_add_watch, int, fd, const char __user *, path, u32, mask);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(inotify_rm_watch, int, fd, __s32, wd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(mkdirat, int, dfd, const char __user *, pathname, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(mknodat, int, dfd, const char __user *, filename, umode_t, mode, unsigned, dev);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(fchownat, int, dfd, const char __user *, filename, uid_t, user, gid_t, group, int, flag);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(unlinkat, int, dfd, const char __user *, pathname, int, flag);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(renameat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(linkat, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(symlinkat, const char __user *, oldname, int, newdfd, const char __user *, newname);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(readlinkat, int, dfd, const char __user *, path, char __user *, buf, int, bufsiz);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(fchmodat, int, dfd, const char __user *, filename, umode_t, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(faccessat, int, dfd, const char __user *, filename, int, mode);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(unshare, unsigned long, unshare_flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP6(splice, int, fd_in, loff_t __user *, off_in, int, fd_out, loff_t __user *, off_out, size_t, len, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(tee, int, fdin, int, fdout, size_t, len, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(getcpu, unsigned __user *, cpu, unsigned __user *, node, struct getcpu_cache __user *, cache);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(eventfd, unsigned int, count);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(timerfd_create, int, clockid, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(eventfd2, unsigned int, count, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(inotify_init1, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(pipe2, int __user *, fildes, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(dup3, unsigned int, oldfd, unsigned int, newfd, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(epoll_create1, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(tkill, int, pid, int, sig);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(tgkill, int, tgid, int, pid, int, sig);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(perf_event_open, struct perf_event_attr __user *, attr_uptr, pid_t, pid, int, cpu, int, group_fd, unsigned long, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(clone, unsigned long, newsp, unsigned long, clone_flags, int __user *, parent_tidptr, int __user *, child_tidptr, int, tls_val);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(fanotify_init, unsigned int, flags, unsigned int, event_f_flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(prlimit64, pid_t, pid, unsigned int, resource, const struct rlimit64 __user *, new_rlim, struct rlimit64 __user *, old_rlim);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(name_to_handle_at, int, dfd, const char __user *, name, struct file_handle __user *, handle, int __user *, mnt_id, int, flag);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP1(syncfs, int, fd);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(setns, int, fd, int, nstype);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(s390_runtime_instr, int, command, int, signum);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(kcmp, pid_t, pid1, pid_t, pid2, int, type, unsigned long, idx1, unsigned long, idx2);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(finit_module, int, fd, const char __user *, uargs, int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(sched_setattr, pid_t, pid, struct sched_attr __user *, attr, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP4(sched_getattr, pid_t, pid, struct sched_attr __user *, attr, unsigned int, size, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP5(renameat2, int, olddfd, const char __user *, oldname, int, newdfd, const char __user *, newname, unsigned int, flags);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(seccomp, unsigned int, op, unsigned int, flags, const char __user *, uargs)
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(getrandom, char __user *, buf, size_t, count, unsigned int, flags)
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP2(memfd_create, const char __user *, uname, unsigned int, flags)
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(bpf, int, cmd, union bpf_attr *, attr, unsigned int, size);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(s390_pci_mmio_write, const unsigned long, mmio_addr, const void __user *, user_buffer, const size_t, length);
./arch/s390/kernel/compat_wrapper.c:COMPAT_SYSCALL_WRAP3(s390_pci_mmio_read, const unsigned long, mmio_addr, void __user *, user_buffer, const size_t, length);
./arch/s390/kernel/runtime_instr.c:SYSCALL_DEFINE2(s390_runtime_instr, int, command, int, signum)
./arch/s390/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/s390/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/s390/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/s390/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/s390/kernel/entry64.S:_TIF_TRACE	= (_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SECCOMP | \
./arch/s390/kernel/entry64.S:		   _TIF_SYSCALL_TRACEPOINT)
./arch/s390/kernel/compat_signal.c:COMPAT_SYSCALL_DEFINE0(sigreturn)
./arch/s390/kernel/compat_signal.c:COMPAT_SYSCALL_DEFINE0(rt_sigreturn)
./arch/s390/kernel/compat_signal.c:		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn, svc))
./arch/s390/kernel/compat_signal.c:		if (__put_user(S390_SYSCALL_OPCODE | __NR_rt_sigreturn, svc))
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_chown16, const char __user *, filename,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_lchown16, const char __user *,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_fchown16, unsigned int, fd, u16, user, u16, group)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_setregid16, u16, rgid, u16, egid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_setgid16, u16, gid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_setreuid16, u16, ruid, u16, euid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_setuid16, u16, uid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_setresuid16, u16, ruid, u16, euid, u16, suid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_getresuid16, u16 __user *, ruidp,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_setresgid16, u16, rgid, u16, egid, u16, sgid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_getresgid16, u16 __user *, rgidp,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_setfsuid16, u16, uid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_setfsgid16, u16, gid)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_getgroups16, int, gidsetsize, u16 __user *, grouplist)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_setgroups16, int, gidsetsize, u16 __user *, grouplist)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE0(s390_getuid16)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE0(s390_geteuid16)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE0(s390_getgid16)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE0(s390_getegid16)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE5(s390_ipc, uint, call, int, first, compat_ulong_t, second,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_truncate64, const char __user *, path, u32, high, u32, low)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_ftruncate64, unsigned int, fd, u32, high, u32, low)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE5(s390_pread64, unsigned int, fd, char __user *, ubuf,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE5(s390_pwrite64, unsigned int, fd, const char __user *, ubuf,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE4(s390_readahead, int, fd, u32, high, u32, low, s32, count)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_stat64, const char __user *, filename, struct stat64_emu31 __user *, statbuf)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_lstat64, const char __user *, filename, struct stat64_emu31 __user *, statbuf)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE2(s390_fstat64, unsigned int, fd, struct stat64_emu31 __user *, statbuf)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE4(s390_fstatat64, unsigned int, dfd, const char __user *, filename,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_old_mmap, struct mmap_arg_struct_emu31 __user *, arg)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_mmap2, struct mmap_arg_struct_emu31 __user *, arg)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_read, unsigned int, fd, char __user *, buf, compat_size_t, count)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE3(s390_write, unsigned int, fd, const char __user *, buf, compat_size_t, count)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE5(s390_fadvise64, int, fd, u32, high, u32, low, compat_size_t, len, int, advise)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE1(s390_fadvise64_64, struct fadvise64_64_args __user *, args)
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE6(s390_sync_file_range, int, fd, u32, offhigh, u32, offlow,
./arch/s390/kernel/compat_linux.c:COMPAT_SYSCALL_DEFINE6(s390_fallocate, int, fd, int, mode, u32, offhigh, u32, offlow,
./arch/s390/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/s390/pci/pci_mmio.c:SYSCALL_DEFINE3(s390_pci_mmio_write, unsigned long, mmio_addr,
./arch/s390/pci/pci_mmio.c:SYSCALL_DEFINE3(s390_pci_mmio_read, unsigned long, mmio_addr,
./arch/s390/include/asm/syscall.h:#ifndef _ASM_SYSCALL_H
./arch/s390/include/asm/syscall.h:#define _ASM_SYSCALL_H	1
./arch/s390/include/asm/syscall.h:#endif	/* _ASM_SYSCALL_H */
./arch/s390/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	3	/* syscall trace active */
./arch/s390/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	4	/* syscall auditing active */
./arch/s390/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	6	/* syscall tracepoint instrumentation */
./arch/s390/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/s390/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/s390/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/s390/include/uapi/asm/ptrace.h:#define S390_SYSCALL_OPCODE ((__u16)0x0a00)
./arch/s390/include/uapi/asm/ptrace.h:#define S390_SYSCALL_SIZE   2
./arch/mips/kernel/entry.S:	li	t0, _TIF_WORK_SYSCALL_EXIT
./arch/mips/kernel/scall64-64.S:	li	t1, _TIF_WORK_SYSCALL_ENTRY
./arch/mips/kernel/scall32-o32.S:#define MAX_SYSCALL_NO	__NR_O32_Linux + __NR_O32_Linux_syscalls
./arch/mips/kernel/scall32-o32.S:	li	t1, _TIF_WORK_SYSCALL_ENTRY
./arch/mips/kernel/signal.c:SYSCALL_DEFINE1(sigsuspend, sigset_t __user *, uset)
./arch/mips/kernel/signal.c:SYSCALL_DEFINE3(sigaction, int, sig, const struct sigaction __user *, act,
./arch/mips/kernel/signal32.c:SYSCALL_DEFINE3(32_sigaction, long, sig, const struct compat_sigaction __user *, act,
./arch/mips/kernel/scall64-o32.S:	li	t1, _TIF_WORK_SYSCALL_ENTRY
./arch/mips/kernel/scall64-n32.S:	li	t1, _TIF_WORK_SYSCALL_ENTRY
./arch/mips/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/mips/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/mips/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/mips/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE6(32_mmap2, unsigned long, addr, unsigned long, len,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE4(32_truncate64, const char __user *, path,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE4(32_ftruncate64, unsigned long, fd, unsigned long, __dummy,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE5(32_llseek, unsigned int, fd, unsigned int, offset_high,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE6(32_pread, unsigned long, fd, char __user *, buf, size_t, count,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE6(32_pwrite, unsigned int, fd, const char __user *, buf,
./arch/mips/kernel/linux32.c:SYSCALL_DEFINE1(32_personality, unsigned long, personality)
./arch/mips/kernel/syscall.c:SYSCALL_DEFINE6(mips_mmap, unsigned long, addr, unsigned long, len,
./arch/mips/kernel/syscall.c:SYSCALL_DEFINE6(mips_mmap2, unsigned long, addr, unsigned long, len,
./arch/mips/kernel/syscall.c:SYSCALL_DEFINE1(set_thread_area, unsigned long, addr)
./arch/mips/kernel/syscall.c:SYSCALL_DEFINE3(sysmips, long, cmd, long, arg1, long, arg2)
./arch/mips/kernel/syscall.c:SYSCALL_DEFINE3(cachectl, char *, addr, int, nbytes, int, op)
./arch/mips/mm/cache.c:SYSCALL_DEFINE3(cacheflush, unsigned long, addr, unsigned long, bytes,
./arch/mips/configs/lemote2f_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/nlm_xlr_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/ar7_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/cobalt_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/bcm63xx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/tb0226_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/tb0219_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/ip32_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/fuloong2e_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/pnx8335_stb225_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/rbtx49xx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/configs/jmr3927_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/mips/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/mips/kvm/mips.c:		trace_kvm_exit(vcpu, SYSCALL_EXITS);
./arch/mips/include/asm/linkage.h:#define SYSCALL_ALIAS(alias, name)					\
./arch/mips/include/asm/syscall.h:#ifndef __ASM_MIPS_SYSCALL_H
./arch/mips/include/asm/syscall.h:#define __ASM_MIPS_SYSCALL_H
./arch/mips/include/asm/syscall.h:#endif	/* __ASM_MIPS_SYSCALL_H */
./arch/mips/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	3	/* syscall auditing active */
./arch/mips/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	26	/* syscall tracepoint instrumentation */
./arch/mips/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	31	/* syscall trace active */
./arch/mips/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/mips/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/mips/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/mips/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_ENTRY	(_TIF_NOHZ | _TIF_SYSCALL_TRACE |	\
./arch/mips/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | \
./arch/mips/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT | _TIF_SECCOMP)
./arch/mips/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_EXIT	(_TIF_NOHZ | _TIF_SYSCALL_TRACE |	\
./arch/mips/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SYSCALL_TRACEPOINT)
./arch/mips/include/asm/thread_info.h:				 _TIF_WORK_SYSCALL_EXIT |		\
./arch/mips/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT)
./arch/mips/include/asm/kvm_host.h:	SYSCALL_EXITS,
./arch/alpha/kernel/entry.S:	lda     $6, _TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT
./arch/alpha/kernel/signal.c:SYSCALL_DEFINE2(osf_sigprocmask, int, how, unsigned long, newmask)
./arch/alpha/kernel/signal.c:SYSCALL_DEFINE3(osf_sigaction, int, sig,
./arch/alpha/kernel/signal.c:SYSCALL_DEFINE5(rt_sigaction, int, sig, const struct sigaction __user *, act,
./arch/alpha/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/alpha/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE1(osf_brk, unsigned long, brk)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE4(osf_set_program_attributes, unsigned long, text_start,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE4(osf_getdirentries, unsigned int, fd,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE6(osf_mmap, unsigned long, addr, unsigned long, len,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_statfs, const char __user *, pathname,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_stat, char __user *, name, struct osf_stat __user *, buf)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_lstat, char __user *, name, struct osf_stat __user *, buf)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_fstat, int, fd, struct osf_stat __user *, buf)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_fstatfs, unsigned long, fd,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_statfs64, char __user *, pathname,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_fstatfs64, unsigned long, fd,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE4(osf_mount, unsigned long, typenr, const char __user *, path,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE1(osf_utsname, char __user *, name)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(getpagesize)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(getdtablesize)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_getdomainname, char __user *, name, int, namelen)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_proplist_syscall, enum pl_code, code,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_sigstack, struct sigstack __user *, uss,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_sysinfo, int, command, char __user *, buf, long, count)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE5(osf_getsysinfo, unsigned long, op, void __user *, buffer,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE5(osf_setsysinfo, unsigned long, op, void __user *, buffer,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_gettimeofday, struct timeval32 __user *, tv,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_settimeofday, struct timeval32 __user *, tv,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_getitimer, int, which, struct itimerval32 __user *, it)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_setitimer, int, which, struct itimerval32 __user *, in,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_utimes, const char __user *, filename,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE5(osf_select, int, n, fd_set __user *, inp, fd_set __user *, outp,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_getrusage, int, who, struct rusage32 __user *, ru)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE4(osf_wait4, pid_t, pid, int __user *, ustatus, int, options,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_usleep_thread, struct timeval32 __user *, sleep,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE1(old_adjtimex, struct timex32 __user *, txc_p)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_readv, unsigned long, fd,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE3(osf_writev, unsigned long, fd,
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE2(osf_getpriority, int, which, int, who)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(getxuid)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(getxgid)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(getxpid)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE0(alpha_pipe)
./arch/alpha/kernel/osf_sys.c:SYSCALL_DEFINE1(sethae, unsigned long, val)
./arch/alpha/include/asm/linkage.h:#define SYSCALL_ALIAS(alias, name)					\
./arch/alpha/include/asm/syscall.h:#ifndef _ASM_ALPHA_SYSCALL_H
./arch/alpha/include/asm/syscall.h:#define _ASM_ALPHA_SYSCALL_H
./arch/alpha/include/asm/syscall.h:#endif	/* _ASM_ALPHA_SYSCALL_H */
./arch/alpha/include/asm/thread_info.h: * TIF_SYSCALL_TRACE is known to be 0 via blbs.
./arch/alpha/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/alpha/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	4	/* syscall audit active */
./arch/alpha/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/alpha/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/alpha/include/asm/thread_info.h:				 | _TIF_SYSCALL_TRACE)
./arch/c6x/kernel/entry.S:	AND	.D1	_TIF_SYSCALL_TRACE,A2,A0
./arch/c6x/kernel/entry.S:	AND	.D1	_TIF_SYSCALL_TRACE,A2,A2
./arch/c6x/kernel/asm-offsets.c:	DEFINE(_TIF_SYSCALL_TRACE, (1<<TIF_SYSCALL_TRACE));
./arch/c6x/include/asm/syscall.h:#ifndef __ASM_C6X_SYSCALL_H
./arch/c6x/include/asm/syscall.h:#define __ASM_C6X_SYSCALL_H
./arch/c6x/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/Kconfig:#	TIF_SYSCALL_TRACE	calls tracehook_report_syscall_{entry,exit}
./arch/x86/kernel/vsyscall_trace.h:#if !defined(__VSYSCALL_TRACE_H) || defined(TRACE_HEADER_MULTI_READ)
./arch/x86/kernel/vsyscall_trace.h:#define __VSYSCALL_TRACE_H
Binary file ./arch/x86/kernel/apic/apic_numachip.o matches
./arch/x86/kernel/entry_64.S:	testl $_TIF_WORK_SYSCALL_ENTRY,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/kernel/entry_64.S:#if __SYSCALL_MASK == ~0
./arch/x86/kernel/entry_64.S:	andl $__SYSCALL_MASK,%eax
./arch/x86/kernel/entry_64.S:	bt $TIF_SYSCALL_AUDIT,%edx
./arch/x86/kernel/entry_64.S:	 * directly and then jump back to the fast path with TIF_SYSCALL_AUDIT
./arch/x86/kernel/entry_64.S:	movl $(_TIF_ALLWORK_MASK & ~_TIF_SYSCALL_AUDIT),%edi
./arch/x86/kernel/entry_64.S:#if __SYSCALL_MASK == ~0
./arch/x86/kernel/entry_64.S:	andl $__SYSCALL_MASK,%eax
./arch/x86/kernel/entry_64.S:	testl $_TIF_WORK_SYSCALL_EXIT,%edx
./arch/x86/kernel/entry_64.S:	andl $~(_TIF_WORK_SYSCALL_EXIT|_TIF_SYSCALL_EMU),%edi
Binary file ./arch/x86/kernel/tboot.o matches
./arch/x86/kernel/entry_32.S:	testl $_TIF_WORK_SYSCALL_ENTRY,TI_flags(%ebp)
./arch/x86/kernel/entry_32.S:	testl $(_TIF_WORK_SYSCALL_ENTRY & ~_TIF_SYSCALL_AUDIT),TI_flags(%ebp)
./arch/x86/kernel/entry_32.S:	testl $(_TIF_ALLWORK_MASK & ~_TIF_SYSCALL_AUDIT), %ecx
./arch/x86/kernel/entry_32.S:	testl $(_TIF_ALLWORK_MASK & ~_TIF_SYSCALL_AUDIT), %ecx
./arch/x86/kernel/entry_32.S:	testl $_TIF_WORK_SYSCALL_ENTRY,TI_flags(%ebp)
./arch/x86/kernel/entry_32.S:	testl $_TIF_WORK_SYSCALL_EXIT, %ecx
./arch/x86/kernel/asm-offsets_32.c:#define __SYSCALL_I386(nr, sym, compat) [nr] = 1,
./arch/x86/kernel/sys_x86_64.c:SYSCALL_DEFINE6(mmap, unsigned long, addr, unsigned long, len,
./arch/x86/kernel/traps.c:	set_system_intr_gate(IA32_SYSCALL_VECTOR, ia32_syscall);
./arch/x86/kernel/traps.c:	set_bit(IA32_SYSCALL_VECTOR, used_vectors);
./arch/x86/kernel/traps.c:	set_system_trap_gate(SYSCALL_VECTOR, &system_call);
./arch/x86/kernel/traps.c:	set_bit(SYSCALL_VECTOR, used_vectors);
./arch/x86/kernel/tls.c:SYSCALL_DEFINE1(set_thread_area, struct user_desc __user *, u_info)
./arch/x86/kernel/tls.c:SYSCALL_DEFINE1(get_thread_area, struct user_desc __user *, u_info)
./arch/x86/kernel/cpu/common.c:	wrmsrl(MSR_SYSCALL_MASK,
./arch/x86/kernel/ioport.c:SYSCALL_DEFINE1(iopl, unsigned int, level)
./arch/x86/kernel/Makefile:obj-$(CONFIG_X86_VSYSCALL_EMULATION)	+= vsyscall_64.o vsyscall_emu_64.o
./arch/x86/kernel/vm86_32.c:SYSCALL_DEFINE1(vm86old, struct vm86_struct __user *, v86)
./arch/x86/kernel/vm86_32.c:SYSCALL_DEFINE2(vm86, unsigned long, cmd, unsigned long, arg)
./arch/x86/kernel/ptrace.c:#ifdef TIF_SYSCALL_EMU
./arch/x86/kernel/ptrace.c:	clear_tsk_thread_flag(child, TIF_SYSCALL_EMU);
./arch/x86/kernel/ptrace.c:		_TIF_WORK_SYSCALL_ENTRY;
./arch/x86/kernel/ptrace.c:	if (work == _TIF_SYSCALL_AUDIT) {
./arch/x86/kernel/ptrace.c:		_TIF_WORK_SYSCALL_ENTRY;
./arch/x86/kernel/ptrace.c:	if (unlikely(work & _TIF_SYSCALL_EMU))
./arch/x86/kernel/ptrace.c:	if ((ret || test_thread_flag(TIF_SYSCALL_TRACE)) &&
./arch/x86/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/x86/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/x86/kernel/ptrace.c:	 * If TIF_SYSCALL_EMU is set, we only get here because of
./arch/x86/kernel/ptrace.c:			!test_thread_flag(TIF_SYSCALL_EMU);
./arch/x86/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/x86/kernel/vsyscall_64.c:	if ((addr & ~0xC00UL) != VSYSCALL_ADDR)
./arch/x86/kernel/vsyscall_64.c:	.vm_start	= VSYSCALL_ADDR,
./arch/x86/kernel/vsyscall_64.c:	.vm_end		= VSYSCALL_ADDR + PAGE_SIZE,
./arch/x86/kernel/vsyscall_64.c:	return vsyscall_mode != NONE && (addr & PAGE_MASK) == VSYSCALL_ADDR;
./arch/x86/kernel/vsyscall_64.c:		__set_fixmap(VSYSCALL_PAGE, physaddr_vsyscall,
./arch/x86/kernel/vsyscall_64.c:	BUILD_BUG_ON((unsigned long)__fix_to_virt(VSYSCALL_PAGE) !=
./arch/x86/kernel/vsyscall_64.c:		     (unsigned long)VSYSCALL_ADDR);
./arch/x86/kernel/pvclock.c:	WARN_ON (size != PVCLOCK_VSYSCALL_NR_PAGES*PAGE_SIZE);
Binary file ./arch/x86/kernel/pvclock.o matches
./arch/x86/kernel/syscall_32.c:#define __SYSCALL_I386(nr, sym, compat) extern asmlinkage void sym(void) ;
./arch/x86/kernel/syscall_32.c:#undef __SYSCALL_I386
./arch/x86/kernel/syscall_32.c:#define __SYSCALL_I386(nr, sym, compat) [nr] = sym,
./arch/x86/kernel/irqinit.c:		/* IA32_SYSCALL_VECTOR could be used in trap_init already. */
./arch/x86/kernel/syscall_64.c:#define __SYSCALL_COMMON(nr, sym, compat) __SYSCALL_64(nr, sym, compat)
./arch/x86/kernel/syscall_64.c:# define __SYSCALL_X32(nr, sym, compat) __SYSCALL_64(nr, sym, compat)
./arch/x86/kernel/syscall_64.c:# define __SYSCALL_X32(nr, sym, compat) /* nothing */
./arch/x86/kernel/syscall_64.c:#define __SYSCALL_64(nr, sym, compat) extern asmlinkage void sym(void) ;
./arch/x86/kernel/syscall_64.c:#undef __SYSCALL_64
./arch/x86/kernel/syscall_64.c:#define __SYSCALL_64(nr, sym, compat) [nr] = sym,
./arch/x86/kernel/asm-offsets_64.c:#define __SYSCALL_64(nr, sym, compat) [nr] = 1,
./arch/x86/kernel/asm-offsets_64.c:#define __SYSCALL_COMMON(nr, sym, compat) [nr] = 1,
./arch/x86/kernel/asm-offsets_64.c:# define __SYSCALL_X32(nr, sym, compat) [nr] = 1,
./arch/x86/kernel/asm-offsets_64.c:# define __SYSCALL_X32(nr, sym, compat) /* nothing */
./arch/x86/kernel/asm-offsets_64.c:#define __SYSCALL_I386(nr, sym, compat) [nr] = 1,
./arch/x86/mm/fault.c:#include <asm/fixmap.h>			/* VSYSCALL_ADDR		*/
./arch/x86/mm/fault.c:			     ((address & ~0xfff) == VSYSCALL_ADDR))) {
./arch/x86/mm/init_64.c:	kclist_add(&kcore_vsyscall, (void *)VSYSCALL_ADDR,
./arch/x86/xen/mmu.c:#ifdef CONFIG_X86_VSYSCALL_EMULATION
./arch/x86/xen/mmu.c:			user_pgd[pgd_index(VSYSCALL_ADDR)] =
./arch/x86/xen/mmu.c:#elif defined(CONFIG_X86_VSYSCALL_EMULATION)
./arch/x86/xen/mmu.c:	case VSYSCALL_PAGE:
./arch/x86/xen/mmu.c:#ifdef CONFIG_X86_VSYSCALL_EMULATION
./arch/x86/xen/mmu.c:	if (idx == VSYSCALL_PAGE) {
./arch/x86/xen/enlighten.c:	case MSR_SYSCALL_MASK:
Binary file ./arch/x86/xen/mmu.o matches
Binary file ./arch/x86/xen/suspend.o matches
Binary file ./arch/x86/xen/enlighten.o matches
Binary file ./arch/x86/xen/built-in.o matches
./arch/x86/lguest/boot.c:	.syscall_vec = SYSCALL_VECTOR,
./arch/x86/lguest/boot.c:		if (i != SYSCALL_VECTOR)
./arch/x86/vdso/vdso32/syscall.S:#define SYSCALL_ENTER_KERNEL	syscall
./arch/x86/vdso/vdso32/sigreturn.S:#ifndef SYSCALL_ENTER_KERNEL
./arch/x86/vdso/vdso32/sigreturn.S:#define	SYSCALL_ENTER_KERNEL	int $0x80
./arch/x86/vdso/vdso32/sigreturn.S:	SYSCALL_ENTER_KERNEL
./arch/x86/vdso/vdso32/sigreturn.S:	SYSCALL_ENTER_KERNEL
Binary file ./arch/x86/vdso/vclock_gettime-x32.o matches
Binary file ./arch/x86/vdso/vdsox32.so.dbg matches
./arch/x86/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/x86/Kconfig:config X86_VSYSCALL_EMULATION
./arch/x86/ia32/syscall_ia32.c:#define __SYSCALL_I386(nr, sym, compat) extern asmlinkage void compat(void) ;
./arch/x86/ia32/syscall_ia32.c:#undef __SYSCALL_I386
./arch/x86/ia32/syscall_ia32.c:#define __SYSCALL_I386(nr, sym, compat) [nr] = compat,
./arch/x86/ia32/ia32entry.S:	testl   $_TIF_WORK_SYSCALL_ENTRY,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/ia32/ia32entry.S:	testl $(_TIF_ALLWORK_MASK & ~_TIF_SYSCALL_AUDIT),TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/ia32/ia32entry.S:	movl $(_TIF_ALLWORK_MASK & ~_TIF_SYSCALL_AUDIT),%edi
./arch/x86/ia32/ia32entry.S:	testl	$(_TIF_WORK_SYSCALL_ENTRY & ~_TIF_SYSCALL_AUDIT),TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/ia32/ia32entry.S:	testl   $_TIF_WORK_SYSCALL_ENTRY,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/ia32/ia32entry.S:	testl $(_TIF_WORK_SYSCALL_ENTRY & ~_TIF_SYSCALL_AUDIT),TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/ia32/ia32entry.S:	testl $_TIF_WORK_SYSCALL_ENTRY,TI_flags+THREAD_INFO(%rsp,RIP-ARGOFFSET)
./arch/x86/kvm/x86.c:	MSR_CSTAR, MSR_KERNEL_GS_BASE, MSR_SYSCALL_MASK, MSR_LSTAR,
./arch/x86/kvm/svm.c:	MSR_STAR, MSR_LSTAR, MSR_CSTAR, MSR_SYSCALL_MASK, MSR_KERNEL_GS_BASE,
./arch/x86/kvm/svm.c:	{ .index = MSR_SYSCALL_MASK,			.always = true  },
./arch/x86/kvm/svm.c:	case MSR_SYSCALL_MASK:
./arch/x86/kvm/svm.c:	case MSR_SYSCALL_MASK:
./arch/x86/kvm/emulate.c:		ops->get_msr(ctxt, MSR_SYSCALL_MASK, &msr_data);
./arch/x86/kvm/vmx.c:	MSR_SYSCALL_MASK, MSR_LSTAR, MSR_CSTAR,
./arch/x86/kvm/vmx.c:		index = __find_msr_index(vmx, MSR_SYSCALL_MASK);
./arch/x86/um/asm/syscall.h:#ifndef __UM_ASM_SYSCALL_H
./arch/x86/um/asm/syscall.h:#define __UM_ASM_SYSCALL_H
./arch/x86/um/asm/syscall.h:#endif /* __UM_ASM_SYSCALL_H */
./arch/x86/um/asm/elf.h:	pr_reg[11] = PT_REGS_SYSCALL_NR(regs);	\
./arch/x86/um/asm/ptrace.h:#define PT_REGS_SYSCALL_RET(r) PT_REGS_AX(r)
./arch/x86/um/asm/ptrace.h:#define PT_REGS_SET_SYSCALL_RETURN(r, res) (PT_REGS_AX(r) = (res))
./arch/x86/um/signal.c:	PT_REGS_SYSCALL_NR(&current->thread.regs) = -1;
./arch/x86/um/signal.c:	return PT_REGS_SYSCALL_RET(&current->thread.regs);
./arch/x86/um/signal.c:	PT_REGS_SYSCALL_NR(&current->thread.regs) = -1;
./arch/x86/um/signal.c:	return PT_REGS_SYSCALL_RET(&current->thread.regs);
./arch/x86/um/user-offsets.c:#define __SYSCALL_I386(nr, sym, compat) [nr] = 1,
./arch/x86/um/user-offsets.c:#define __SYSCALL_64(nr, sym, compat) [nr] = 1,
./arch/x86/um/user-offsets.c:#define __SYSCALL_COMMON(nr, sym, compat) [nr] = 1,
./arch/x86/um/user-offsets.c:#define __SYSCALL_X32(nr, sym, compat) /* Not supported */
./arch/x86/um/Kconfig:config ARCH_REUSE_HOST_VSYSCALL_AREA
./arch/x86/um/tls_32.c:SYSCALL_DEFINE1(set_thread_area, struct user_desc __user *, user_desc)
./arch/x86/um/tls_32.c:SYSCALL_DEFINE1(get_thread_area, struct user_desc __user *, user_desc)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG1(r) UPT_BX(r)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG2(r) UPT_CX(r)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG3(r) UPT_DX(r)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG4(r) UPT_SI(r)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG5(r) UPT_DI(r)
./arch/x86/um/shared/sysdep/ptrace_32.h:#define UPT_SYSCALL_ARG6(r) UPT_BP(r)
./arch/x86/um/shared/sysdep/ptrace_user.h:#define PT_SYSCALL_NR(regs) ((regs)[HOST_ORIG_AX])
./arch/x86/um/shared/sysdep/ptrace_user.h:#define PT_SYSCALL_NR_OFFSET PT_OFFSET(HOST_ORIG_AX)
./arch/x86/um/shared/sysdep/ptrace_user.h:#define PT_SYSCALL_RET_OFFSET PT_OFFSET(HOST_AX)
./arch/x86/um/shared/sysdep/syscalls_64.h:	  (*sys_call_table[syscall]))(UPT_SYSCALL_ARG1(&regs->regs), \
./arch/x86/um/shared/sysdep/syscalls_64.h:		 		      UPT_SYSCALL_ARG2(&regs->regs), \
./arch/x86/um/shared/sysdep/syscalls_64.h:				      UPT_SYSCALL_ARG3(&regs->regs), \
./arch/x86/um/shared/sysdep/syscalls_64.h:				      UPT_SYSCALL_ARG4(&regs->regs), \
./arch/x86/um/shared/sysdep/syscalls_64.h:				      UPT_SYSCALL_ARG5(&regs->regs), \
./arch/x86/um/shared/sysdep/syscalls_64.h:				      UPT_SYSCALL_ARG6(&regs->regs)))
./arch/x86/um/shared/sysdep/ptrace.h:#define SYSCALL_ARGS(r) ((struct syscall_args) \
./arch/x86/um/shared/sysdep/ptrace.h:			 { .args = { UPT_SYSCALL_ARG1(r),	 \
./arch/x86/um/shared/sysdep/ptrace.h:				     UPT_SYSCALL_ARG2(r),	 \
./arch/x86/um/shared/sysdep/ptrace.h:				     UPT_SYSCALL_ARG3(r),	 \
./arch/x86/um/shared/sysdep/ptrace.h:				     UPT_SYSCALL_ARG4(r),	 \
./arch/x86/um/shared/sysdep/ptrace.h:				     UPT_SYSCALL_ARG5(r),	 \
./arch/x86/um/shared/sysdep/ptrace.h:				     UPT_SYSCALL_ARG6(r) } } )
./arch/x86/um/shared/sysdep/ptrace.h:#define UPT_SYSCALL_NR(r) ((r)->syscall)
./arch/x86/um/shared/sysdep/syscalls_32.h:	 (*sys_call_table[syscall]))(SYSCALL_ARGS(&regs->regs))
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG1(r) UPT_DI(r)
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG2(r) UPT_SI(r)
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG3(r) UPT_DX(r)
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG4(r) UPT_R10(r)
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG5(r) UPT_R8(r)
./arch/x86/um/shared/sysdep/ptrace_64.h:#define UPT_SYSCALL_ARG6(r) UPT_R9(r)
./arch/x86/um/shared/sysdep/stub_64.h:#define STUB_SYSCALL_RET PT_INDEX(RAX)
./arch/x86/um/shared/sysdep/stub_32.h:#define STUB_SYSCALL_RET EAX
./arch/x86/um/sys_call_table_32.c:#define __SYSCALL_I386(nr, sym, compat) extern asmlinkage void sym(void) ;
./arch/x86/um/sys_call_table_32.c:#undef __SYSCALL_I386
./arch/x86/um/sys_call_table_32.c:#define __SYSCALL_I386(nr, sym, compat) [ nr ] = sym,
./arch/x86/um/sys_call_table_64.c:#define __SYSCALL_COMMON(nr, sym, compat) __SYSCALL_64(nr, sym, compat)
./arch/x86/um/sys_call_table_64.c:#define __SYSCALL_X32(nr, sym, compat) /* Not supported */
./arch/x86/um/sys_call_table_64.c:#define __SYSCALL_64(nr, sym, compat) extern asmlinkage void sym(void) ;
./arch/x86/um/sys_call_table_64.c:#undef __SYSCALL_64
./arch/x86/um/sys_call_table_64.c:#define __SYSCALL_64(nr, sym, compat) [ nr ] = sym,
./arch/x86/syscalls/Makefile:syshdr_offset_unistd_x32 := __X32_SYSCALL_BIT
./arch/x86/syscalls/syscalltbl.sh:	    echo "__SYSCALL_${abi}($nr, $entry, $compat)"
./arch/x86/syscalls/syscalltbl.sh:	    echo "__SYSCALL_${abi}($nr, $entry, $entry)"
./arch/x86/include/asm/page_64.h:#ifdef CONFIG_X86_VSYSCALL_EMULATION
./arch/x86/include/asm/unistd.h:#  define __SYSCALL_MASK (~(__X32_SYSCALL_BIT))
./arch/x86/include/asm/unistd.h:#  define __SYSCALL_MASK (~0)
./arch/x86/include/asm/syscall.h:#ifndef _ASM_X86_SYSCALL_H
./arch/x86/include/asm/syscall.h:#define _ASM_X86_SYSCALL_H
./arch/x86/include/asm/syscall.h:#endif	/* _ASM_X86_SYSCALL_H */
./arch/x86/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/x86/include/asm/thread_info.h:#define TIF_SYSCALL_EMU		6	/* syscall emulation active */
./arch/x86/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	7	/* syscall auditing active */
./arch/x86/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	28	/* syscall tracepoint instrumentation */
./arch/x86/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/x86/include/asm/thread_info.h:#define _TIF_SYSCALL_EMU	(1 << TIF_SYSCALL_EMU)
./arch/x86/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/x86/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1 << TIF_SYSCALL_TRACEPOINT)
./arch/x86/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_ENTRY	\
./arch/x86/include/asm/thread_info.h:	(_TIF_SYSCALL_TRACE | _TIF_SYSCALL_EMU | _TIF_SYSCALL_AUDIT |	\
./arch/x86/include/asm/thread_info.h:	 _TIF_SECCOMP | _TIF_SINGLESTEP | _TIF_SYSCALL_TRACEPOINT |	\
./arch/x86/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_EXIT	\
./arch/x86/include/asm/thread_info.h:	(_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP |	\
./arch/x86/include/asm/thread_info.h:	 _TIF_SYSCALL_TRACEPOINT | _TIF_NOHZ)
./arch/x86/include/asm/thread_info.h:	 ~(_TIF_SYSCALL_TRACE|_TIF_SYSCALL_AUDIT|			\
./arch/x86/include/asm/thread_info.h:	   _TIF_SINGLESTEP|_TIF_SECCOMP|_TIF_SYSCALL_EMU))
./arch/x86/include/asm/thread_info.h:	((0x0000FFFF & ~_TIF_SECCOMP) | _TIF_SYSCALL_TRACEPOINT |	\
./arch/x86/include/asm/vsyscall.h:#ifndef _ASM_X86_VSYSCALL_H
./arch/x86/include/asm/vsyscall.h:#define _ASM_X86_VSYSCALL_H
./arch/x86/include/asm/vsyscall.h:#ifdef CONFIG_X86_VSYSCALL_EMULATION
./arch/x86/include/asm/vsyscall.h:#endif /* _ASM_X86_VSYSCALL_H */
./arch/x86/include/asm/fixmap.h:#define FIXADDR_TOP	(round_up(VSYSCALL_ADDR + PAGE_SIZE, 1<<PMD_SHIFT) - \
./arch/x86/include/asm/fixmap.h:#ifdef CONFIG_X86_VSYSCALL_EMULATION
./arch/x86/include/asm/fixmap.h:	VSYSCALL_PAGE = (FIXADDR_TOP - VSYSCALL_ADDR) >> PAGE_SHIFT,
./arch/x86/include/asm/fixmap.h:	PVCLOCK_FIXMAP_END = PVCLOCK_FIXMAP_BEGIN+PVCLOCK_VSYSCALL_NR_PAGES-1,
./arch/x86/include/asm/compat.h:	(!!(task_pt_regs(current)->orig_ax & __X32_SYSCALL_BIT))
./arch/x86/include/asm/compat.h:	if (task_pt_regs(current)->orig_ax & __X32_SYSCALL_BIT)
./arch/x86/include/asm/ia32_unistd.h:#define __SYSCALL_ia32_NR(x) (x)
./arch/x86/include/asm/pvclock.h:#define PVCLOCK_VSYSCALL_NR_PAGES (((NR_CPUS-1)/(PAGE_SIZE/PVTI_SIZE))+1)
./arch/x86/include/asm/irq_vectors.h:#define IA32_SYSCALL_VECTOR		0x80
./arch/x86/include/asm/irq_vectors.h:# define SYSCALL_VECTOR			0x80
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(0, sys_read, sys_read)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(1, sys_write, sys_write)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(2, sys_open, sys_open)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(3, sys_close, sys_close)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(4, sys_newstat, sys_newstat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(5, sys_newfstat, sys_newfstat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(6, sys_newlstat, sys_newlstat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(7, sys_poll, sys_poll)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(8, sys_lseek, sys_lseek)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(9, sys_mmap, sys_mmap)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(10, sys_mprotect, sys_mprotect)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(11, sys_munmap, sys_munmap)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(12, sys_brk, sys_brk)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(13, sys_rt_sigaction, sys_rt_sigaction)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(14, sys_rt_sigprocmask, sys_rt_sigprocmask)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(15, stub_rt_sigreturn, stub_rt_sigreturn)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(16, sys_ioctl, sys_ioctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(17, sys_pread64, sys_pread64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(18, sys_pwrite64, sys_pwrite64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(19, sys_readv, sys_readv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(20, sys_writev, sys_writev)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(21, sys_access, sys_access)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(22, sys_pipe, sys_pipe)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(23, sys_select, sys_select)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(24, sys_sched_yield, sys_sched_yield)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(25, sys_mremap, sys_mremap)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(26, sys_msync, sys_msync)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(27, sys_mincore, sys_mincore)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(28, sys_madvise, sys_madvise)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(29, sys_shmget, sys_shmget)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(30, sys_shmat, sys_shmat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(31, sys_shmctl, sys_shmctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(32, sys_dup, sys_dup)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(33, sys_dup2, sys_dup2)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(34, sys_pause, sys_pause)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(35, sys_nanosleep, sys_nanosleep)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(36, sys_getitimer, sys_getitimer)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(37, sys_alarm, sys_alarm)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(38, sys_setitimer, sys_setitimer)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(39, sys_getpid, sys_getpid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(40, sys_sendfile64, sys_sendfile64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(41, sys_socket, sys_socket)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(42, sys_connect, sys_connect)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(43, sys_accept, sys_accept)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(44, sys_sendto, sys_sendto)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(45, sys_recvfrom, sys_recvfrom)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(46, sys_sendmsg, sys_sendmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(47, sys_recvmsg, sys_recvmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(48, sys_shutdown, sys_shutdown)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(49, sys_bind, sys_bind)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(50, sys_listen, sys_listen)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(51, sys_getsockname, sys_getsockname)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(52, sys_getpeername, sys_getpeername)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(53, sys_socketpair, sys_socketpair)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(54, sys_setsockopt, sys_setsockopt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(55, sys_getsockopt, sys_getsockopt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(56, stub_clone, stub_clone)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(57, stub_fork, stub_fork)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(58, stub_vfork, stub_vfork)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(59, stub_execve, stub_execve)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(60, sys_exit, sys_exit)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(61, sys_wait4, sys_wait4)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(62, sys_kill, sys_kill)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(63, sys_newuname, sys_newuname)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(64, sys_semget, sys_semget)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(65, sys_semop, sys_semop)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(66, sys_semctl, sys_semctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(67, sys_shmdt, sys_shmdt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(68, sys_msgget, sys_msgget)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(69, sys_msgsnd, sys_msgsnd)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(70, sys_msgrcv, sys_msgrcv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(71, sys_msgctl, sys_msgctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(72, sys_fcntl, sys_fcntl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(73, sys_flock, sys_flock)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(74, sys_fsync, sys_fsync)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(75, sys_fdatasync, sys_fdatasync)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(76, sys_truncate, sys_truncate)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(77, sys_ftruncate, sys_ftruncate)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(78, sys_getdents, sys_getdents)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(79, sys_getcwd, sys_getcwd)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(80, sys_chdir, sys_chdir)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(81, sys_fchdir, sys_fchdir)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(82, sys_rename, sys_rename)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(83, sys_mkdir, sys_mkdir)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(84, sys_rmdir, sys_rmdir)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(85, sys_creat, sys_creat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(86, sys_link, sys_link)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(87, sys_unlink, sys_unlink)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(88, sys_symlink, sys_symlink)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(89, sys_readlink, sys_readlink)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(90, sys_chmod, sys_chmod)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(91, sys_fchmod, sys_fchmod)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(92, sys_chown, sys_chown)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(93, sys_fchown, sys_fchown)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(94, sys_lchown, sys_lchown)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(95, sys_umask, sys_umask)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(96, sys_gettimeofday, sys_gettimeofday)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(97, sys_getrlimit, sys_getrlimit)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(98, sys_getrusage, sys_getrusage)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(99, sys_sysinfo, sys_sysinfo)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(100, sys_times, sys_times)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(101, sys_ptrace, sys_ptrace)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(102, sys_getuid, sys_getuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(103, sys_syslog, sys_syslog)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(104, sys_getgid, sys_getgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(105, sys_setuid, sys_setuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(106, sys_setgid, sys_setgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(107, sys_geteuid, sys_geteuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(108, sys_getegid, sys_getegid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(109, sys_setpgid, sys_setpgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(110, sys_getppid, sys_getppid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(111, sys_getpgrp, sys_getpgrp)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(112, sys_setsid, sys_setsid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(113, sys_setreuid, sys_setreuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(114, sys_setregid, sys_setregid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(115, sys_getgroups, sys_getgroups)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(116, sys_setgroups, sys_setgroups)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(117, sys_setresuid, sys_setresuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(118, sys_getresuid, sys_getresuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(119, sys_setresgid, sys_setresgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(120, sys_getresgid, sys_getresgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(121, sys_getpgid, sys_getpgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(122, sys_setfsuid, sys_setfsuid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(123, sys_setfsgid, sys_setfsgid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(124, sys_getsid, sys_getsid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(125, sys_capget, sys_capget)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(126, sys_capset, sys_capset)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(127, sys_rt_sigpending, sys_rt_sigpending)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(128, sys_rt_sigtimedwait, sys_rt_sigtimedwait)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(129, sys_rt_sigqueueinfo, sys_rt_sigqueueinfo)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(130, sys_rt_sigsuspend, sys_rt_sigsuspend)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(131, sys_sigaltstack, sys_sigaltstack)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(132, sys_utime, sys_utime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(133, sys_mknod, sys_mknod)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(135, sys_personality, sys_personality)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(136, sys_ustat, sys_ustat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(137, sys_statfs, sys_statfs)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(138, sys_fstatfs, sys_fstatfs)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(139, sys_sysfs, sys_sysfs)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(140, sys_getpriority, sys_getpriority)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(141, sys_setpriority, sys_setpriority)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(142, sys_sched_setparam, sys_sched_setparam)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(143, sys_sched_getparam, sys_sched_getparam)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(144, sys_sched_setscheduler, sys_sched_setscheduler)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(145, sys_sched_getscheduler, sys_sched_getscheduler)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(146, sys_sched_get_priority_max, sys_sched_get_priority_max)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(147, sys_sched_get_priority_min, sys_sched_get_priority_min)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(148, sys_sched_rr_get_interval, sys_sched_rr_get_interval)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(149, sys_mlock, sys_mlock)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(150, sys_munlock, sys_munlock)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(151, sys_mlockall, sys_mlockall)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(152, sys_munlockall, sys_munlockall)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(153, sys_vhangup, sys_vhangup)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(154, sys_modify_ldt, sys_modify_ldt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(155, sys_pivot_root, sys_pivot_root)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(156, sys_sysctl, sys_sysctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(157, sys_prctl, sys_prctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(158, sys_arch_prctl, sys_arch_prctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(159, sys_adjtimex, sys_adjtimex)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(160, sys_setrlimit, sys_setrlimit)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(161, sys_chroot, sys_chroot)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(162, sys_sync, sys_sync)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(163, sys_acct, sys_acct)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(164, sys_settimeofday, sys_settimeofday)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(165, sys_mount, sys_mount)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(166, sys_umount, sys_umount)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(167, sys_swapon, sys_swapon)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(168, sys_swapoff, sys_swapoff)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(169, sys_reboot, sys_reboot)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(170, sys_sethostname, sys_sethostname)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(171, sys_setdomainname, sys_setdomainname)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(172, stub_iopl, stub_iopl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(173, sys_ioperm, sys_ioperm)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(175, sys_init_module, sys_init_module)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(176, sys_delete_module, sys_delete_module)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(179, sys_quotactl, sys_quotactl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(186, sys_gettid, sys_gettid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(187, sys_readahead, sys_readahead)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(188, sys_setxattr, sys_setxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(189, sys_lsetxattr, sys_lsetxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(190, sys_fsetxattr, sys_fsetxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(191, sys_getxattr, sys_getxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(192, sys_lgetxattr, sys_lgetxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(193, sys_fgetxattr, sys_fgetxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(194, sys_listxattr, sys_listxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(195, sys_llistxattr, sys_llistxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(196, sys_flistxattr, sys_flistxattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(197, sys_removexattr, sys_removexattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(198, sys_lremovexattr, sys_lremovexattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(199, sys_fremovexattr, sys_fremovexattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(200, sys_tkill, sys_tkill)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(201, sys_time, sys_time)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(202, sys_futex, sys_futex)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(203, sys_sched_setaffinity, sys_sched_setaffinity)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(204, sys_sched_getaffinity, sys_sched_getaffinity)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(206, sys_io_setup, sys_io_setup)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(207, sys_io_destroy, sys_io_destroy)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(208, sys_io_getevents, sys_io_getevents)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(209, sys_io_submit, sys_io_submit)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(210, sys_io_cancel, sys_io_cancel)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(212, sys_lookup_dcookie, sys_lookup_dcookie)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(213, sys_epoll_create, sys_epoll_create)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(216, sys_remap_file_pages, sys_remap_file_pages)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(217, sys_getdents64, sys_getdents64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(218, sys_set_tid_address, sys_set_tid_address)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(219, sys_restart_syscall, sys_restart_syscall)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(220, sys_semtimedop, sys_semtimedop)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(221, sys_fadvise64, sys_fadvise64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(222, sys_timer_create, sys_timer_create)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(223, sys_timer_settime, sys_timer_settime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(224, sys_timer_gettime, sys_timer_gettime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(225, sys_timer_getoverrun, sys_timer_getoverrun)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(226, sys_timer_delete, sys_timer_delete)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(227, sys_clock_settime, sys_clock_settime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(228, sys_clock_gettime, sys_clock_gettime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(229, sys_clock_getres, sys_clock_getres)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(230, sys_clock_nanosleep, sys_clock_nanosleep)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(231, sys_exit_group, sys_exit_group)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(232, sys_epoll_wait, sys_epoll_wait)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(233, sys_epoll_ctl, sys_epoll_ctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(234, sys_tgkill, sys_tgkill)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(235, sys_utimes, sys_utimes)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(237, sys_mbind, sys_mbind)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(238, sys_set_mempolicy, sys_set_mempolicy)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(239, sys_get_mempolicy, sys_get_mempolicy)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(240, sys_mq_open, sys_mq_open)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(241, sys_mq_unlink, sys_mq_unlink)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(242, sys_mq_timedsend, sys_mq_timedsend)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(243, sys_mq_timedreceive, sys_mq_timedreceive)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(244, sys_mq_notify, sys_mq_notify)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(245, sys_mq_getsetattr, sys_mq_getsetattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(246, sys_kexec_load, sys_kexec_load)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(247, sys_waitid, sys_waitid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(248, sys_add_key, sys_add_key)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(249, sys_request_key, sys_request_key)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(250, sys_keyctl, sys_keyctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(251, sys_ioprio_set, sys_ioprio_set)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(252, sys_ioprio_get, sys_ioprio_get)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(253, sys_inotify_init, sys_inotify_init)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(254, sys_inotify_add_watch, sys_inotify_add_watch)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(255, sys_inotify_rm_watch, sys_inotify_rm_watch)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(256, sys_migrate_pages, sys_migrate_pages)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(257, sys_openat, sys_openat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(258, sys_mkdirat, sys_mkdirat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(259, sys_mknodat, sys_mknodat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(260, sys_fchownat, sys_fchownat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(261, sys_futimesat, sys_futimesat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(262, sys_newfstatat, sys_newfstatat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(263, sys_unlinkat, sys_unlinkat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(264, sys_renameat, sys_renameat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(265, sys_linkat, sys_linkat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(266, sys_symlinkat, sys_symlinkat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(267, sys_readlinkat, sys_readlinkat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(268, sys_fchmodat, sys_fchmodat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(269, sys_faccessat, sys_faccessat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(270, sys_pselect6, sys_pselect6)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(271, sys_ppoll, sys_ppoll)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(272, sys_unshare, sys_unshare)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(273, sys_set_robust_list, sys_set_robust_list)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(274, sys_get_robust_list, sys_get_robust_list)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(275, sys_splice, sys_splice)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(276, sys_tee, sys_tee)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(277, sys_sync_file_range, sys_sync_file_range)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(278, sys_vmsplice, sys_vmsplice)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(279, sys_move_pages, sys_move_pages)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(280, sys_utimensat, sys_utimensat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(281, sys_epoll_pwait, sys_epoll_pwait)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(282, sys_signalfd, sys_signalfd)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(283, sys_timerfd_create, sys_timerfd_create)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(284, sys_eventfd, sys_eventfd)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(285, sys_fallocate, sys_fallocate)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(286, sys_timerfd_settime, sys_timerfd_settime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(287, sys_timerfd_gettime, sys_timerfd_gettime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(288, sys_accept4, sys_accept4)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(289, sys_signalfd4, sys_signalfd4)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(290, sys_eventfd2, sys_eventfd2)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(291, sys_epoll_create1, sys_epoll_create1)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(292, sys_dup3, sys_dup3)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(293, sys_pipe2, sys_pipe2)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(294, sys_inotify_init1, sys_inotify_init1)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(295, sys_preadv, sys_preadv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(296, sys_pwritev, sys_pwritev)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(297, sys_rt_tgsigqueueinfo, sys_rt_tgsigqueueinfo)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(298, sys_perf_event_open, sys_perf_event_open)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(299, sys_recvmmsg, sys_recvmmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(300, sys_fanotify_init, sys_fanotify_init)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(301, sys_fanotify_mark, sys_fanotify_mark)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(302, sys_prlimit64, sys_prlimit64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(303, sys_name_to_handle_at, sys_name_to_handle_at)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(304, sys_open_by_handle_at, sys_open_by_handle_at)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(305, sys_clock_adjtime, sys_clock_adjtime)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(306, sys_syncfs, sys_syncfs)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(307, sys_sendmmsg, sys_sendmmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(308, sys_setns, sys_setns)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(309, sys_getcpu, sys_getcpu)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(310, sys_process_vm_readv, sys_process_vm_readv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(311, sys_process_vm_writev, sys_process_vm_writev)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(312, sys_kcmp, sys_kcmp)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(313, sys_finit_module, sys_finit_module)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(314, sys_sched_setattr, sys_sched_setattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(315, sys_sched_getattr, sys_sched_getattr)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(316, sys_renameat2, sys_renameat2)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(317, sys_seccomp, sys_seccomp)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(318, sys_getrandom, sys_getrandom)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(319, sys_memfd_create, sys_memfd_create)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(320, sys_kexec_file_load, sys_kexec_file_load)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_COMMON(321, sys_bpf, sys_bpf)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_64(322, stub_execveat, stub_execveat)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(512, compat_sys_rt_sigaction, compat_sys_rt_sigaction)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(513, stub_x32_rt_sigreturn, stub_x32_rt_sigreturn)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(514, compat_sys_ioctl, compat_sys_ioctl)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(515, compat_sys_readv, compat_sys_readv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(516, compat_sys_writev, compat_sys_writev)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(517, compat_sys_recvfrom, compat_sys_recvfrom)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(518, compat_sys_sendmsg, compat_sys_sendmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(519, compat_sys_recvmsg, compat_sys_recvmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(520, stub_x32_execve, stub_x32_execve)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(521, compat_sys_ptrace, compat_sys_ptrace)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(522, compat_sys_rt_sigpending, compat_sys_rt_sigpending)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(523, compat_sys_rt_sigtimedwait, compat_sys_rt_sigtimedwait)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(524, compat_sys_rt_sigqueueinfo, compat_sys_rt_sigqueueinfo)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(525, compat_sys_sigaltstack, compat_sys_sigaltstack)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(526, compat_sys_timer_create, compat_sys_timer_create)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(527, compat_sys_mq_notify, compat_sys_mq_notify)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(528, compat_sys_kexec_load, compat_sys_kexec_load)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(529, compat_sys_waitid, compat_sys_waitid)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(530, compat_sys_set_robust_list, compat_sys_set_robust_list)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(531, compat_sys_get_robust_list, compat_sys_get_robust_list)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(532, compat_sys_vmsplice, compat_sys_vmsplice)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(533, compat_sys_move_pages, compat_sys_move_pages)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(534, compat_sys_preadv64, compat_sys_preadv64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(535, compat_sys_pwritev64, compat_sys_pwritev64)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(536, compat_sys_rt_tgsigqueueinfo, compat_sys_rt_tgsigqueueinfo)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(537, compat_sys_recvmmsg, compat_sys_recvmmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(538, compat_sys_sendmmsg, compat_sys_sendmmsg)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(539, compat_sys_process_vm_readv, compat_sys_process_vm_readv)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(540, compat_sys_process_vm_writev, compat_sys_process_vm_writev)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(541, compat_sys_setsockopt, compat_sys_setsockopt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(542, compat_sys_getsockopt, compat_sys_getsockopt)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(543, compat_sys_io_setup, compat_sys_io_setup)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(544, compat_sys_io_submit, compat_sys_io_submit)
./arch/x86/include/generated/asm/syscalls_64.h:__SYSCALL_X32(545, stub_x32_execveat, stub_x32_execveat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(0, sys_restart_syscall, sys_restart_syscall)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(1, sys_exit, sys_exit)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(2, sys_fork, stub32_fork)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(3, sys_read, sys_read)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(4, sys_write, sys_write)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(5, sys_open, compat_sys_open)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(6, sys_close, sys_close)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(7, sys_waitpid, sys32_waitpid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(8, sys_creat, sys_creat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(9, sys_link, sys_link)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(10, sys_unlink, sys_unlink)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(11, sys_execve, stub32_execve)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(12, sys_chdir, sys_chdir)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(13, sys_time, compat_sys_time)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(14, sys_mknod, sys_mknod)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(15, sys_chmod, sys_chmod)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(16, sys_lchown16, sys_lchown16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(18, sys_stat, sys_stat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(19, sys_lseek, compat_sys_lseek)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(20, sys_getpid, sys_getpid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(21, sys_mount, compat_sys_mount)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(22, sys_oldumount, sys_oldumount)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(23, sys_setuid16, sys_setuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(24, sys_getuid16, sys_getuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(25, sys_stime, compat_sys_stime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(26, sys_ptrace, compat_sys_ptrace)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(27, sys_alarm, sys_alarm)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(28, sys_fstat, sys_fstat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(29, sys_pause, sys_pause)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(30, sys_utime, compat_sys_utime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(33, sys_access, sys_access)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(34, sys_nice, sys_nice)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(36, sys_sync, sys_sync)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(37, sys_kill, sys_kill)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(38, sys_rename, sys_rename)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(39, sys_mkdir, sys_mkdir)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(40, sys_rmdir, sys_rmdir)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(41, sys_dup, sys_dup)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(42, sys_pipe, sys_pipe)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(43, sys_times, compat_sys_times)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(45, sys_brk, sys_brk)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(46, sys_setgid16, sys_setgid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(47, sys_getgid16, sys_getgid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(48, sys_signal, sys_signal)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(49, sys_geteuid16, sys_geteuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(50, sys_getegid16, sys_getegid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(51, sys_acct, sys_acct)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(52, sys_umount, sys_umount)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(54, sys_ioctl, compat_sys_ioctl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(55, sys_fcntl, compat_sys_fcntl64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(57, sys_setpgid, sys_setpgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(59, sys_olduname, sys_olduname)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(60, sys_umask, sys_umask)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(61, sys_chroot, sys_chroot)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(62, sys_ustat, compat_sys_ustat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(63, sys_dup2, sys_dup2)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(64, sys_getppid, sys_getppid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(65, sys_getpgrp, sys_getpgrp)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(66, sys_setsid, sys_setsid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(67, sys_sigaction, compat_sys_sigaction)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(68, sys_sgetmask, sys_sgetmask)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(69, sys_ssetmask, sys_ssetmask)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(70, sys_setreuid16, sys_setreuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(71, sys_setregid16, sys_setregid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(72, sys_sigsuspend, sys_sigsuspend)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(73, sys_sigpending, compat_sys_sigpending)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(74, sys_sethostname, sys_sethostname)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(75, sys_setrlimit, compat_sys_setrlimit)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(76, sys_old_getrlimit, compat_sys_old_getrlimit)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(77, sys_getrusage, compat_sys_getrusage)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(78, sys_gettimeofday, compat_sys_gettimeofday)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(79, sys_settimeofday, compat_sys_settimeofday)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(80, sys_getgroups16, sys_getgroups16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(81, sys_setgroups16, sys_setgroups16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(82, sys_old_select, compat_sys_old_select)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(83, sys_symlink, sys_symlink)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(84, sys_lstat, sys_lstat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(85, sys_readlink, sys_readlink)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(86, sys_uselib, sys_uselib)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(87, sys_swapon, sys_swapon)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(88, sys_reboot, sys_reboot)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(89, sys_old_readdir, compat_sys_old_readdir)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(90, sys_old_mmap, sys32_mmap)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(91, sys_munmap, sys_munmap)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(92, sys_truncate, compat_sys_truncate)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(93, sys_ftruncate, compat_sys_ftruncate)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(94, sys_fchmod, sys_fchmod)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(95, sys_fchown16, sys_fchown16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(96, sys_getpriority, sys_getpriority)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(97, sys_setpriority, sys_setpriority)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(99, sys_statfs, compat_sys_statfs)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(100, sys_fstatfs, compat_sys_fstatfs)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(101, sys_ioperm, sys_ioperm)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(102, sys_socketcall, compat_sys_socketcall)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(103, sys_syslog, sys_syslog)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(104, sys_setitimer, compat_sys_setitimer)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(105, sys_getitimer, compat_sys_getitimer)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(106, sys_newstat, compat_sys_newstat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(107, sys_newlstat, compat_sys_newlstat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(108, sys_newfstat, compat_sys_newfstat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(109, sys_uname, sys_uname)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(110, sys_iopl, sys_iopl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(111, sys_vhangup, sys_vhangup)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(113, sys_vm86old, sys32_vm86_warning)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(114, sys_wait4, compat_sys_wait4)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(115, sys_swapoff, sys_swapoff)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(116, sys_sysinfo, compat_sys_sysinfo)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(117, sys_ipc, compat_sys_ipc)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(118, sys_fsync, sys_fsync)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(119, sys_sigreturn, stub32_sigreturn)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(120, sys_clone, stub32_clone)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(121, sys_setdomainname, sys_setdomainname)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(122, sys_newuname, sys_newuname)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(123, sys_modify_ldt, sys_modify_ldt)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(124, sys_adjtimex, compat_sys_adjtimex)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(125, sys_mprotect, sys_mprotect)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(126, sys_sigprocmask, compat_sys_sigprocmask)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(128, sys_init_module, sys_init_module)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(129, sys_delete_module, sys_delete_module)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(131, sys_quotactl, sys32_quotactl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(132, sys_getpgid, sys_getpgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(133, sys_fchdir, sys_fchdir)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(134, sys_bdflush, sys_bdflush)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(135, sys_sysfs, sys_sysfs)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(136, sys_personality, sys_personality)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(138, sys_setfsuid16, sys_setfsuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(139, sys_setfsgid16, sys_setfsgid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(140, sys_llseek, sys_llseek)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(141, sys_getdents, compat_sys_getdents)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(142, sys_select, compat_sys_select)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(143, sys_flock, sys_flock)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(144, sys_msync, sys_msync)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(145, sys_readv, compat_sys_readv)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(146, sys_writev, compat_sys_writev)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(147, sys_getsid, sys_getsid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(148, sys_fdatasync, sys_fdatasync)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(149, sys_sysctl, compat_sys_sysctl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(150, sys_mlock, sys_mlock)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(151, sys_munlock, sys_munlock)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(152, sys_mlockall, sys_mlockall)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(153, sys_munlockall, sys_munlockall)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(154, sys_sched_setparam, sys_sched_setparam)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(155, sys_sched_getparam, sys_sched_getparam)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(156, sys_sched_setscheduler, sys_sched_setscheduler)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(157, sys_sched_getscheduler, sys_sched_getscheduler)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(158, sys_sched_yield, sys_sched_yield)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(159, sys_sched_get_priority_max, sys_sched_get_priority_max)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(160, sys_sched_get_priority_min, sys_sched_get_priority_min)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(161, sys_sched_rr_get_interval, compat_sys_sched_rr_get_interval)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(162, sys_nanosleep, compat_sys_nanosleep)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(163, sys_mremap, sys_mremap)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(164, sys_setresuid16, sys_setresuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(165, sys_getresuid16, sys_getresuid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(166, sys_vm86, sys32_vm86_warning)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(168, sys_poll, sys_poll)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(170, sys_setresgid16, sys_setresgid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(171, sys_getresgid16, sys_getresgid16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(172, sys_prctl, sys_prctl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(173, sys_rt_sigreturn, stub32_rt_sigreturn)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(174, sys_rt_sigaction, compat_sys_rt_sigaction)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(175, sys_rt_sigprocmask, sys_rt_sigprocmask)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(176, sys_rt_sigpending, compat_sys_rt_sigpending)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(177, sys_rt_sigtimedwait, compat_sys_rt_sigtimedwait)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(178, sys_rt_sigqueueinfo, compat_sys_rt_sigqueueinfo)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(179, sys_rt_sigsuspend, sys_rt_sigsuspend)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(180, sys_pread64, sys32_pread)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(181, sys_pwrite64, sys32_pwrite)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(182, sys_chown16, sys_chown16)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(183, sys_getcwd, sys_getcwd)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(184, sys_capget, sys_capget)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(185, sys_capset, sys_capset)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(186, sys_sigaltstack, compat_sys_sigaltstack)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(187, sys_sendfile, compat_sys_sendfile)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(190, sys_vfork, stub32_vfork)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(191, sys_getrlimit, compat_sys_getrlimit)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(192, sys_mmap_pgoff, sys_mmap_pgoff)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(193, sys_truncate64, sys32_truncate64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(194, sys_ftruncate64, sys32_ftruncate64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(195, sys_stat64, sys32_stat64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(196, sys_lstat64, sys32_lstat64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(197, sys_fstat64, sys32_fstat64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(198, sys_lchown, sys_lchown)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(199, sys_getuid, sys_getuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(200, sys_getgid, sys_getgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(201, sys_geteuid, sys_geteuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(202, sys_getegid, sys_getegid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(203, sys_setreuid, sys_setreuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(204, sys_setregid, sys_setregid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(205, sys_getgroups, sys_getgroups)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(206, sys_setgroups, sys_setgroups)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(207, sys_fchown, sys_fchown)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(208, sys_setresuid, sys_setresuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(209, sys_getresuid, sys_getresuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(210, sys_setresgid, sys_setresgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(211, sys_getresgid, sys_getresgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(212, sys_chown, sys_chown)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(213, sys_setuid, sys_setuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(214, sys_setgid, sys_setgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(215, sys_setfsuid, sys_setfsuid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(216, sys_setfsgid, sys_setfsgid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(217, sys_pivot_root, sys_pivot_root)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(218, sys_mincore, sys_mincore)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(219, sys_madvise, sys_madvise)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(220, sys_getdents64, compat_sys_getdents64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(221, sys_fcntl64, compat_sys_fcntl64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(224, sys_gettid, sys_gettid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(225, sys_readahead, sys32_readahead)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(226, sys_setxattr, sys_setxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(227, sys_lsetxattr, sys_lsetxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(228, sys_fsetxattr, sys_fsetxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(229, sys_getxattr, sys_getxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(230, sys_lgetxattr, sys_lgetxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(231, sys_fgetxattr, sys_fgetxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(232, sys_listxattr, sys_listxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(233, sys_llistxattr, sys_llistxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(234, sys_flistxattr, sys_flistxattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(235, sys_removexattr, sys_removexattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(236, sys_lremovexattr, sys_lremovexattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(237, sys_fremovexattr, sys_fremovexattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(238, sys_tkill, sys_tkill)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(239, sys_sendfile64, sys_sendfile64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(240, sys_futex, compat_sys_futex)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(241, sys_sched_setaffinity, compat_sys_sched_setaffinity)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(242, sys_sched_getaffinity, compat_sys_sched_getaffinity)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(243, sys_set_thread_area, sys_set_thread_area)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(244, sys_get_thread_area, sys_get_thread_area)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(245, sys_io_setup, compat_sys_io_setup)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(246, sys_io_destroy, sys_io_destroy)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(247, sys_io_getevents, compat_sys_io_getevents)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(248, sys_io_submit, compat_sys_io_submit)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(249, sys_io_cancel, sys_io_cancel)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(250, sys_fadvise64, sys32_fadvise64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(252, sys_exit_group, sys_exit_group)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(253, sys_lookup_dcookie, compat_sys_lookup_dcookie)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(254, sys_epoll_create, sys_epoll_create)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(255, sys_epoll_ctl, sys_epoll_ctl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(256, sys_epoll_wait, sys_epoll_wait)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(257, sys_remap_file_pages, sys_remap_file_pages)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(258, sys_set_tid_address, sys_set_tid_address)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(259, sys_timer_create, compat_sys_timer_create)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(260, sys_timer_settime, compat_sys_timer_settime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(261, sys_timer_gettime, compat_sys_timer_gettime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(262, sys_timer_getoverrun, sys_timer_getoverrun)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(263, sys_timer_delete, sys_timer_delete)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(264, sys_clock_settime, compat_sys_clock_settime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(265, sys_clock_gettime, compat_sys_clock_gettime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(266, sys_clock_getres, compat_sys_clock_getres)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(267, sys_clock_nanosleep, compat_sys_clock_nanosleep)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(268, sys_statfs64, compat_sys_statfs64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(269, sys_fstatfs64, compat_sys_fstatfs64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(270, sys_tgkill, sys_tgkill)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(271, sys_utimes, compat_sys_utimes)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(272, sys_fadvise64_64, sys32_fadvise64_64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(274, sys_mbind, sys_mbind)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(275, sys_get_mempolicy, compat_sys_get_mempolicy)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(276, sys_set_mempolicy, sys_set_mempolicy)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(277, sys_mq_open, compat_sys_mq_open)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(278, sys_mq_unlink, sys_mq_unlink)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(279, sys_mq_timedsend, compat_sys_mq_timedsend)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(280, sys_mq_timedreceive, compat_sys_mq_timedreceive)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(281, sys_mq_notify, compat_sys_mq_notify)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(282, sys_mq_getsetattr, compat_sys_mq_getsetattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(283, sys_kexec_load, compat_sys_kexec_load)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(284, sys_waitid, compat_sys_waitid)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(286, sys_add_key, sys_add_key)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(287, sys_request_key, sys_request_key)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(288, sys_keyctl, sys_keyctl)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(289, sys_ioprio_set, sys_ioprio_set)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(290, sys_ioprio_get, sys_ioprio_get)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(291, sys_inotify_init, sys_inotify_init)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(292, sys_inotify_add_watch, sys_inotify_add_watch)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(293, sys_inotify_rm_watch, sys_inotify_rm_watch)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(294, sys_migrate_pages, sys_migrate_pages)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(295, sys_openat, compat_sys_openat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(296, sys_mkdirat, sys_mkdirat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(297, sys_mknodat, sys_mknodat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(298, sys_fchownat, sys_fchownat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(299, sys_futimesat, compat_sys_futimesat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(300, sys_fstatat64, sys32_fstatat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(301, sys_unlinkat, sys_unlinkat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(302, sys_renameat, sys_renameat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(303, sys_linkat, sys_linkat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(304, sys_symlinkat, sys_symlinkat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(305, sys_readlinkat, sys_readlinkat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(306, sys_fchmodat, sys_fchmodat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(307, sys_faccessat, sys_faccessat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(308, sys_pselect6, compat_sys_pselect6)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(309, sys_ppoll, compat_sys_ppoll)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(310, sys_unshare, sys_unshare)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(311, sys_set_robust_list, compat_sys_set_robust_list)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(312, sys_get_robust_list, compat_sys_get_robust_list)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(313, sys_splice, sys_splice)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(314, sys_sync_file_range, sys32_sync_file_range)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(315, sys_tee, sys_tee)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(316, sys_vmsplice, compat_sys_vmsplice)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(317, sys_move_pages, compat_sys_move_pages)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(318, sys_getcpu, sys_getcpu)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(319, sys_epoll_pwait, sys_epoll_pwait)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(320, sys_utimensat, compat_sys_utimensat)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(321, sys_signalfd, compat_sys_signalfd)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(322, sys_timerfd_create, sys_timerfd_create)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(323, sys_eventfd, sys_eventfd)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(324, sys_fallocate, sys32_fallocate)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(325, sys_timerfd_settime, compat_sys_timerfd_settime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(326, sys_timerfd_gettime, compat_sys_timerfd_gettime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(327, sys_signalfd4, compat_sys_signalfd4)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(328, sys_eventfd2, sys_eventfd2)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(329, sys_epoll_create1, sys_epoll_create1)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(330, sys_dup3, sys_dup3)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(331, sys_pipe2, sys_pipe2)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(332, sys_inotify_init1, sys_inotify_init1)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(333, sys_preadv, compat_sys_preadv)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(334, sys_pwritev, compat_sys_pwritev)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(335, sys_rt_tgsigqueueinfo, compat_sys_rt_tgsigqueueinfo)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(336, sys_perf_event_open, sys_perf_event_open)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(337, sys_recvmmsg, compat_sys_recvmmsg)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(338, sys_fanotify_init, sys_fanotify_init)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(339, sys_fanotify_mark, compat_sys_fanotify_mark)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(340, sys_prlimit64, sys_prlimit64)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(341, sys_name_to_handle_at, sys_name_to_handle_at)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(342, sys_open_by_handle_at, compat_sys_open_by_handle_at)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(343, sys_clock_adjtime, compat_sys_clock_adjtime)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(344, sys_syncfs, sys_syncfs)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(345, sys_sendmmsg, compat_sys_sendmmsg)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(346, sys_setns, sys_setns)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(347, sys_process_vm_readv, compat_sys_process_vm_readv)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(348, sys_process_vm_writev, compat_sys_process_vm_writev)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(349, sys_kcmp, sys_kcmp)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(350, sys_finit_module, sys_finit_module)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(351, sys_sched_setattr, sys_sched_setattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(352, sys_sched_getattr, sys_sched_getattr)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(353, sys_renameat2, sys_renameat2)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(354, sys_seccomp, sys_seccomp)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(355, sys_getrandom, sys_getrandom)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(356, sys_memfd_create, sys_memfd_create)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(357, sys_bpf, sys_bpf)
./arch/x86/include/generated/asm/syscalls_32.h:__SYSCALL_I386(358, sys_execveat, stub32_execveat)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_read (__X32_SYSCALL_BIT + 0)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_write (__X32_SYSCALL_BIT + 1)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_open (__X32_SYSCALL_BIT + 2)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_close (__X32_SYSCALL_BIT + 3)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_stat (__X32_SYSCALL_BIT + 4)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fstat (__X32_SYSCALL_BIT + 5)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lstat (__X32_SYSCALL_BIT + 6)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_poll (__X32_SYSCALL_BIT + 7)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lseek (__X32_SYSCALL_BIT + 8)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mmap (__X32_SYSCALL_BIT + 9)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mprotect (__X32_SYSCALL_BIT + 10)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_munmap (__X32_SYSCALL_BIT + 11)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_brk (__X32_SYSCALL_BIT + 12)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigprocmask (__X32_SYSCALL_BIT + 14)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pread64 (__X32_SYSCALL_BIT + 17)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pwrite64 (__X32_SYSCALL_BIT + 18)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_access (__X32_SYSCALL_BIT + 21)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pipe (__X32_SYSCALL_BIT + 22)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_select (__X32_SYSCALL_BIT + 23)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_yield (__X32_SYSCALL_BIT + 24)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mremap (__X32_SYSCALL_BIT + 25)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_msync (__X32_SYSCALL_BIT + 26)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mincore (__X32_SYSCALL_BIT + 27)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_madvise (__X32_SYSCALL_BIT + 28)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_shmget (__X32_SYSCALL_BIT + 29)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_shmat (__X32_SYSCALL_BIT + 30)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_shmctl (__X32_SYSCALL_BIT + 31)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_dup (__X32_SYSCALL_BIT + 32)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_dup2 (__X32_SYSCALL_BIT + 33)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pause (__X32_SYSCALL_BIT + 34)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_nanosleep (__X32_SYSCALL_BIT + 35)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getitimer (__X32_SYSCALL_BIT + 36)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_alarm (__X32_SYSCALL_BIT + 37)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setitimer (__X32_SYSCALL_BIT + 38)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpid (__X32_SYSCALL_BIT + 39)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sendfile (__X32_SYSCALL_BIT + 40)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_socket (__X32_SYSCALL_BIT + 41)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_connect (__X32_SYSCALL_BIT + 42)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_accept (__X32_SYSCALL_BIT + 43)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sendto (__X32_SYSCALL_BIT + 44)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_shutdown (__X32_SYSCALL_BIT + 48)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_bind (__X32_SYSCALL_BIT + 49)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_listen (__X32_SYSCALL_BIT + 50)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getsockname (__X32_SYSCALL_BIT + 51)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpeername (__X32_SYSCALL_BIT + 52)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_socketpair (__X32_SYSCALL_BIT + 53)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clone (__X32_SYSCALL_BIT + 56)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fork (__X32_SYSCALL_BIT + 57)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_vfork (__X32_SYSCALL_BIT + 58)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_exit (__X32_SYSCALL_BIT + 60)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_wait4 (__X32_SYSCALL_BIT + 61)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_kill (__X32_SYSCALL_BIT + 62)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_uname (__X32_SYSCALL_BIT + 63)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_semget (__X32_SYSCALL_BIT + 64)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_semop (__X32_SYSCALL_BIT + 65)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_semctl (__X32_SYSCALL_BIT + 66)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_shmdt (__X32_SYSCALL_BIT + 67)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_msgget (__X32_SYSCALL_BIT + 68)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_msgsnd (__X32_SYSCALL_BIT + 69)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_msgrcv (__X32_SYSCALL_BIT + 70)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_msgctl (__X32_SYSCALL_BIT + 71)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fcntl (__X32_SYSCALL_BIT + 72)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_flock (__X32_SYSCALL_BIT + 73)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fsync (__X32_SYSCALL_BIT + 74)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fdatasync (__X32_SYSCALL_BIT + 75)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_truncate (__X32_SYSCALL_BIT + 76)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ftruncate (__X32_SYSCALL_BIT + 77)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getdents (__X32_SYSCALL_BIT + 78)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getcwd (__X32_SYSCALL_BIT + 79)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_chdir (__X32_SYSCALL_BIT + 80)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fchdir (__X32_SYSCALL_BIT + 81)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rename (__X32_SYSCALL_BIT + 82)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mkdir (__X32_SYSCALL_BIT + 83)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rmdir (__X32_SYSCALL_BIT + 84)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_creat (__X32_SYSCALL_BIT + 85)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_link (__X32_SYSCALL_BIT + 86)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_unlink (__X32_SYSCALL_BIT + 87)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_symlink (__X32_SYSCALL_BIT + 88)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_readlink (__X32_SYSCALL_BIT + 89)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_chmod (__X32_SYSCALL_BIT + 90)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fchmod (__X32_SYSCALL_BIT + 91)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_chown (__X32_SYSCALL_BIT + 92)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fchown (__X32_SYSCALL_BIT + 93)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lchown (__X32_SYSCALL_BIT + 94)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_umask (__X32_SYSCALL_BIT + 95)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_gettimeofday (__X32_SYSCALL_BIT + 96)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getrlimit (__X32_SYSCALL_BIT + 97)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getrusage (__X32_SYSCALL_BIT + 98)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sysinfo (__X32_SYSCALL_BIT + 99)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_times (__X32_SYSCALL_BIT + 100)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getuid (__X32_SYSCALL_BIT + 102)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_syslog (__X32_SYSCALL_BIT + 103)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getgid (__X32_SYSCALL_BIT + 104)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setuid (__X32_SYSCALL_BIT + 105)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setgid (__X32_SYSCALL_BIT + 106)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_geteuid (__X32_SYSCALL_BIT + 107)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getegid (__X32_SYSCALL_BIT + 108)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setpgid (__X32_SYSCALL_BIT + 109)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getppid (__X32_SYSCALL_BIT + 110)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpgrp (__X32_SYSCALL_BIT + 111)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setsid (__X32_SYSCALL_BIT + 112)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setreuid (__X32_SYSCALL_BIT + 113)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setregid (__X32_SYSCALL_BIT + 114)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getgroups (__X32_SYSCALL_BIT + 115)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setgroups (__X32_SYSCALL_BIT + 116)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setresuid (__X32_SYSCALL_BIT + 117)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getresuid (__X32_SYSCALL_BIT + 118)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setresgid (__X32_SYSCALL_BIT + 119)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getresgid (__X32_SYSCALL_BIT + 120)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpgid (__X32_SYSCALL_BIT + 121)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setfsuid (__X32_SYSCALL_BIT + 122)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setfsgid (__X32_SYSCALL_BIT + 123)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getsid (__X32_SYSCALL_BIT + 124)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_capget (__X32_SYSCALL_BIT + 125)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_capset (__X32_SYSCALL_BIT + 126)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigsuspend (__X32_SYSCALL_BIT + 130)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_utime (__X32_SYSCALL_BIT + 132)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mknod (__X32_SYSCALL_BIT + 133)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_personality (__X32_SYSCALL_BIT + 135)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ustat (__X32_SYSCALL_BIT + 136)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_statfs (__X32_SYSCALL_BIT + 137)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fstatfs (__X32_SYSCALL_BIT + 138)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sysfs (__X32_SYSCALL_BIT + 139)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpriority (__X32_SYSCALL_BIT + 140)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setpriority (__X32_SYSCALL_BIT + 141)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_setparam (__X32_SYSCALL_BIT + 142)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_getparam (__X32_SYSCALL_BIT + 143)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_setscheduler (__X32_SYSCALL_BIT + 144)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_getscheduler (__X32_SYSCALL_BIT + 145)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_get_priority_max (__X32_SYSCALL_BIT + 146)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_get_priority_min (__X32_SYSCALL_BIT + 147)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_rr_get_interval (__X32_SYSCALL_BIT + 148)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mlock (__X32_SYSCALL_BIT + 149)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_munlock (__X32_SYSCALL_BIT + 150)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mlockall (__X32_SYSCALL_BIT + 151)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_munlockall (__X32_SYSCALL_BIT + 152)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_vhangup (__X32_SYSCALL_BIT + 153)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_modify_ldt (__X32_SYSCALL_BIT + 154)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pivot_root (__X32_SYSCALL_BIT + 155)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_prctl (__X32_SYSCALL_BIT + 157)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_arch_prctl (__X32_SYSCALL_BIT + 158)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_adjtimex (__X32_SYSCALL_BIT + 159)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setrlimit (__X32_SYSCALL_BIT + 160)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_chroot (__X32_SYSCALL_BIT + 161)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sync (__X32_SYSCALL_BIT + 162)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_acct (__X32_SYSCALL_BIT + 163)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_settimeofday (__X32_SYSCALL_BIT + 164)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mount (__X32_SYSCALL_BIT + 165)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_umount2 (__X32_SYSCALL_BIT + 166)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_swapon (__X32_SYSCALL_BIT + 167)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_swapoff (__X32_SYSCALL_BIT + 168)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_reboot (__X32_SYSCALL_BIT + 169)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sethostname (__X32_SYSCALL_BIT + 170)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setdomainname (__X32_SYSCALL_BIT + 171)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_iopl (__X32_SYSCALL_BIT + 172)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ioperm (__X32_SYSCALL_BIT + 173)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_init_module (__X32_SYSCALL_BIT + 175)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_delete_module (__X32_SYSCALL_BIT + 176)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_quotactl (__X32_SYSCALL_BIT + 179)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getpmsg (__X32_SYSCALL_BIT + 181)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_putpmsg (__X32_SYSCALL_BIT + 182)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_afs_syscall (__X32_SYSCALL_BIT + 183)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_tuxcall (__X32_SYSCALL_BIT + 184)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_security (__X32_SYSCALL_BIT + 185)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_gettid (__X32_SYSCALL_BIT + 186)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_readahead (__X32_SYSCALL_BIT + 187)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setxattr (__X32_SYSCALL_BIT + 188)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lsetxattr (__X32_SYSCALL_BIT + 189)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fsetxattr (__X32_SYSCALL_BIT + 190)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getxattr (__X32_SYSCALL_BIT + 191)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lgetxattr (__X32_SYSCALL_BIT + 192)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fgetxattr (__X32_SYSCALL_BIT + 193)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_listxattr (__X32_SYSCALL_BIT + 194)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_llistxattr (__X32_SYSCALL_BIT + 195)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_flistxattr (__X32_SYSCALL_BIT + 196)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_removexattr (__X32_SYSCALL_BIT + 197)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lremovexattr (__X32_SYSCALL_BIT + 198)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fremovexattr (__X32_SYSCALL_BIT + 199)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_tkill (__X32_SYSCALL_BIT + 200)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_time (__X32_SYSCALL_BIT + 201)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_futex (__X32_SYSCALL_BIT + 202)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_setaffinity (__X32_SYSCALL_BIT + 203)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_getaffinity (__X32_SYSCALL_BIT + 204)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_io_destroy (__X32_SYSCALL_BIT + 207)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_io_getevents (__X32_SYSCALL_BIT + 208)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_io_cancel (__X32_SYSCALL_BIT + 210)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_lookup_dcookie (__X32_SYSCALL_BIT + 212)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_epoll_create (__X32_SYSCALL_BIT + 213)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_remap_file_pages (__X32_SYSCALL_BIT + 216)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getdents64 (__X32_SYSCALL_BIT + 217)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_set_tid_address (__X32_SYSCALL_BIT + 218)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_restart_syscall (__X32_SYSCALL_BIT + 219)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_semtimedop (__X32_SYSCALL_BIT + 220)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fadvise64 (__X32_SYSCALL_BIT + 221)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timer_settime (__X32_SYSCALL_BIT + 223)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timer_gettime (__X32_SYSCALL_BIT + 224)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timer_getoverrun (__X32_SYSCALL_BIT + 225)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timer_delete (__X32_SYSCALL_BIT + 226)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clock_settime (__X32_SYSCALL_BIT + 227)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clock_gettime (__X32_SYSCALL_BIT + 228)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clock_getres (__X32_SYSCALL_BIT + 229)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clock_nanosleep (__X32_SYSCALL_BIT + 230)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_exit_group (__X32_SYSCALL_BIT + 231)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_epoll_wait (__X32_SYSCALL_BIT + 232)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_epoll_ctl (__X32_SYSCALL_BIT + 233)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_tgkill (__X32_SYSCALL_BIT + 234)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_utimes (__X32_SYSCALL_BIT + 235)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mbind (__X32_SYSCALL_BIT + 237)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_set_mempolicy (__X32_SYSCALL_BIT + 238)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_get_mempolicy (__X32_SYSCALL_BIT + 239)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_open (__X32_SYSCALL_BIT + 240)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_unlink (__X32_SYSCALL_BIT + 241)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_timedsend (__X32_SYSCALL_BIT + 242)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_timedreceive (__X32_SYSCALL_BIT + 243)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_getsetattr (__X32_SYSCALL_BIT + 245)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_add_key (__X32_SYSCALL_BIT + 248)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_request_key (__X32_SYSCALL_BIT + 249)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_keyctl (__X32_SYSCALL_BIT + 250)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ioprio_set (__X32_SYSCALL_BIT + 251)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ioprio_get (__X32_SYSCALL_BIT + 252)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_inotify_init (__X32_SYSCALL_BIT + 253)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_inotify_add_watch (__X32_SYSCALL_BIT + 254)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_inotify_rm_watch (__X32_SYSCALL_BIT + 255)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_migrate_pages (__X32_SYSCALL_BIT + 256)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_openat (__X32_SYSCALL_BIT + 257)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mkdirat (__X32_SYSCALL_BIT + 258)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mknodat (__X32_SYSCALL_BIT + 259)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fchownat (__X32_SYSCALL_BIT + 260)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_futimesat (__X32_SYSCALL_BIT + 261)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_newfstatat (__X32_SYSCALL_BIT + 262)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_unlinkat (__X32_SYSCALL_BIT + 263)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_renameat (__X32_SYSCALL_BIT + 264)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_linkat (__X32_SYSCALL_BIT + 265)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_symlinkat (__X32_SYSCALL_BIT + 266)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_readlinkat (__X32_SYSCALL_BIT + 267)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fchmodat (__X32_SYSCALL_BIT + 268)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_faccessat (__X32_SYSCALL_BIT + 269)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pselect6 (__X32_SYSCALL_BIT + 270)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ppoll (__X32_SYSCALL_BIT + 271)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_unshare (__X32_SYSCALL_BIT + 272)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_splice (__X32_SYSCALL_BIT + 275)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_tee (__X32_SYSCALL_BIT + 276)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sync_file_range (__X32_SYSCALL_BIT + 277)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_utimensat (__X32_SYSCALL_BIT + 280)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_epoll_pwait (__X32_SYSCALL_BIT + 281)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_signalfd (__X32_SYSCALL_BIT + 282)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timerfd_create (__X32_SYSCALL_BIT + 283)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_eventfd (__X32_SYSCALL_BIT + 284)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fallocate (__X32_SYSCALL_BIT + 285)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timerfd_settime (__X32_SYSCALL_BIT + 286)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timerfd_gettime (__X32_SYSCALL_BIT + 287)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_accept4 (__X32_SYSCALL_BIT + 288)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_signalfd4 (__X32_SYSCALL_BIT + 289)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_eventfd2 (__X32_SYSCALL_BIT + 290)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_epoll_create1 (__X32_SYSCALL_BIT + 291)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_dup3 (__X32_SYSCALL_BIT + 292)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pipe2 (__X32_SYSCALL_BIT + 293)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_inotify_init1 (__X32_SYSCALL_BIT + 294)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_perf_event_open (__X32_SYSCALL_BIT + 298)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fanotify_init (__X32_SYSCALL_BIT + 300)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_fanotify_mark (__X32_SYSCALL_BIT + 301)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_prlimit64 (__X32_SYSCALL_BIT + 302)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_name_to_handle_at (__X32_SYSCALL_BIT + 303)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_open_by_handle_at (__X32_SYSCALL_BIT + 304)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_clock_adjtime (__X32_SYSCALL_BIT + 305)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_syncfs (__X32_SYSCALL_BIT + 306)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setns (__X32_SYSCALL_BIT + 308)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getcpu (__X32_SYSCALL_BIT + 309)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_kcmp (__X32_SYSCALL_BIT + 312)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_finit_module (__X32_SYSCALL_BIT + 313)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_setattr (__X32_SYSCALL_BIT + 314)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sched_getattr (__X32_SYSCALL_BIT + 315)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_renameat2 (__X32_SYSCALL_BIT + 316)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_seccomp (__X32_SYSCALL_BIT + 317)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getrandom (__X32_SYSCALL_BIT + 318)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_memfd_create (__X32_SYSCALL_BIT + 319)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_kexec_file_load (__X32_SYSCALL_BIT + 320)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_bpf (__X32_SYSCALL_BIT + 321)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigaction (__X32_SYSCALL_BIT + 512)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigreturn (__X32_SYSCALL_BIT + 513)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ioctl (__X32_SYSCALL_BIT + 514)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_readv (__X32_SYSCALL_BIT + 515)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_writev (__X32_SYSCALL_BIT + 516)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_recvfrom (__X32_SYSCALL_BIT + 517)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sendmsg (__X32_SYSCALL_BIT + 518)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_recvmsg (__X32_SYSCALL_BIT + 519)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_execve (__X32_SYSCALL_BIT + 520)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_ptrace (__X32_SYSCALL_BIT + 521)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigpending (__X32_SYSCALL_BIT + 522)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigtimedwait (__X32_SYSCALL_BIT + 523)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_sigqueueinfo (__X32_SYSCALL_BIT + 524)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sigaltstack (__X32_SYSCALL_BIT + 525)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_timer_create (__X32_SYSCALL_BIT + 526)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_mq_notify (__X32_SYSCALL_BIT + 527)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_kexec_load (__X32_SYSCALL_BIT + 528)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_waitid (__X32_SYSCALL_BIT + 529)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_set_robust_list (__X32_SYSCALL_BIT + 530)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_get_robust_list (__X32_SYSCALL_BIT + 531)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_vmsplice (__X32_SYSCALL_BIT + 532)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_move_pages (__X32_SYSCALL_BIT + 533)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_preadv (__X32_SYSCALL_BIT + 534)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_pwritev (__X32_SYSCALL_BIT + 535)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_rt_tgsigqueueinfo (__X32_SYSCALL_BIT + 536)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_recvmmsg (__X32_SYSCALL_BIT + 537)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_sendmmsg (__X32_SYSCALL_BIT + 538)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_process_vm_readv (__X32_SYSCALL_BIT + 539)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_process_vm_writev (__X32_SYSCALL_BIT + 540)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_setsockopt (__X32_SYSCALL_BIT + 541)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_getsockopt (__X32_SYSCALL_BIT + 542)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_io_setup (__X32_SYSCALL_BIT + 543)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_io_submit (__X32_SYSCALL_BIT + 544)
./arch/x86/include/generated/uapi/asm/unistd_x32.h:#define __NR_execveat (__X32_SYSCALL_BIT + 545)
./arch/x86/include/uapi/asm/unistd.h:#define __X32_SYSCALL_BIT	0x40000000
./arch/x86/include/uapi/asm/vsyscall.h:#ifndef _UAPI_ASM_X86_VSYSCALL_H
./arch/x86/include/uapi/asm/vsyscall.h:#define _UAPI_ASM_X86_VSYSCALL_H
./arch/x86/include/uapi/asm/vsyscall.h:#define VSYSCALL_ADDR (-10UL << 20)
./arch/x86/include/uapi/asm/vsyscall.h:#endif /* _UAPI_ASM_X86_VSYSCALL_H */
./arch/x86/include/uapi/asm/msr-index.h:#define MSR_SYSCALL_MASK	0xc0000084 /* EFLAGS mask for syscall */
./arch/avr32/kernel/entry-avr32b.S:	bld	r1, TIF_SYSCALL_TRACE
./arch/avr32/kernel/entry-avr32b.S:	bld	r1, TIF_SYSCALL_TRACE
./arch/avr32/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/avr32/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE       0       /* syscall trace active */
./arch/avr32/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/avr32/include/asm/thread_info.h:#define _TIF_ALLWORK_MASK	(_TIF_WORK_MASK | _TIF_SYSCALL_TRACE)
./arch/m68k/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/m68k/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/m68k/coldfire/entry.S:	btst	#(TIF_SYSCALL_TRACE%8),%a0@(TINFO_FLAGS+(31-TIF_SYSCALL_TRACE)/8)
./arch/m68k/configs/m5407c3_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/m68k/configs/m5208evb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/m68k/configs/m5307c3_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/m68k/configs/m5275evb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/m68k/68360/entry.S:	btst	#(TIF_SYSCALL_TRACE%8),%a2@(TINFO_FLAGS+(31-TIF_SYSCALL_TRACE)/8)
./arch/m68k/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	15	/* syscall trace active */
./arch/m68k/68000/entry.S:	btst	#(TIF_SYSCALL_TRACE%8),%a2@(TINFO_FLAGS+(31-TIF_SYSCALL_TRACE)/8)
./arch/blackfin/kernel/sys_bfin.c:SYSCALL_DEFINE3(cacheflush, unsigned long, addr, unsigned long, len, int, op)
./arch/blackfin/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/blackfin/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/blackfin/mm/init.c:#if defined CONFIG_SYSCALL_TAB_L1
./arch/blackfin/configs/BF609-EZKIT_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/PNAV-10_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/BF527-AD7160-EVAL_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/CM-BF537E_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/DNP5370_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/blackfin/configs/BlackStamp_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/blackfin/configs/TCM-BF537_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/CM-BF533_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/CM-BF561_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/configs/CM-BF537U_defconfig:CONFIG_SYSCALL_TAB_L1=y
./arch/blackfin/Kconfig:config SYSCALL_TAB_L1
./arch/blackfin/mach-common/entry.S:	CC = BITTST(r7,TIF_SYSCALL_TRACE);
./arch/blackfin/mach-common/entry.S:#ifdef CONFIG_SYSCALL_TAB_L1
./arch/blackfin/include/asm/syscall.h:#ifndef __ASM_BLACKFIN_SYSCALL_H__
./arch/blackfin/include/asm/syscall.h:#define __ASM_BLACKFIN_SYSCALL_H__
./arch/blackfin/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/blackfin/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/unicore32/kernel/entry.S:	cand.a	ip, #_TIF_SYSCALL_TRACE		@ are we tracing syscalls?
./arch/unicore32/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/unicore32/include/asm/thread_info.h: *  TIF_SYSCALL_TRACE	- syscall trace active
./arch/unicore32/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	8
./arch/unicore32/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/hexagon/kernel/vm_entry.S: { memw(R0 + #_PT_SYSCALL_NR) = R2; \
./arch/hexagon/kernel/vm_entry.S:	{ memw(R0 + #_PT_SYSCALL_NR) = R2; \
./arch/hexagon/kernel/asm-offsets.c:	OFFSET(_PT_SYSCALL_NR, pt_regs, syscall_nr);
./arch/hexagon/kernel/traps.c:		if (unlikely(test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/hexagon/kernel/traps.c:		if (unlikely(test_thread_flag(TIF_SYSCALL_TRACE)))
./arch/hexagon/include/asm/syscall.h:#ifndef _ASM_HEXAGON_SYSCALL_H
./arch/hexagon/include/asm/syscall.h:#define _ASM_HEXAGON_SYSCALL_H
./arch/hexagon/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE       0       /* syscall trace active */
./arch/hexagon/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE      (1 << TIF_SYSCALL_TRACE)
./arch/hexagon/include/asm/thread_info.h:/* work to do on interrupt/exception return - All but TIF_SYSCALL_TRACE */
./arch/hexagon/include/asm/thread_info.h:#define _TIF_WORK_MASK          (0x0000FFFF & ~_TIF_SYSCALL_TRACE)
./arch/parisc/kernel/syscall.S:	ldi	_TIF_SYSCALL_TRACE_MASK, %r19
./arch/parisc/kernel/syscall.S:#define SYSCALL_TABLE_64BIT
./arch/parisc/kernel/entry.S:	ldi	_TIF_SYSCALL_TRACE_MASK,%r2
./arch/parisc/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/parisc/kernel/ptrace.c:	if (stepping || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/parisc/kernel/syscall_table.S:#if defined(CONFIG_64BIT) && !defined(SYSCALL_TABLE_64BIT)
./arch/parisc/kernel/syscall_table.S:#elif defined(CONFIG_64BIT) && defined(SYSCALL_TABLE_64BIT)
./arch/parisc/include/asm/syscall.h:#ifndef _ASM_PARISC_SYSCALL_H_
./arch/parisc/include/asm/syscall.h:#define _ASM_PARISC_SYSCALL_H_
./arch/parisc/include/asm/syscall.h:#endif /*_ASM_PARISC_SYSCALL_H_*/
./arch/parisc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/parisc/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	7	/* syscall auditing active */
./arch/parisc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/parisc/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/parisc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE_MASK (_TIF_SYSCALL_TRACE | _TIF_SINGLESTEP |	\
./arch/parisc/include/asm/thread_info.h:				 _TIF_BLOCKSTEP | _TIF_SYSCALL_AUDIT | \
./arch/openrisc/kernel/head.S:#define SYSCALL_SR  (SPR_SR_DME | SPR_SR_IME | SPR_SR_DCE | SPR_SR_ICE | SPR_SR_IEE | SPR_SR_TEE | SPR_SR_SM)
./arch/openrisc/kernel/entry.S:	/* If TIF_SYSCALL_TRACE is set, then we want to do syscall tracing */
./arch/openrisc/kernel/entry.S:	l.andi	r30,r30,_TIF_SYSCALL_TRACE
./arch/openrisc/kernel/entry.S:	 * _TIF_SYSCALL_TRACE flag from _syscall_check_trace_enter above...
./arch/openrisc/kernel/ptrace.c:	clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./arch/openrisc/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/openrisc/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/openrisc/include/asm/syscall.h:#ifndef __ASM_OPENRISC_SYSCALL_H__
./arch/openrisc/include/asm/syscall.h:#define __ASM_OPENRISC_SYSCALL_H__
./arch/openrisc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/openrisc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT  8       /* for ftrace syscall instrumentation */
./arch/openrisc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/openrisc/include/asm/thread_info.h:#define _TIF_WORK_MASK (0xff & ~(_TIF_SYSCALL_TRACE|_TIF_SINGLESTEP))
./arch/score/kernel/entry.S:	li	r8, _TIF_SYSCALL_TRACE
./arch/score/kernel/entry.S:	li	r9, _TIF_SYSCALL_TRACE
./arch/score/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/score/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/score/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/score/include/uapi/asm/unistd.h:#define __ARCH_WANT_SYSCALL_NO_AT
./arch/score/include/uapi/asm/unistd.h:#define __ARCH_WANT_SYSCALL_NO_FLAGS
./arch/score/include/uapi/asm/unistd.h:#define __ARCH_WANT_SYSCALL_OFF_T
./arch/score/include/uapi/asm/unistd.h:#define __ARCH_WANT_SYSCALL_DEPRECATED
./arch/m32r/kernel/entry.S:#define SYSCALL_NR(reg)		@(0x38,reg)
./arch/m32r/kernel/entry.S:	st	r7, SYSCALL_NR(sp)	; syscall_nr
./arch/m32r/kernel/entry.S:	and3	r4, r9, #_TIF_SYSCALL_TRACE
./arch/m32r/kernel/entry.S:	ld	r7, SYSCALL_NR(sp)
./arch/m32r/kernel/entry.S:	and3	r4, r9, #_TIF_SYSCALL_TRACE
./arch/m32r/kernel/ptrace.c:	clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./arch/m32r/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/m32r/include/asm/syscall.h:#ifndef _ASM_M32R_SYSCALL_H
./arch/m32r/include/asm/syscall.h:#define _ASM_M32R_SYSCALL_H
./arch/m32r/include/asm/syscall.h:#define SYSCALL_VECTOR          "2"
./arch/m32r/include/asm/syscall.h:#define SYSCALL_VECTOR_ADDRESS  "0xa0"
./arch/m32r/include/asm/syscall.h:#endif /* _ASM_M32R_SYSCALL_H */
./arch/m32r/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/m32r/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/m32r/include/asm/thread_info.h:#define _TIF_ALLWORK_MASK	(_TIF_WORK_MASK | _TIF_SYSCALL_TRACE)
./arch/mn10300/kernel/entry.S:	btst	_TIF_SYSCALL_TRACE,(TI_flags,a2)
./arch/mn10300/kernel/entry.S:	btst	_TIF_SYSCALL_TRACE,d2
./arch/mn10300/include/asm/syscall.h:#ifndef _ASM_SYSCALL_H
./arch/mn10300/include/asm/syscall.h:#define _ASM_SYSCALL_H
./arch/mn10300/include/asm/syscall.h:#endif /* _ASM_SYSCALL_H */
./arch/mn10300/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/mn10300/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	+(1 << TIF_SYSCALL_TRACE)
./arch/sh/kernel/ptrace_64.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/sh/kernel/ptrace_64.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sh/kernel/ptrace_64.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sh/kernel/ptrace_64.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/sh/kernel/entry-common.S:	tst	#(_TIF_WORK_SYSCALL_MASK & 0xff), r0
./arch/sh/kernel/entry-common.S:	mov	#(_TIF_WORK_SYSCALL_MASK & 0xff), r10
./arch/sh/kernel/entry-common.S:	mov	#(_TIF_WORK_SYSCALL_MASK >> 8), r9
./arch/sh/kernel/cpu/sh5/entry.S:#define FSYSCALL_ID	2
./arch/sh/kernel/cpu/sh5/entry.S:#define FRAME_RBASE	(FRAME_SBASE+(3*8))	/* SYSCALL_ID - SSR - SPC */
./arch/sh/kernel/cpu/sh5/entry.S:	st.q	SP, FRAME_S(FSYSCALL_ID), r62
./arch/sh/kernel/cpu/sh5/entry.S:	/* Ignore FSYSCALL_ID */
./arch/sh/kernel/cpu/sh5/entry.S:	st.q    r3, FRAME_S(FSYSCALL_ID), r5 	/* ID (0x1yzzzz) -> stack */
./arch/sh/kernel/cpu/sh5/entry.S:	movi	_TIF_WORK_SYSCALL_MASK, r6
./arch/sh/kernel/cpu/sh5/entry.S:	ld.q	SP, FRAME_S(FSYSCALL_ID), r5
./arch/sh/kernel/ptrace_32.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/sh/kernel/ptrace_32.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sh/kernel/ptrace_32.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/sh/kernel/ptrace_32.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/sh/configs/se7724_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/edosk7760_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/sdk7786_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/sh7785lcr_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/rsk7201_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/magicpanelr2_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/se7712_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/sh7785lcr_32bit_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/ap325rxa_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/sdk7780_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/ecovec24_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/polaris_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/urquell_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/rsk7269_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/configs/rsk7203_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/sh/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/sh/include/asm/syscall.h:#ifndef __ASM_SH_SYSCALL_H
./arch/sh/include/asm/syscall.h:#define __ASM_SH_SYSCALL_H
./arch/sh/include/asm/syscall.h:#endif /* __ASM_SH_SYSCALL_H */
./arch/sh/include/asm/syscall_64.h:#ifndef __ASM_SH_SYSCALL_64_H
./arch/sh/include/asm/syscall_64.h:#define __ASM_SH_SYSCALL_64_H
./arch/sh/include/asm/syscall_64.h:#endif /* __ASM_SH_SYSCALL_64_H */
./arch/sh/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/sh/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	5	/* syscall auditing active */
./arch/sh/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	8	/* for ftrace syscall instrumentation */
./arch/sh/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/sh/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/sh/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1 << TIF_SYSCALL_TRACEPOINT)
./arch/sh/include/asm/thread_info.h:#define _TIF_WORK_SYSCALL_MASK	(_TIF_SYSCALL_TRACE | _TIF_SINGLESTEP | \
./arch/sh/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SECCOMP    | \
./arch/sh/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT)
./arch/sh/include/asm/thread_info.h:#define _TIF_ALLWORK_MASK	(_TIF_SYSCALL_TRACE | _TIF_SIGPENDING      | \
./arch/sh/include/asm/thread_info.h:				 _TIF_NEED_RESCHED  | _TIF_SYSCALL_AUDIT   | \
./arch/sh/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT)
./arch/sh/include/asm/thread_info.h:#define _TIF_WORK_MASK		(_TIF_ALLWORK_MASK & ~(_TIF_SYSCALL_TRACE | \
./arch/sh/include/asm/thread_info.h:				 _TIF_SYSCALL_AUDIT | _TIF_SINGLESTEP))
./arch/sh/include/asm/elf.h:#define VSYSCALL_AUX_ENT					\
./arch/sh/include/asm/elf.h:#define VSYSCALL_AUX_ENT	NEW_AUX_ENT(AT_IGNORE, 0)
./arch/sh/include/asm/elf.h:	VSYSCALL_AUX_ENT;					\
./arch/sh/include/asm/syscall_32.h:#ifndef __ASM_SH_SYSCALL_32_H
./arch/sh/include/asm/syscall_32.h:#define __ASM_SH_SYSCALL_32_H
./arch/sh/include/asm/syscall_32.h:#endif /* __ASM_SH_SYSCALL_32_H */
./arch/sh/include/asm/ftrace.h:#define FTRACE_SYSCALL_MAX	NR_syscalls
./arch/powerpc/kernel/vdso32/datapage.S:	addi	r3,r3,CFG_SYSCALL_MAP32
./arch/powerpc/kernel/systbl.S:#define SYSCALL_SPU(func)	SYSCALL(func)
./arch/powerpc/kernel/entry_64.S:	andi.	r11,r10,_TIF_SYSCALL_T_OR_A
./arch/powerpc/kernel/entry_64.S:	andi.	r0,r9,(_TIF_SYSCALL_T_OR_A|_TIF_SINGLESTEP|_TIF_USER_WORK_MASK|_TIF_PERSYSCALL_MASK)
./arch/powerpc/kernel/entry_64.S:2:	andi.	r0,r9,(_TIF_PERSYSCALL_MASK)
./arch/powerpc/kernel/entry_64.S:	li	r11,_TIF_PERSYSCALL_MASK
./arch/powerpc/kernel/entry_64.S:	andi.	r0,r9,(_TIF_SYSCALL_T_OR_A|_TIF_SINGLESTEP)
./arch/powerpc/kernel/asm-offsets.c:	DEFINE(CFG_SYSCALL_MAP32, offsetof(struct vdso_data, syscall_map_32));
./arch/powerpc/kernel/asm-offsets.c:	DEFINE(CFG_SYSCALL_MAP64, offsetof(struct vdso_data, syscall_map_64));
./arch/powerpc/kernel/exceptions-64s.S:#define SYSCALL_PSERIES_1 					\
./arch/powerpc/kernel/exceptions-64s.S:#define SYSCALL_PSERIES_2_RFID 					\
./arch/powerpc/kernel/exceptions-64s.S:#define SYSCALL_PSERIES_3					\
./arch/powerpc/kernel/exceptions-64s.S:#define SYSCALL_PSERIES_2_DIRECT				\
./arch/powerpc/kernel/exceptions-64s.S:#define SYSCALL_PSERIES_2_DIRECT				\
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_1
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_2_RFID
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_3
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_1
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_2_DIRECT
./arch/powerpc/kernel/exceptions-64s.S:	SYSCALL_PSERIES_3
./arch/powerpc/kernel/entry_32.S:	andi.	r11,r11,_TIF_SYSCALL_T_OR_A
./arch/powerpc/kernel/entry_32.S:	andi.	r0,r9,(_TIF_SYSCALL_T_OR_A|_TIF_SINGLESTEP|_TIF_USER_WORK_MASK|_TIF_PERSYSCALL_MASK)
./arch/powerpc/kernel/entry_32.S:2:	andi.	r0,r9,(_TIF_PERSYSCALL_MASK)
./arch/powerpc/kernel/entry_32.S:	li	r11,_TIF_PERSYSCALL_MASK
./arch/powerpc/kernel/entry_32.S:	andi.	r0,r9,(_TIF_SYSCALL_T_OR_A|_TIF_SINGLESTEP)
./arch/powerpc/kernel/systbl_chk.c:#define SYSCALL_SPU(func)	SYSCALL(func)
./arch/powerpc/kernel/vdso64/datapage.S:	addi	r3,r3,CFG_SYSCALL_MAP64
./arch/powerpc/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE) &&
./arch/powerpc/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/powerpc/kernel/ptrace.c:	if (unlikely(test_thread_flag(TIF_SYSCALL_TRACEPOINT)))
./arch/powerpc/kernel/ptrace.c:	if (step || test_thread_flag(TIF_SYSCALL_TRACE))
./arch/powerpc/configs/mpc86xx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/g5_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/mpc8272_ads_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/pmac32_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/ppc6xx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/ep8248e_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/sbc8641d_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/mpc8610_hpcd_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/gef_sbc310_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/gef_sbc610_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/mpc8641_hpcn_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/86xx/gef_ppc9a_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/gamecube_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc837x_mds_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc836x_mds_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc834x_itx_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc836x_rdk_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc837x_rdb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc832x_mds_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc8315_rdb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc834x_itxgp_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc834x_mds_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc832x_rdb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/sbc834x_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/83xx/mpc8313_rdb_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/acadia_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/ep405_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/klondike_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/virtex_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/obs600_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/makalu_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/walnut_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/40x/kilauea_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/mpc85xx_cds_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/mpc8540_ads_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/tqm8548_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/mpc8560_ads_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/tqm8560_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/socrates_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/tqm8555_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/tqm8540_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/ksi8560_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/sbc8548_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/tqm8541_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/stx_gp3_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/85xx/ge_imp3a_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/icon_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/canyonlands_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/sequoia_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/warp_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/iss476-smp_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/katmai_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/arches_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/eiger_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/virtex5_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/rainier_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/redwood_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/sam440ep_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/ebony_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/taishan_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/currituck_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/44x/bamboo_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/mpc7448_hpc2_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/linkstation_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/amigaone_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/chrp32_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/storcenter_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/pq2fads_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/ppc44x_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/c2k_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/wii_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/configs/ppc40x_defconfig:CONFIG_SYSCTL_SYSCALL_CHECK=y
./arch/powerpc/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/powerpc/Kconfig:	select GENERIC_TIME_VSYSCALL_OLD
./arch/powerpc/kvm/timing.h:	case SYSCALL_EXITS:
./arch/powerpc/kvm/booke.c:		kvmppc_account_exit(vcpu, SYSCALL_EXITS);
./arch/powerpc/kvm/timing.c:	[SYSCALL_EXITS] =           "SYSCALL",
./arch/powerpc/platforms/cell/spu_syscalls.c:SYSCALL_DEFINE4(spu_create, const char __user *, name, unsigned int, flags,
./arch/powerpc/platforms/cell/spu_callbacks.c:#define SYSCALL_SPU(func)	sys_##func,
./arch/powerpc/include/asm/linkage.h:#define SYSCALL_ALIAS(alias, name)					\
./arch/powerpc/include/asm/syscall.h:#ifndef _ASM_SYSCALL_H
./arch/powerpc/include/asm/syscall.h:#define _ASM_SYSCALL_H	1
./arch/powerpc/include/asm/syscall.h:#endif	/* _ASM_SYSCALL_H */
./arch/powerpc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/powerpc/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	7	/* syscall auditing active */
./arch/powerpc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	15	/* syscall tracepoint instrumentation */
./arch/powerpc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/powerpc/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/powerpc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1<<TIF_SYSCALL_TRACEPOINT)
./arch/powerpc/include/asm/thread_info.h:#define _TIF_SYSCALL_T_OR_A	(_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | \
./arch/powerpc/include/asm/thread_info.h:				 _TIF_SECCOMP | _TIF_SYSCALL_TRACEPOINT | \
./arch/powerpc/include/asm/thread_info.h:#define _TIF_PERSYSCALL_MASK	(_TIF_RESTOREALL|_TIF_NOERROR)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(read)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(write)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(close)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(waitpid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(creat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(link)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(unlink)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(chdir)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mknod)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(chmod)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(lchown)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getpid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(alarm)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(access)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(nice)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sync)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(kill)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(rename)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mkdir)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(rmdir)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(dup)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(pipe)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(brk)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(geteuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getegid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setpgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(umask)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(chroot)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(dup2)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getppid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getpgrp)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setsid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sgetmask)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(ssetmask)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setreuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setregid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sethostname)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getgroups)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setgroups)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(symlink)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(readlink)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mmap)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(munmap)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fchmod)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fchown)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getpriority)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setpriority)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(syslog)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(vhangup)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fsync)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setdomainname)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(newuname)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mprotect)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getpgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fchdir)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(bdflush)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sysfs)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setfsuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setfsgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(llseek)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(flock)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(msync)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getsid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fdatasync)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mlock)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(munlock)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mlockall)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(munlockall)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_setparam)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_getparam)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_setscheduler)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_getscheduler)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_yield)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_get_priority_max)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_get_priority_min)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mremap)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setresuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getresuid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(poll)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setresgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getresgid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(prctl)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(chown)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getcwd)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(capget)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(capset)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getdents64)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(pivot_root)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(madvise)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mincore)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(gettid)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(tkill)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(lsetxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fsetxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(lgetxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fgetxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(listxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(llistxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(flistxattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(removexattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(lremovexattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fremovexattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(io_destroy)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(io_cancel)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(epoll_create)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(epoll_ctl)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(epoll_wait)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(remap_file_pages)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(timer_getoverrun)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(timer_delete)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(tgkill)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(unshare)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(splice)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(tee)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mkdirat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(mknodat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fchownat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(unlinkat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(renameat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(linkat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(symlinkat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(readlinkat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(fchmodat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(faccessat)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getcpu)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(timerfd_create)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(eventfd)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(eventfd2)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(epoll_create1)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(dup3)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(pipe2)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(perf_event_open)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(prlimit64)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(socket)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(bind)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(connect)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(listen)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(accept)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getsockname)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getpeername)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(socketpair)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(send)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sendto)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(shutdown)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(accept4)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(name_to_handle_at)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(syncfs)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(setns)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_setattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(sched_getattr)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(renameat2)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(seccomp)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(getrandom)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(memfd_create)
./arch/powerpc/include/asm/systbl.h:SYSCALL_SPU(bpf)
./arch/powerpc/include/asm/vdso_datapage.h:#define SYSCALL_MAP_SIZE      ((__NR_syscalls + 31) / 32)
./arch/powerpc/include/asm/vdso_datapage.h:   	__u32 syscall_map_64[SYSCALL_MAP_SIZE]; /* map of syscalls  */
./arch/powerpc/include/asm/vdso_datapage.h:   	__u32 syscall_map_32[SYSCALL_MAP_SIZE]; /* map of syscalls */
./arch/powerpc/include/asm/vdso_datapage.h:   	__u32 syscall_map_32[SYSCALL_MAP_SIZE]; /* map of syscalls */
./arch/powerpc/include/asm/ftrace.h:#define ARCH_HAS_SYSCALL_MATCH_SYM_NAME
./arch/powerpc/include/asm/kvm_host.h:	SYSCALL_EXITS,
./arch/cris/arch-v10/kernel/entry.S:	btstq   TIF_SYSCALL_TRACE, $r0
./arch/cris/arch-v10/kernel/entry.S:	btstq	TIF_SYSCALL_TRACE, $r1
./arch/cris/arch-v10/kernel/ptrace.c:       clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);
./arch/cris/arch-v10/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/cris/arch-v32/kernel/entry.S:	btstq	TIF_SYSCALL_TRACE, $r0
./arch/cris/arch-v32/kernel/entry.S:	btstq	TIF_SYSCALL_TRACE, $r1
./arch/cris/arch-v32/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/cris/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/cris/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/um/kernel/signal.c:	if (PT_REGS_SYSCALL_NR(regs) >= 0) {
./arch/um/kernel/signal.c:		switch (PT_REGS_SYSCALL_RET(regs)) {
./arch/um/kernel/signal.c:			PT_REGS_SYSCALL_RET(regs) = -EINTR;
./arch/um/kernel/signal.c:				PT_REGS_SYSCALL_RET(regs) = -EINTR;
./arch/um/kernel/signal.c:			PT_REGS_ORIG_SYSCALL(regs) = PT_REGS_SYSCALL_NR(regs);
./arch/um/kernel/signal.c:	if (!handled_sig && (PT_REGS_SYSCALL_NR(regs) >= 0)) {
./arch/um/kernel/signal.c:		switch (PT_REGS_SYSCALL_RET(regs)) {
./arch/um/kernel/signal.c:			PT_REGS_ORIG_SYSCALL(regs) = PT_REGS_SYSCALL_NR(regs);
./arch/um/kernel/skas/syscall.c:	syscall = UPT_SYSCALL_NR(r);
./arch/um/kernel/skas/syscall.c:	PT_REGS_SET_SYSCALL_RETURN(regs, result);
./arch/um/kernel/mem.c:#ifdef CONFIG_ARCH_REUSE_HOST_VSYSCALL_AREA
./arch/um/kernel/ptrace.c: * PT_PTRACED vs TIF_SYSCALL_TRACE for syscall tracing check
./arch/um/kernel/ptrace.c:	audit_syscall_entry(UPT_SYSCALL_NR(&regs->regs),
./arch/um/kernel/ptrace.c:			    UPT_SYSCALL_ARG1(&regs->regs),
./arch/um/kernel/ptrace.c:			    UPT_SYSCALL_ARG2(&regs->regs),
./arch/um/kernel/ptrace.c:			    UPT_SYSCALL_ARG3(&regs->regs),
./arch/um/kernel/ptrace.c:			    UPT_SYSCALL_ARG4(&regs->regs));
./arch/um/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/um/kernel/ptrace.c:	if (!test_thread_flag(TIF_SYSCALL_TRACE))
./arch/um/kernel/process.c:		PT_REGS_SET_SYSCALL_RETURN(&p->thread.regs, 0);
./arch/um/sys-ppc/shared/sysdep/syscalls.h:        (*sys_call_table[syscall])(UM_SYSCALL_ARG1(&regs), \
./arch/um/sys-ppc/shared/sysdep/syscalls.h:			           UM_SYSCALL_ARG2(&regs), \
./arch/um/sys-ppc/shared/sysdep/syscalls.h:				   UM_SYSCALL_ARG3(&regs), \
./arch/um/sys-ppc/shared/sysdep/syscalls.h:				   UM_SYSCALL_ARG4(&regs), \
./arch/um/sys-ppc/shared/sysdep/syscalls.h:				   UM_SYSCALL_ARG5(&regs), \
./arch/um/sys-ppc/shared/sysdep/syscalls.h:				   UM_SYSCALL_ARG6(&regs))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_RET(r) UM_REG(r, PT_R3)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_NR(r) UM_REG(r, PT_R0)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG1(r) UM_REG(r, PT_ORIG_R3)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG2(r) UM_REG(r, PT_R4)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG3(r) UM_REG(r, PT_R5)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG4(r) UM_REG(r, PT_R6)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG5(r) UM_REG(r, PT_R7)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG6(r) UM_REG(r, PT_R8)
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_NR_OFFSET (PT_R0 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_RET_OFFSET (PT_R3 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG1_OFFSET (PT_R3 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG2_OFFSET (PT_R4 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG3_OFFSET (PT_R5 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG4_OFFSET (PT_R6 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG5_OFFSET (PT_R7 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SYSCALL_ARG6_OFFSET (PT_R8 * sizeof(PPC_REG))
./arch/um/sys-ppc/shared/sysdep/ptrace.h:#define UM_SET_SYSCALL_RETURN(_regs, result)	        \
./arch/um/sys-ppc/shared/sysdep/ptrace.h:		UM_SYSCALL_RET((_regs)) = -result;	\
./arch/um/sys-ppc/shared/sysdep/ptrace.h:		UM_SYSCALL_RET((_regs)) = result;	\
./arch/um/os-Linux/skas/process.c:	UPT_SYSCALL_NR(regs) = PT_SYSCALL_NR(regs->gp);
./arch/um/os-Linux/skas/process.c:		err = ptrace(PTRACE_POKEUSER, pid, PT_SYSCALL_NR_OFFSET,
./arch/um/os-Linux/skas/process.c:		UPT_SYSCALL_NR(regs) = -1; /* Assume: It's not a syscall */
./arch/um/os-Linux/skas/process.c:			if (PT_SYSCALL_NR_OFFSET != PT_SYSCALL_RET_OFFSET)
./arch/um/os-Linux/skas/process.c:				PT_SYSCALL_NR(regs->gp) = -1;
./arch/um/os-Linux/user_syms.c:#ifdef CONFIG_ARCH_REUSE_HOST_VSYSCALL_AREA
./arch/um/os-Linux/Makefile:obj-$(CONFIG_ARCH_REUSE_HOST_VSYSCALL_AREA) += elf_aux.o
./arch/um/os-Linux/start_up.c:	if (PT_SYSCALL_NR(regs) != __NR_getpid) {
./arch/um/os-Linux/start_up.c:			  "expected %d...", PT_SYSCALL_NR(regs), __NR_getpid);
./arch/um/os-Linux/start_up.c:	n = ptrace(PTRACE_POKEUSER, pid, PT_SYSCALL_RET_OFFSET, os_getpid());
./arch/um/os-Linux/start_up.c:			n = ptrace(PTRACE_POKEUSER, pid, PT_SYSCALL_RET_OFFSET,
./arch/um/os-Linux/start_up.c:		syscall = ptrace(PTRACE_PEEKUSER, pid, PT_SYSCALL_NR_OFFSET,
./arch/um/os-Linux/start_up.c:			n = ptrace(PTRACE_POKEUSER, pid, PT_SYSCALL_NR_OFFSET,
./arch/um/os-Linux/main.c:#ifdef CONFIG_ARCH_REUSE_HOST_VSYSCALL_AREA
./arch/um/include/asm/ptrace-generic.h:#define PT_REGS_SYSCALL_NR(r) UPT_SYSCALL_NR(&(r)->regs)
./arch/um/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/um/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	6
./arch/um/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/um/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/arc/kernel/entry.S:	btst r10, TIF_SYSCALL_TRACE
./arch/arc/kernel/entry.S:	btst r10, TIF_SYSCALL_TRACE
./arch/arc/kernel/signal.c:SYSCALL_DEFINE0(rt_sigreturn)
./arch/arc/kernel/process.c:SYSCALL_DEFINE1(arc_settls, void *, user_tls_data_ptr)
./arch/arc/kernel/process.c:SYSCALL_DEFINE0(arc_gettls)
./arch/arc/mm/cache_arc700.c:SYSCALL_DEFINE3(cacheflush, uint32_t, start, uint32_t, sz, uint32_t, flags)
./arch/arc/include/asm/syscall.h:#ifndef _ASM_ARC_SYSCALL_H
./arch/arc/include/asm/syscall.h:#define _ASM_ARC_SYSCALL_H  1
./arch/arc/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	4	/* syscall auditing active */
./arch/arc/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	15	/* syscall trace active */
./arch/arc/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1<<TIF_SYSCALL_TRACE)
./arch/arc/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1<<TIF_SYSCALL_AUDIT)
./arch/arc/include/asm/thread_info.h: * _TIF_ALLWORK_MASK includes SYSCALL_TRACE, but we don't need it.
./arch/arc/include/asm/thread_info.h: * SYSCALL_TRACE is anways seperately/unconditionally tested right after a
./arch/frv/kernel/entry.S:	andicc		gr4,#_TIF_SYSCALL_TRACE,gr0,icc0
./arch/frv/kernel/entry.S:	andicc.p	gr4,#_TIF_SYSCALL_TRACE,gr0,icc0
./arch/frv/include/asm/syscall.h:#ifndef _ASM_SYSCALL_H
./arch/frv/include/asm/syscall.h:#define _ASM_SYSCALL_H
./arch/frv/include/asm/syscall.h:#endif /* _ASM_SYSCALL_H */
./arch/frv/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
./arch/frv/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/frv/include/asm/thread_info.h:#define _TIF_ALLWORK_MASK	(_TIF_WORK_MASK | _TIF_SYSCALL_TRACE)
./arch/arm64/kernel/entry.S:	tst	x16, #_TIF_SYSCALL_WORK
./arch/arm64/kernel/ptrace.c:	PTRACE_SYSCALL_ENTER = 0,
./arch/arm64/kernel/ptrace.c:	PTRACE_SYSCALL_EXIT,
./arch/arm64/kernel/ptrace.c:	if (dir == PTRACE_SYSCALL_EXIT)
./arch/arm64/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/arm64/kernel/ptrace.c:		tracehook_report_syscall(regs, PTRACE_SYSCALL_ENTER);
./arch/arm64/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/arm64/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./arch/arm64/kernel/ptrace.c:	if (test_thread_flag(TIF_SYSCALL_TRACE))
./arch/arm64/kernel/ptrace.c:		tracehook_report_syscall(regs, PTRACE_SYSCALL_EXIT);
./arch/arm64/Kconfig:	select HAVE_SYSCALL_TRACEPOINTS
./arch/arm64/include/asm/syscall.h:#ifndef __ASM_SYSCALL_H
./arch/arm64/include/asm/syscall.h:#define __ASM_SYSCALL_H
./arch/arm64/include/asm/syscall.h:#define SYSCALL_MAX_ARGS 6
./arch/arm64/include/asm/syscall.h:	if (i + n > SYSCALL_MAX_ARGS) {
./arch/arm64/include/asm/syscall.h:		unsigned long *args_bad = args + SYSCALL_MAX_ARGS - i;
./arch/arm64/include/asm/syscall.h:		unsigned int n_bad = n + i - SYSCALL_MAX_ARGS;
./arch/arm64/include/asm/syscall.h:			   __func__, i + n, SYSCALL_MAX_ARGS);
./arch/arm64/include/asm/syscall.h:	if (i + n > SYSCALL_MAX_ARGS) {
./arch/arm64/include/asm/syscall.h:			   __func__, i + n, SYSCALL_MAX_ARGS);
./arch/arm64/include/asm/syscall.h:		n = SYSCALL_MAX_ARGS - i;
./arch/arm64/include/asm/syscall.h:#endif	/* __ASM_SYSCALL_H */
./arch/arm64/include/asm/thread_info.h: *  TIF_SYSCALL_TRACE	- syscall trace active
./arch/arm64/include/asm/thread_info.h: *  TIF_SYSCALL_TRACEPOINT - syscall tracepoint for ftrace
./arch/arm64/include/asm/thread_info.h: *  TIF_SYSCALL_AUDIT	- syscall auditing
./arch/arm64/include/asm/thread_info.h:#define TIF_SYSCALL_TRACE	8
./arch/arm64/include/asm/thread_info.h:#define TIF_SYSCALL_AUDIT	9
./arch/arm64/include/asm/thread_info.h:#define TIF_SYSCALL_TRACEPOINT	10
./arch/arm64/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)
./arch/arm64/include/asm/thread_info.h:#define _TIF_SYSCALL_AUDIT	(1 << TIF_SYSCALL_AUDIT)
./arch/arm64/include/asm/thread_info.h:#define _TIF_SYSCALL_TRACEPOINT	(1 << TIF_SYSCALL_TRACEPOINT)
./arch/arm64/include/asm/thread_info.h:#define _TIF_SYSCALL_WORK	(_TIF_SYSCALL_TRACE | _TIF_SYSCALL_AUDIT | \
./arch/arm64/include/asm/thread_info.h:				 _TIF_SYSCALL_TRACEPOINT | _TIF_SECCOMP | \
./ipc/compat_mq.c:COMPAT_SYSCALL_DEFINE4(mq_open, const char __user *, u_name,
./ipc/compat_mq.c:COMPAT_SYSCALL_DEFINE5(mq_timedsend, mqd_t, mqdes,
./ipc/compat_mq.c:COMPAT_SYSCALL_DEFINE5(mq_timedreceive, mqd_t, mqdes,
./ipc/compat_mq.c:COMPAT_SYSCALL_DEFINE2(mq_notify, mqd_t, mqdes,
./ipc/compat_mq.c:COMPAT_SYSCALL_DEFINE3(mq_getsetattr, mqd_t, mqdes,
./ipc/compat.c:COMPAT_SYSCALL_DEFINE6(ipc, u32, call, int, first, int, second,
./ipc/compat.c:COMPAT_SYSCALL_DEFINE4(semctl, int, semid, int, semnum, int, cmd, int, arg)
./ipc/compat.c:COMPAT_SYSCALL_DEFINE4(msgsnd, int, msqid, compat_uptr_t, msgp,
./ipc/compat.c:COMPAT_SYSCALL_DEFINE5(msgrcv, int, msqid, compat_uptr_t, msgp,
./ipc/compat.c:COMPAT_SYSCALL_DEFINE3(msgctl, int, first, int, second, void __user *, uptr)
./ipc/compat.c:COMPAT_SYSCALL_DEFINE3(shmat, int, shmid, compat_uptr_t, shmaddr, int, shmflg)
./ipc/compat.c:COMPAT_SYSCALL_DEFINE3(shmctl, int, first, int, second, void __user *, uptr)
./ipc/compat.c:COMPAT_SYSCALL_DEFINE4(semtimedop, int, semid, struct sembuf __user *, tsems,
./ipc/shm.c:SYSCALL_DEFINE3(shmget, key_t, key, size_t, size, int, shmflg)
./ipc/shm.c:SYSCALL_DEFINE3(shmctl, int, shmid, int, cmd, struct shmid_ds __user *, buf)
./ipc/shm.c:SYSCALL_DEFINE3(shmat, int, shmid, char __user *, shmaddr, int, shmflg)
./ipc/shm.c:SYSCALL_DEFINE1(shmdt, char __user *, shmaddr)
./ipc/mqueue.c:SYSCALL_DEFINE4(mq_open, const char __user *, u_name, int, oflag, umode_t, mode,
./ipc/mqueue.c:SYSCALL_DEFINE1(mq_unlink, const char __user *, u_name)
./ipc/mqueue.c:SYSCALL_DEFINE5(mq_timedsend, mqd_t, mqdes, const char __user *, u_msg_ptr,
./ipc/mqueue.c:SYSCALL_DEFINE5(mq_timedreceive, mqd_t, mqdes, char __user *, u_msg_ptr,
./ipc/mqueue.c:SYSCALL_DEFINE2(mq_notify, mqd_t, mqdes,
./ipc/mqueue.c:SYSCALL_DEFINE3(mq_getsetattr, mqd_t, mqdes,
./ipc/msg.c:SYSCALL_DEFINE2(msgget, key_t, key, int, msgflg)
./ipc/msg.c:SYSCALL_DEFINE3(msgctl, int, msqid, int, cmd, struct msqid_ds __user *, buf)
./ipc/msg.c:SYSCALL_DEFINE4(msgsnd, int, msqid, struct msgbuf __user *, msgp, size_t, msgsz,
./ipc/msg.c:SYSCALL_DEFINE5(msgrcv, int, msqid, struct msgbuf __user *, msgp, size_t, msgsz,
./ipc/sem.c:SYSCALL_DEFINE3(semget, key_t, key, int, nsems, int, semflg)
./ipc/sem.c:SYSCALL_DEFINE4(semctl, int, semid, int, semnum, int, cmd, unsigned long, arg)
./ipc/sem.c:SYSCALL_DEFINE4(semtimedop, int, semid, struct sembuf __user *, tsops,
./ipc/sem.c:SYSCALL_DEFINE3(semop, int, semid, struct sembuf __user *, tsops,
./ipc/syscall.c:SYSCALL_DEFINE6(ipc, unsigned int, call, int, first, unsigned long, second,
./fs/readdir.c:SYSCALL_DEFINE3(old_readdir, unsigned int, fd,
./fs/readdir.c:SYSCALL_DEFINE3(getdents, unsigned int, fd,
./fs/readdir.c:SYSCALL_DEFINE3(getdents64, unsigned int, fd,
./fs/eventfd.c:SYSCALL_DEFINE2(eventfd2, unsigned int, count, int, flags)
./fs/eventfd.c:SYSCALL_DEFINE1(eventfd, unsigned int, count)
./fs/fcntl.c:SYSCALL_DEFINE3(fcntl, unsigned int, fd, unsigned int, cmd, unsigned long, arg)
./fs/fcntl.c:SYSCALL_DEFINE3(fcntl64, unsigned int, fd, unsigned int, cmd,
./fs/select.c:SYSCALL_DEFINE5(select, int, n, fd_set __user *, inp, fd_set __user *, outp,
./fs/select.c:SYSCALL_DEFINE6(pselect6, int, n, fd_set __user *, inp, fd_set __user *, outp,
./fs/select.c:SYSCALL_DEFINE1(old_select, struct sel_arg_struct __user *, arg)
./fs/select.c:SYSCALL_DEFINE3(poll, struct pollfd __user *, ufds, unsigned int, nfds,
./fs/select.c:SYSCALL_DEFINE5(ppoll, struct pollfd __user *, ufds, unsigned int, nfds,
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(utime, const char __user *, filename,
./fs/compat.c:COMPAT_SYSCALL_DEFINE4(utimensat, unsigned int, dfd, const char __user *, filename, struct compat_timespec __user *, t, int, flags)
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(futimesat, unsigned int, dfd, const char __user *, filename, struct compat_timeval __user *, t)
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(utimes, const char __user *, filename, struct compat_timeval __user *, t)
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(newstat, const char __user *, filename,
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(newlstat, const char __user *, filename,
./fs/compat.c:COMPAT_SYSCALL_DEFINE4(newfstatat, unsigned int, dfd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(newfstat, unsigned int, fd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(statfs, const char __user *, pathname, struct compat_statfs __user *, buf)
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(fstatfs, unsigned int, fd, struct compat_statfs __user *, buf)
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(statfs64, const char __user *, pathname, compat_size_t, sz, struct compat_statfs64 __user *, buf)
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(fstatfs64, unsigned int, fd, compat_size_t, sz, struct compat_statfs64 __user *, buf)
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(ustat, unsigned, dev, struct compat_ustat __user *, u)
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(fcntl64, unsigned int, fd, unsigned int, cmd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(fcntl, unsigned int, fd, unsigned int, cmd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE2(io_setup, unsigned, nr_reqs, u32 __user *, ctx32p)
./fs/compat.c:COMPAT_SYSCALL_DEFINE5(io_getevents, compat_aio_context_t, ctx_id,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(io_submit, compat_aio_context_t, ctx_id,
./fs/compat.c:COMPAT_SYSCALL_DEFINE5(mount, const char __user *, dev_name,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(old_readdir, unsigned int, fd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(getdents, unsigned int, fd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(getdents64, unsigned int, fd,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(open, const char __user *, filename, int, flags, umode_t, mode)
./fs/compat.c:COMPAT_SYSCALL_DEFINE4(openat, int, dfd, const char __user *, filename, int, flags, umode_t, mode)
./fs/compat.c:COMPAT_SYSCALL_DEFINE5(select, int, n, compat_ulong_t __user *, inp,
./fs/compat.c:COMPAT_SYSCALL_DEFINE1(old_select, struct compat_sel_arg_struct __user *, arg)
./fs/compat.c:COMPAT_SYSCALL_DEFINE6(pselect6, int, n, compat_ulong_t __user *, inp,
./fs/compat.c:COMPAT_SYSCALL_DEFINE5(ppoll, struct pollfd __user *, ufds,
./fs/compat.c:COMPAT_SYSCALL_DEFINE3(open_by_handle_at, int, mountdirfd,
./fs/file.c:SYSCALL_DEFINE3(dup3, unsigned int, oldfd, unsigned int, newfd, int, flags)
./fs/file.c:SYSCALL_DEFINE2(dup2, unsigned int, oldfd, unsigned int, newfd)
./fs/file.c:SYSCALL_DEFINE1(dup, unsigned int, fildes)
./fs/utimes.c:SYSCALL_DEFINE2(utime, char __user *, filename, struct utimbuf __user *, times)
./fs/utimes.c:SYSCALL_DEFINE4(utimensat, int, dfd, const char __user *, filename,
./fs/utimes.c:SYSCALL_DEFINE3(futimesat, int, dfd, const char __user *, filename,
./fs/utimes.c:SYSCALL_DEFINE2(utimes, char __user *, filename,
./fs/read_write.c:SYSCALL_DEFINE3(lseek, unsigned int, fd, off_t, offset, unsigned int, whence)
./fs/read_write.c:COMPAT_SYSCALL_DEFINE3(lseek, unsigned int, fd, compat_off_t, offset, unsigned int, whence)
./fs/read_write.c:SYSCALL_DEFINE5(llseek, unsigned int, fd, unsigned long, offset_high,
./fs/read_write.c:SYSCALL_DEFINE3(read, unsigned int, fd, char __user *, buf, size_t, count)
./fs/read_write.c:SYSCALL_DEFINE3(write, unsigned int, fd, const char __user *, buf,
./fs/read_write.c:SYSCALL_DEFINE4(pread64, unsigned int, fd, char __user *, buf,
./fs/read_write.c:SYSCALL_DEFINE4(pwrite64, unsigned int, fd, const char __user *, buf,
./fs/read_write.c:SYSCALL_DEFINE3(readv, unsigned long, fd, const struct iovec __user *, vec,
./fs/read_write.c:SYSCALL_DEFINE3(writev, unsigned long, fd, const struct iovec __user *, vec,
./fs/read_write.c:SYSCALL_DEFINE5(preadv, unsigned long, fd, const struct iovec __user *, vec,
./fs/read_write.c:SYSCALL_DEFINE5(pwritev, unsigned long, fd, const struct iovec __user *, vec,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE3(readv, compat_ulong_t, fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE4(preadv64, unsigned long, fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE5(preadv, compat_ulong_t, fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE3(writev, compat_ulong_t, fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE4(pwritev64, unsigned long, fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE5(pwritev, compat_ulong_t, fd,
./fs/read_write.c:SYSCALL_DEFINE4(sendfile, int, out_fd, int, in_fd, off_t __user *, offset, size_t, count)
./fs/read_write.c:SYSCALL_DEFINE4(sendfile64, int, out_fd, int, in_fd, loff_t __user *, offset, size_t, count)
./fs/read_write.c:COMPAT_SYSCALL_DEFINE4(sendfile, int, out_fd, int, in_fd,
./fs/read_write.c:COMPAT_SYSCALL_DEFINE4(sendfile64, int, out_fd, int, in_fd,
./fs/locks.c:SYSCALL_DEFINE2(flock, unsigned int, fd, unsigned int, cmd)
./fs/exec.c:SYSCALL_DEFINE1(uselib, const char __user *, library)
./fs/exec.c:SYSCALL_DEFINE3(execve,
./fs/exec.c:SYSCALL_DEFINE5(execveat,
./fs/exec.c:COMPAT_SYSCALL_DEFINE3(execve, const char __user *, filename,
./fs/exec.c:COMPAT_SYSCALL_DEFINE5(execveat, int, fd,
./fs/xattr.c:SYSCALL_DEFINE5(setxattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE5(lsetxattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE5(fsetxattr, int, fd, const char __user *, name,
./fs/xattr.c:SYSCALL_DEFINE4(getxattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE4(lgetxattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE4(fgetxattr, int, fd, const char __user *, name,
./fs/xattr.c:SYSCALL_DEFINE3(listxattr, const char __user *, pathname, char __user *, list,
./fs/xattr.c:SYSCALL_DEFINE3(llistxattr, const char __user *, pathname, char __user *, list,
./fs/xattr.c:SYSCALL_DEFINE3(flistxattr, int, fd, char __user *, list, size_t, size)
./fs/xattr.c:SYSCALL_DEFINE2(removexattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE2(lremovexattr, const char __user *, pathname,
./fs/xattr.c:SYSCALL_DEFINE2(fremovexattr, int, fd, const char __user *, name)
./fs/namei.c:SYSCALL_DEFINE4(mknodat, int, dfd, const char __user *, filename, umode_t, mode,
./fs/namei.c:SYSCALL_DEFINE3(mknod, const char __user *, filename, umode_t, mode, unsigned, dev)
./fs/namei.c:SYSCALL_DEFINE3(mkdirat, int, dfd, const char __user *, pathname, umode_t, mode)
./fs/namei.c:SYSCALL_DEFINE2(mkdir, const char __user *, pathname, umode_t, mode)
./fs/namei.c:SYSCALL_DEFINE1(rmdir, const char __user *, pathname)
./fs/namei.c:SYSCALL_DEFINE3(unlinkat, int, dfd, const char __user *, pathname, int, flag)
./fs/namei.c:SYSCALL_DEFINE1(unlink, const char __user *, pathname)
./fs/namei.c:SYSCALL_DEFINE3(symlinkat, const char __user *, oldname,
./fs/namei.c:SYSCALL_DEFINE2(symlink, const char __user *, oldname, const char __user *, newname)
./fs/namei.c:SYSCALL_DEFINE5(linkat, int, olddfd, const char __user *, oldname,
./fs/namei.c:SYSCALL_DEFINE2(link, const char __user *, oldname, const char __user *, newname)
./fs/namei.c:SYSCALL_DEFINE5(renameat2, int, olddfd, const char __user *, oldname,
./fs/namei.c:SYSCALL_DEFINE4(renameat, int, olddfd, const char __user *, oldname,
./fs/namei.c:SYSCALL_DEFINE2(rename, const char __user *, oldname, const char __user *, newname)
./fs/splice.c:SYSCALL_DEFINE4(vmsplice, int, fd, const struct iovec __user *, iov,
./fs/splice.c:COMPAT_SYSCALL_DEFINE4(vmsplice, int, fd, const struct compat_iovec __user *, iov32,
./fs/splice.c:SYSCALL_DEFINE6(splice, int, fd_in, loff_t __user *, off_in,
./fs/splice.c:SYSCALL_DEFINE4(tee, int, fdin, int, fdout, size_t, len, unsigned int, flags)
./fs/quota/quota.c:SYSCALL_DEFINE4(quotactl, unsigned int, cmd, const char __user *, special,
./fs/dcookies.c:SYSCALL_DEFINE3(lookup_dcookie, u64, cookie64, char __user *, buf, size_t, len)
./fs/dcookies.c:COMPAT_SYSCALL_DEFINE4(lookup_dcookie, u32, w0, u32, w1, char __user *, buf, compat_size_t, len)
./fs/sync.c:SYSCALL_DEFINE0(sync)
./fs/sync.c:SYSCALL_DEFINE1(syncfs, int, fd)
./fs/sync.c:SYSCALL_DEFINE1(fsync, unsigned int, fd)
./fs/sync.c:SYSCALL_DEFINE1(fdatasync, unsigned int, fd)
./fs/sync.c:SYSCALL_DEFINE4(sync_file_range, int, fd, loff_t, offset, loff_t, nbytes,
./fs/sync.c:SYSCALL_DEFINE4(sync_file_range2, int, fd, unsigned int, flags,
./fs/stat.c:SYSCALL_DEFINE2(stat, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(lstat, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(fstat, unsigned int, fd, struct __old_kernel_stat __user *, statbuf)
./fs/stat.c:SYSCALL_DEFINE2(newstat, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(newlstat, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE4(newfstatat, int, dfd, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(newfstat, unsigned int, fd, struct stat __user *, statbuf)
./fs/stat.c:SYSCALL_DEFINE4(readlinkat, int, dfd, const char __user *, pathname,
./fs/stat.c:SYSCALL_DEFINE3(readlink, const char __user *, path, char __user *, buf,
./fs/stat.c:SYSCALL_DEFINE2(stat64, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(lstat64, const char __user *, filename,
./fs/stat.c:SYSCALL_DEFINE2(fstat64, unsigned long, fd, struct stat64 __user *, statbuf)
./fs/stat.c:SYSCALL_DEFINE4(fstatat64, int, dfd, const char __user *, filename,
./fs/buffer.c:SYSCALL_DEFINE2(bdflush, int, func, long, data)
./fs/namespace.c:SYSCALL_DEFINE2(umount, char __user *, name, int, flags)
./fs/namespace.c:SYSCALL_DEFINE1(oldumount, char __user *, name)
./fs/namespace.c:SYSCALL_DEFINE5(mount, char __user *, dev_name, char __user *, dir_name,
./fs/namespace.c:SYSCALL_DEFINE2(pivot_root, const char __user *, new_root,
./fs/aio.c:SYSCALL_DEFINE2(io_setup, unsigned, nr_events, aio_context_t __user *, ctxp)
./fs/aio.c:SYSCALL_DEFINE1(io_destroy, aio_context_t, ctx)
./fs/aio.c:SYSCALL_DEFINE3(io_submit, aio_context_t, ctx_id, long, nr,
./fs/aio.c:SYSCALL_DEFINE3(io_cancel, aio_context_t, ctx_id, struct iocb __user *, iocb,
./fs/aio.c:SYSCALL_DEFINE5(io_getevents, aio_context_t, ctx_id,
./fs/ioctl.c:SYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd, unsigned long, arg)
./fs/fhandle.c:SYSCALL_DEFINE5(name_to_handle_at, int, dfd, const char __user *, name,
./fs/fhandle.c:SYSCALL_DEFINE3(open_by_handle_at, int, mountdirfd,
./fs/signalfd.c:SYSCALL_DEFINE4(signalfd4, int, ufd, sigset_t __user *, user_mask,
./fs/signalfd.c:SYSCALL_DEFINE3(signalfd, int, ufd, sigset_t __user *, user_mask,
./fs/signalfd.c:COMPAT_SYSCALL_DEFINE4(signalfd4, int, ufd,
./fs/signalfd.c:COMPAT_SYSCALL_DEFINE3(signalfd, int, ufd,
./fs/pipe.c:SYSCALL_DEFINE2(pipe2, int __user *, fildes, int, flags)
./fs/pipe.c:SYSCALL_DEFINE1(pipe, int __user *, fildes)
./fs/eventpoll.c:SYSCALL_DEFINE1(epoll_create1, int, flags)
./fs/eventpoll.c:SYSCALL_DEFINE1(epoll_create, int, size)
./fs/eventpoll.c:SYSCALL_DEFINE4(epoll_ctl, int, epfd, int, op, int, fd,
./fs/eventpoll.c:SYSCALL_DEFINE4(epoll_wait, int, epfd, struct epoll_event __user *, events,
./fs/eventpoll.c:SYSCALL_DEFINE6(epoll_pwait, int, epfd, struct epoll_event __user *, events,
./fs/eventpoll.c:COMPAT_SYSCALL_DEFINE6(epoll_pwait, int, epfd,
./fs/dcache.c:SYSCALL_DEFINE2(getcwd, char __user *, buf, unsigned long, size)
./fs/open.c:SYSCALL_DEFINE2(truncate, const char __user *, path, long, length)
./fs/open.c:COMPAT_SYSCALL_DEFINE2(truncate, const char __user *, path, compat_off_t, length)
./fs/open.c:SYSCALL_DEFINE2(ftruncate, unsigned int, fd, unsigned long, length)
./fs/open.c:COMPAT_SYSCALL_DEFINE2(ftruncate, unsigned int, fd, compat_ulong_t, length)
./fs/open.c:SYSCALL_DEFINE2(truncate64, const char __user *, path, loff_t, length)
./fs/open.c:SYSCALL_DEFINE2(ftruncate64, unsigned int, fd, loff_t, length)
./fs/open.c:SYSCALL_DEFINE4(fallocate, int, fd, int, mode, loff_t, offset, loff_t, len)
./fs/open.c:SYSCALL_DEFINE3(faccessat, int, dfd, const char __user *, filename, int, mode)
./fs/open.c:SYSCALL_DEFINE2(access, const char __user *, filename, int, mode)
./fs/open.c:SYSCALL_DEFINE1(chdir, const char __user *, filename)
./fs/open.c:SYSCALL_DEFINE1(fchdir, unsigned int, fd)
./fs/open.c:SYSCALL_DEFINE1(chroot, const char __user *, filename)
./fs/open.c:SYSCALL_DEFINE2(fchmod, unsigned int, fd, umode_t, mode)
./fs/open.c:SYSCALL_DEFINE3(fchmodat, int, dfd, const char __user *, filename, umode_t, mode)
./fs/open.c:SYSCALL_DEFINE2(chmod, const char __user *, filename, umode_t, mode)
./fs/open.c:SYSCALL_DEFINE5(fchownat, int, dfd, const char __user *, filename, uid_t, user,
./fs/open.c:SYSCALL_DEFINE3(chown, const char __user *, filename, uid_t, user, gid_t, group)
./fs/open.c:SYSCALL_DEFINE3(lchown, const char __user *, filename, uid_t, user, gid_t, group)
./fs/open.c:SYSCALL_DEFINE3(fchown, unsigned int, fd, uid_t, user, gid_t, group)
./fs/open.c:SYSCALL_DEFINE3(open, const char __user *, filename, int, flags, umode_t, mode)
./fs/open.c:SYSCALL_DEFINE4(openat, int, dfd, const char __user *, filename, int, flags,
./fs/open.c:SYSCALL_DEFINE2(creat, const char __user *, pathname, umode_t, mode)
./fs/open.c:SYSCALL_DEFINE1(close, unsigned int, fd)
./fs/open.c:SYSCALL_DEFINE0(vhangup)
./fs/timerfd.c:SYSCALL_DEFINE2(timerfd_create, int, clockid, int, flags)
./fs/timerfd.c:SYSCALL_DEFINE4(timerfd_settime, int, ufd, int, flags,
./fs/timerfd.c:SYSCALL_DEFINE2(timerfd_gettime, int, ufd, struct itimerspec __user *, otmr)
./fs/timerfd.c:COMPAT_SYSCALL_DEFINE4(timerfd_settime, int, ufd, int, flags,
./fs/timerfd.c:COMPAT_SYSCALL_DEFINE2(timerfd_gettime, int, ufd,
./fs/compat_ioctl.c:COMPAT_SYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd,
./fs/filesystems.c:SYSCALL_DEFINE3(sysfs, int, option, unsigned long, arg1, unsigned long, arg2)
./fs/notify/inotify/inotify_user.c:SYSCALL_DEFINE1(inotify_init1, int, flags)
./fs/notify/inotify/inotify_user.c:SYSCALL_DEFINE0(inotify_init)
./fs/notify/inotify/inotify_user.c:SYSCALL_DEFINE3(inotify_add_watch, int, fd, const char __user *, pathname,
./fs/notify/inotify/inotify_user.c:SYSCALL_DEFINE2(inotify_rm_watch, int, fd, __s32, wd)
./fs/notify/fanotify/fanotify_user.c:SYSCALL_DEFINE2(fanotify_init, unsigned int, flags, unsigned int, event_f_flags)
./fs/notify/fanotify/fanotify_user.c:SYSCALL_DEFINE5(fanotify_mark, int, fanotify_fd, unsigned int, flags,
./fs/notify/fanotify/fanotify_user.c:COMPAT_SYSCALL_DEFINE6(fanotify_mark,
./fs/statfs.c:SYSCALL_DEFINE2(statfs, const char __user *, pathname, struct statfs __user *, buf)
./fs/statfs.c:SYSCALL_DEFINE3(statfs64, const char __user *, pathname, size_t, sz, struct statfs64 __user *, buf)
./fs/statfs.c:SYSCALL_DEFINE2(fstatfs, unsigned int, fd, struct statfs __user *, buf)
./fs/statfs.c:SYSCALL_DEFINE3(fstatfs64, unsigned int, fd, size_t, sz, struct statfs64 __user *, buf)
./fs/statfs.c:SYSCALL_DEFINE2(ustat, unsigned, dev, struct ustat __user *, ubuf)
./.config.old:CONFIG_X86_VSYSCALL_EMULATION=y
./.config.old:CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
./samples/seccomp/bpf-fancy.c:		/* TODO: LOAD_SYSCALL_NR(arch) and enforce an arch */
./samples/seccomp/bpf-fancy.c:		LOAD_SYSCALL_NR,
./samples/seccomp/bpf-helper.h:#define LOAD_SYSCALL_NR \
./.config:CONFIG_X86_VSYSCALL_EMULATION=y
./.config:CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
./Documentation/static-keys.txt:SYSCALL_DEFINE0(getppid)
./Documentation/trace/ftrace-design.txt:HAVE_SYSCALL_TRACEPOINTS
./Documentation/trace/ftrace-design.txt:- Support the TIF_SYSCALL_TRACEPOINT thread flags.
./Documentation/trace/ftrace-design.txt:  this arch, define ARCH_HAS_SYSCALL_MATCH_SYM_NAME in asm/ftrace.h and
./Documentation/trace/ftrace-design.txt:- Tag this arch as HAVE_SYSCALL_TRACEPOINTS.
./block/ioprio.c:SYSCALL_DEFINE3(ioprio_set, int, which, int, who, int, ioprio)
./block/ioprio.c:SYSCALL_DEFINE2(ioprio_get, int, which, int, who)
./include/config/auto.conf:CONFIG_X86_VSYSCALL_EMULATION=y
./include/config/auto.conf:CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
./include/linux/linkage.h:#ifndef SYSCALL_ALIAS
./include/linux/linkage.h:#define SYSCALL_ALIAS(alias, name) asm(			\
./include/linux/timekeeper_internal.h:#elif defined(CONFIG_GENERIC_TIME_VSYSCALL_OLD)
./include/linux/syscalls.h: * for SYSCALL_DEFINE<n>/COMPAT_SYSCALL_DEFINE<n>
./include/linux/syscalls.h:#define SYSCALL_TRACE_ENTER_EVENT(sname)				\
./include/linux/syscalls.h:#define SYSCALL_TRACE_EXIT_EVENT(sname)					\
./include/linux/syscalls.h:#define SYSCALL_METADATA(sname, nb, ...)			\
./include/linux/syscalls.h:	SYSCALL_TRACE_ENTER_EVENT(sname);			\
./include/linux/syscalls.h:	SYSCALL_TRACE_EXIT_EVENT(sname);			\
./include/linux/syscalls.h:#define SYSCALL_METADATA(sname, nb, ...)
./include/linux/syscalls.h:#define SYSCALL_DEFINE0(sname)					\
./include/linux/syscalls.h:	SYSCALL_METADATA(_##sname, 0);				\
./include/linux/syscalls.h:#define SYSCALL_DEFINE1(name, ...) SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINE2(name, ...) SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINE4(name, ...) SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINE5(name, ...) SYSCALL_DEFINEx(5, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINE6(name, ...) SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)
./include/linux/syscalls.h:#define SYSCALL_DEFINEx(x, sname, ...)				\
./include/linux/syscalls.h:	SYSCALL_METADATA(sname, x, __VA_ARGS__)			\
./include/linux/syscalls.h:	__SYSCALL_DEFINEx(x, sname, __VA_ARGS__)
./include/linux/syscalls.h:#define __SYSCALL_DEFINEx(x, name, ...)					\
./include/linux/tracepoint.h:#ifdef CONFIG_HAVE_SYSCALL_TRACEPOINTS
./include/linux/tracepoint.h:#endif /* CONFIG_HAVE_SYSCALL_TRACEPOINTS */
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE0(name) \
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE1(name, ...) \
./include/linux/compat.h:        COMPAT_SYSCALL_DEFINEx(1, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE2(name, ...) \
./include/linux/compat.h:	COMPAT_SYSCALL_DEFINEx(2, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE3(name, ...) \
./include/linux/compat.h:	COMPAT_SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE4(name, ...) \
./include/linux/compat.h:	COMPAT_SYSCALL_DEFINEx(4, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE5(name, ...) \
./include/linux/compat.h:	COMPAT_SYSCALL_DEFINEx(5, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINE6(name, ...) \
./include/linux/compat.h:	COMPAT_SYSCALL_DEFINEx(6, _##name, __VA_ARGS__)
./include/linux/compat.h:#define COMPAT_SYSCALL_DEFINEx(x, name, ...)				\
./include/linux/tracehook.h: * This will be called if %TIF_SYSCALL_TRACE has been set, when the
./include/linux/tracehook.h: * This will be called if %TIF_SYSCALL_TRACE has been set, when the
./include/linux/tracehook.h: * In this case, %TIF_SYSCALL_TRACE might not be set.
./include/generated/autoconf.h:#define CONFIG_X86_VSYSCALL_EMULATION 1
./include/generated/autoconf.h:#define CONFIG_HAVE_SYSCALL_TRACEPOINTS 1
./include/asm-generic/syscall.h:#ifndef _ASM_SYSCALL_H
./include/asm-generic/syscall.h:#define _ASM_SYSCALL_H	1
./include/asm-generic/syscall.h: * call exit tracing (due to TIF_SYSCALL_TRACE or TIF_SYSCALL_AUDIT),
./include/asm-generic/syscall.h: * from a system call, due to %TIF_SYSCALL_TRACE or %TIF_SYSCALL_AUDIT.
./include/asm-generic/syscall.h: * from a system call, due to %TIF_SYSCALL_TRACE or %TIF_SYSCALL_AUDIT.
./include/asm-generic/syscall.h: * from a system call, due to %TIF_SYSCALL_TRACE or %TIF_SYSCALL_AUDIT.
./include/asm-generic/syscall.h: * entry to a system call, due to %TIF_SYSCALL_TRACE or %TIF_SYSCALL_AUDIT.
./include/asm-generic/syscall.h: * entry to a system call, due to %TIF_SYSCALL_TRACE or %TIF_SYSCALL_AUDIT.
./include/asm-generic/syscall.h: * call, due to %TIF_SYSCALL_TRACE, %TIF_SYSCALL_AUDIT, or %TIF_SECCOMP.
./include/asm-generic/syscall.h:#endif	/* _ASM_SYSCALL_H */
./include/uapi/linux/audit.h:#define AUDIT_SYSCALL_CLASSES 16
./include/uapi/asm-generic/unistd.h:#if __BITS_PER_LONG == 32 || defined(__SYSCALL_COMPAT)
./include/uapi/asm-generic/unistd.h:#ifdef __SYSCALL_COMPAT
./include/uapi/asm-generic/unistd.h:#ifdef __ARCH_WANT_SYSCALL_NO_AT
./include/uapi/asm-generic/unistd.h:#endif /* __ARCH_WANT_SYSCALL_NO_AT */
./include/uapi/asm-generic/unistd.h:#ifdef __ARCH_WANT_SYSCALL_NO_FLAGS
./include/uapi/asm-generic/unistd.h:#endif /* __ARCH_WANT_SYSCALL_NO_FLAGS */
./include/uapi/asm-generic/unistd.h:#if (__BITS_PER_LONG == 32 || defined(__SYSCALL_COMPAT)) && \
./include/uapi/asm-generic/unistd.h:     defined(__ARCH_WANT_SYSCALL_OFF_T)
./include/uapi/asm-generic/unistd.h:#ifdef __ARCH_WANT_SYSCALL_DEPRECATED
./include/uapi/asm-generic/unistd.h:#endif /* __ARCH_WANT_SYSCALL_DEPRECATED */
./include/uapi/asm-generic/unistd.h:#if __BITS_PER_LONG == 64 && !defined(__SYSCALL_COMPAT)
./include/trace/syscall.h:#ifndef _TRACE_SYSCALL_H
./include/trace/syscall.h:#define _TRACE_SYSCALL_H
./include/trace/syscall.h:#if defined(CONFIG_TRACEPOINTS) && defined(CONFIG_HAVE_SYSCALL_TRACEPOINTS)
./include/trace/syscall.h:	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
./include/trace/syscall.h:		set_tsk_thread_flag(p, TIF_SYSCALL_TRACEPOINT);
./include/trace/syscall.h:		clear_tsk_thread_flag(p, TIF_SYSCALL_TRACEPOINT);
./include/trace/syscall.h:#endif /* _TRACE_SYSCALL_H */
./include/trace/events/syscalls.h:#ifdef CONFIG_HAVE_SYSCALL_TRACEPOINTS
./include/trace/events/syscalls.h:#endif /* CONFIG_HAVE_SYSCALL_TRACEPOINTS */
