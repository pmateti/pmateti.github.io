
# -*- mode: org -*-
#+date: 2018-10-10
#+TITLE: Hardening Lecture #2
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Kernel Details

1. As a collection of files: vmlinuz, initrd, /lib/modules/*.
2. Kernel is NOT a process.
3. Kernel, like processes, uses pages, segments of virtual memory.
   1. The "text" (machine code) of a kernel is expected to remain
      unchanged during execution.  Just like a process.
   2. Kernel uses a stack.  Has private and public methods.  The
      public methods are offered to user processes as system calls.
4. Kernel discovers the pathname of init program, and invokes it.
5. Except for init, all other processes are created at the request of
   init or its children.  =pstree=
6. Several psuedo file volumes: /proc, /sys, /dev

* Kernel Responsibilities (not bugs)

Kernel should

1. check the integrity of init.
1. track the provenance (of processes)
1. track network activity

* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
