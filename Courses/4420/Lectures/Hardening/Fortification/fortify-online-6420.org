
# -*- mode: org -*-
# -*- org-export-html-postamble:t; -*-
#+STARTUP:showeverything
#+TITLE: Fortify a Linux System
#+AUTHOR: Prabhaker Mateti
#+OPTIONS: toc:1
#+LINK_HOME: ../Top
#+LINK_UP: ../../index.html
#+DESCRIPTION: Online CEG6420 Course
#+STYLE: <style> P {text-align: justify} code {font-family: monospace; font-size: 10pt;color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-export-html-preamble-format (("en" "%d<br><a href=\"http://cecs.wright.edu/~pmateti/Courses/4420/\">OnLine CEG 6420: Computer Security</a>"))
#+BIND: org-export-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2013 &bull; <a href=\"http://www.wright.edu/~pmateti\"> www.wright.edu/~pmateti</a> &bull; %d"))

* Educational Objectives

Students should be able to

1. Determine minimal sofware that meets the expected system functionality
1. Uninstall unneeded components
1. Install security improving components

* What is Fortification?

1. Install and configure additional software that improves security
1. Removing unnecessary services/software
1. Security updates/ patching the OS and system utilities
1. Example Fortifications
   1. Encrypted File Systems
   1. Virus detection and removal
   1. Rootkit Detection and Removal
   1. Continuous System Audit
   1. Containers (Lightweight virtualization)
   1. SELinux security enhancements from NSA

* Malware Removal
1. Malware = viruses + worms + Trojans
1. Linux/Unix can be infected with malware.
1. E.g.,  "The Hand of Thief" 2013 banking Trojan protype
1. A Linux server can scan and remove viruses from Windows files

* Rootkit Removal
** What are Rootkits, Trojans and Backdoors
** How do rootkit programs work?
** Contents of Linux Root Kit 5
** Detecting Rootkis
** Removal of Rootkits

* Logging without DoS

There is no proper logging in standard Linux kernel. In any system
worthy of being protected, logging is necessary when system calls that
require super user privileges are invoked, when a CPU general
protection error occurs, when kernel denies a resource allocation to a
process, and during module loading. Logging will help detect issues at
least after the fact. On the other hand, there have been exploits that
generated enormous amounts of logging causing a DoS.

* Information Leakage

The kernel data files in /proc directory give information about the
running kernel. The address of various exported kernel symbols can be
obtained from /proc/ksyms. An attacker having access to /dev/kmem can
corrupt the kernel data structures with the help of symbol addresses
in this file.

* Authentication Enhancements

1. We can enhance user account security through machine-generated
   passwords, biometric identification or access tokens.

1. It is also important to not to trust other hosts until after host
   keys are verified. 

1. Linux Loadable Kernel Modules (LKM) do not have a proper
   authentication system before inserting the modules.


* Race Conditions

1. Control of a resource common to >= 2 processes
1. Prevention
1. Detection

* System Audit
1. Tripwire
1. Lynis
1. LSAT (Linux Security Auditing Tool)
1. dmidecode (BIOS info)
1. lshw
1. Bastille
1. Logwatch
1. Psad

* Lab Experiment on Fortify
1. Takes 1 to 2 hours by the student
1. Practices things discussed above, but not all
   1. Includes list: tripwire, ?webmin
   1. Excluded list: password cracking (a separate lab)

1. Download a Linux ISO we provide (time taken not counted)
1. Student installs on a USBD or in a virtual box (10 - 15 min)
1. Examines this system (30 min)
1. Fortifies this system (60 min)
1. Writes a lab report (30 min)


* Reading List

1. Readings are grouped into Required and Recommended.
1. Required Readings are a must read.  These are sources of exam
   questions.
1. Recommended Readings bring more insight into the topic.  But exam
   questions will not be derived from these.
1. Some of our "readings" are actually web site visits.

** Required Reading  (3 hrs)

1. Prabhaker Mateti, RootKits.  2013.

1. Prabhaker Mateti, Race Conditions.  2013.

1.  http://en.wikipedia.org/ wiki/ Category:Linux Security Software, 2013.

** Recommended Reading

1. http://chkrootkit.org/
  chkrootkit is a tool to locally check for signs of a rootkit. 2009.
  Typically installed in Debian.  Highly recommended
  visit/reading.

1.  http://rkhunter.sourceforge.net/ The Rootkit Hunter
    project, 2012. Highly recommended visit/reading.

1. Dave Dittrich, "Root Kits and hiding files/directories/processes
   after a break-in", Date: 2002/01/05,
   http://staff.washington.edu/ dittrich/ misc/ faqs/rootkits.faq

1. http://packetstormsecurity.com/ Collection of rootkits.



