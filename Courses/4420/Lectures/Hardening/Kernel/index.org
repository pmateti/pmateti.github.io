
# -*- mode: org -*-
#+date: 2018-10-10
#+TITLE: Hardening A Linux Kernel
#+AUTHOR: Prabhaker Mateti
#+HTML_LINK_HOME: ../../Top/index.html
#+HTML_LINK_UP: ../
#+HTML_HEAD: <style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
#+BIND: org-html-preamble-format (("en" "<a href=\"../../\"> ../../</a> | <a href=./>NoSlides</a>"))
#+BIND: org-html-postamble-format (("en" "<hr size=1>Copyright &copy; 2018 <a href=\"http://www.wright.edu/~pmateti\">www.wright.edu/~pmateti</a> &bull; %d"))
#+STARTUP:showeverything
#+OPTIONS: toc:0

* Background

1. [[../BuildKernel]] Overview of Kernel Source and How to Build
   a Kernel, Deploying the Kernel.

* Overview

1. This article is about: Kernel bugs, and Applying patches.

** Scope of Kernel Hardening in this Course

1. We should be able to apply the tools of Development of Software
   without Security Holes.

1. We should be able to gather the patches delivered by experts since
   the last such harvest.

1. We should be able to patch the publicly released kernel, and build
   a new hardened kernel.  We select the patches from the above
   harvest.  We may omit some.  The reasons for both select/ omit are
   documented.

1. We are not expecting to discover new bugs that are worthy of being
   flashed across the world tech news sites.

1. Limited by the time and lectures we can devote to this topic.



* Kernel Security Modules

1. The Linux Kernel Security Module (LKSM) mechanism permits new
   kernel extensions. 
1. These extensions are not actually loadable kernel modules.
   Instead, they are selectable at build-time via
   CONFIG_DEFAULT_SECURITY and can be overridden at boot-time via the
   "security=..." kernel command line argument
1. The primary users of the LSM interface are Mandatory Access Control
   (MAC) extensions.
1. =cat /sys/kernel/security/lsm= A list of the active security
   modules 
1. The following grep results are from a build of Ubuntu standard kernel:
   #+begin_src bash
# grep CONFIG_DEFAULT_SECURITY /boot/config-4.18.0-10-generic 
# CONFIG_DEFAULT_SECURITY_SELINUX is not set
# CONFIG_DEFAULT_SECURITY_SMACK is not set
# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
CONFIG_DEFAULT_SECURITY_APPARMOR=y
# CONFIG_DEFAULT_SECURITY_DAC is not set
CONFIG_DEFAULT_SECURITY="apparmor"
#+end_src

* Add/ Delete/ Freeze System Calls

1. It is not difficult to add system calls to the kernel.
1. Using the Linux Kernel Modules mechanisms, Add/ Delete/ Freeze
   System Calls can be done while the kernel is running.
1. The Lab Lx TBD link gives you practical experience of doing this.

** Why?
** Kernel without Modules
** Security Implications

* References

1. https://www.kernel.org/doc/html/v4.19/admin-guide/LSM/index.html
   Linux Security Module Usage 2018

1. https://www.kernel.org/doc/html/v4.19/admin-guide/security-bugs.html
   Kernel Bug reporting, and Bug hunting.  2018


* End
# Local variables:
# after-save-hook: org-html-export-to-html
# end:
