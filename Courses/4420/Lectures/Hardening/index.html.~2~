<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2019-10-29 Tue 11:45 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Hardening Linux Kernel + Sys Progs</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Prabhaker Mateti" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style> P,li {text-align: justify} code {color: brown;} @media screen {BODY {margin: 10%} }</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="org-div-home-and-up">
 <a accesskey="h" href="../"> UP </a>
 |
 <a accesskey="H" href="../../Top/index.html"> HOME </a>
</div><div id="preamble" class="status">
<a href="../../"> ../../</a> | <a href=./>NoSlides</a>
</div>
<div id="content">
<h1 class="title">Hardening Linux Kernel + Sys Progs</h1>

<div id="outline-container-org7ce5a1a" class="outline-2">
<h2 id="org7ce5a1a"><span class="section-number-2">1</span> Security Improvements</h2>
<div class="outline-text-2" id="text-1">
<ol class="org-ol">
<li>Recall Config vs Fortification vs Hardening
<a href="../Fortification/">../Fortification/</a></li>

<li>Build and Deploy a Kernel, with selected patches applied.  <a href="./BuildKernel">./BuildKernel</a></li>
<li>Past Kernel Exploits and Patches <a href="../KernelExploits">../KernelExploits</a></li>
<li>Ideas for Improving Kernel Security <a href="./SecureKernel">./SecureKernel</a></li>
<li>Hardening System Programs <a href="./SysProgs">./SysProgs</a></li>
</ol>
</div>
</div>

<div id="outline-container-org59db192" class="outline-2">
<h2 id="org59db192"><span class="section-number-2">2</span> Hardening Labs</h2>
<div class="outline-text-2" id="text-2">
<ol class="org-ol">
<li>Lab on Hardening the Kernel <a href="./SecureKernel/kernel-lab.html">./SecureKernel/kernel-lab.html</a></li>
<li>Lab on SysCall Add/ Delete/ Freeze  <a href="./SysCalls/lab-syscalls.html">./SysCalls/lab-syscalls.html</a></li>
<li>Lab on Hardening System Programs <a href="./SysProgs/lab-sysprogs.html">./SysProgs/lab-sysprogs.html</a>
<ol class="org-ol">
<li>Fall 2019 This lab is not required.</li>
</ol></li>
</ol>
</div>
</div>

<div id="outline-container-org5c03af6" class="outline-2">
<h2 id="org5c03af6"><span class="section-number-2">3</span> Case Study: Hardening an FTP + NFS + Web Server</h2>
<div class="outline-text-2" id="text-3">
<p>
An operating system provides various facilities for processes that do
a wide variety of jobs. A server machine is dedicated to serve a
particular type of requests. In a server, all the facilities provided
by the operating system are not required. Attackers can exploit these
unnecessary features to compromise the system. Some of these features
are required only during certain period of time such as during system
initialization. Some of them are not required at any time. In Linux
kernel, for example, loadable kernel module (LKM) support, is required
only during system initialization. We recommend eliminating them at
compile-time or freezing them dynamically or at least, restricting
them for better security.
</p>

<ol class="org-ol">
<li>Disable unneeded system calls after initialization.</li>
<li>Cannot reenable.</li>

<li>Read-Only File System: Attackers with root privileges can have
access to any file.  He can also access raw devices and corrupt
the file system on it.  We should mount important file volumes as
read-only.  But the ordinary mount cannot securely accomplish that
because of access to raw devices.  A read-only file system must
disable file-write system calls and this would also prevent
modifying file system through raw devices.</li>
</ol>
</div>

<div id="outline-container-org3b752bf" class="outline-3">
<h3 id="org3b752bf"><span class="section-number-3">3.1</span> Lab Experiment on Harden</h3>
<div class="outline-text-3" id="text-3-1">
<p>
You may wish to do this experiment on your own home PC.  Except for the
steps that replace files in /boot, you do not need to be logged in as
root.
</p>

<ol class="org-ol">
<li>Download the latest bundle of source code of Linux from
<a href="https://www.kernel.org/">https://www.kernel.org/</a> pub/ linux/ kernel/ Unpack it into
some-directory-of-yours/linux-version-number, and establish a
symbolic link named <code>linux</code> to it.</li>

<li>Select any 5 components from the list of Building a Secure Linux
Kernel.  Build your kernel.</li>

<li>Reboot into the new kernel booting from the LXU (Linux-on-USBD)</li>
</ol>
<p>
.
   Verify that LXU works properly when its original kernel is replaced
   by this one.
</p>

<ol class="org-ol">
<li>Develop a quick demo that demonstrates the enhanced security of the kernel.</li>

<li>Bonus Points: Recompile the Linux kernel omitting all features
unnecessary for us.  Merge all needed drivers etc into the kernel.
That is, loadable modules, and initrd are not needed any more.
Verify that LXU works properly when its original kernel is
replaced by this one.</li>

<li>Bonus Points: Recompile the Linux kernel, but using a compiler
other than gcc, omitting all features unnecessary for us.  Do keep
the kernel module structure intact.  Verify that LXU works properly
when its original kernel is replaced by this one.</li>

<li>Describe in detail your kernel config and observations.</li>
</ol>
</div>
</div>

<div id="outline-container-orgf2258b8" class="outline-3">
<h3 id="orgf2258b8"><span class="section-number-3">3.2</span> Trusted OS Loader</h3>
<div class="outline-text-3" id="text-3-2">
<ol class="org-ol">
<li>TrustedGRUB extends the GRUB bootloader with TCG support.  This
makes it possible to provide a secure bootstrap architecture.  The
whole boot process is measured and - by support of a Trusted
Platform Module (TPM) - the system integrity is verifiable.</li>

<li><a href="https://github.com/Rohde-Schwarz/TrustedGRUB2">https://github.com/Rohde-Schwarz/TrustedGRUB2</a></li>
</ol>
</div>
</div>
</div>

<div id="outline-container-orgc7aec4f" class="outline-2">
<h2 id="orgc7aec4f"><span class="section-number-2">4</span> Recommended Reading</h2>
<div class="outline-text-2" id="text-4">
<ol class="org-ol">
<li>Sowgandh S.  Gadi, Security Hardened Kernels for Linux Servers,
<a href="http://cecs.wright.edu/">http://cecs.wright.edu/</a> ~pmateti/ GradStudents/ SunilGadi/
sgadi-ms-thesis.pdf MS Thesis, 2004, Advisor: Prabhaker Mateti,
Wright State U.</li>

<li>Karthik Mohanasundaram, Security Hardening of the Process init of
Linux, MS Thesis, 2004.  Advisor: Prabhaker Mateti, Wright State
U.</li>

<li><a href="http://www.debian.org/security/">http://www.debian.org/security/</a> Look at the section marked Recent
Advisories.</li>

<li><a href="http://seclists.org/fulldisclosure/">http://seclists.org/fulldisclosure/</a></li>

<li><a href="http://security.stackexchange.com/">http://security.stackexchange.com/</a> Become familiar with the nature
and scope of this website.</li>
</ol>
</div>
</div>


<div id="outline-container-org91cbed3" class="outline-2">
<h2 id="org91cbed3"><span class="section-number-2">5</span> End</h2>
<div class="outline-text-2" id="text-5">
</div>
</div>
</div>
<div id="postamble" class="status">
<hr size=1>Copyright &copy; 2018 <a href="http://www.wright.edu/~pmateti">www.wright.edu/~pmateti</a> &bull; 2019-10-07
</div>
</body>
</html>
